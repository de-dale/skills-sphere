!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!w[e]||!v[e])return;for(var n in v[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(m[n]=t[n]);0==--y&&0===b&&k()}(e,n),t&&t(e,n)};var n,r=!0,o="c3c447882867c2cb8657",a=1e4,i={},l=[],u=[];function s(e){var t=j[e];if(!t)return O;var r=function(r){return t.hot.active?(j[r]?-1===j[r].parents.indexOf(e)&&j[r].parents.push(e):(l=[e],n=r),-1===t.children.indexOf(r)&&t.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+e),l=[]),O(r)},o=function(e){return{configurable:!0,enumerable:!0,get:function(){return O[e]},set:function(t){O[e]=t}}};for(var a in O)Object.prototype.hasOwnProperty.call(O,a)&&"e"!==a&&Object.defineProperty(r,a,o(a));return r.e=function(e){return"ready"===d&&f("prepare"),b++,O.e(e).then(t,function(e){throw t(),e});function t(){b--,"prepare"===d&&(g[e]||x(e),0===b&&0===y&&k())}},r}var c=[],d="idle";function f(e){d=e;for(var t=0;t<c.length;t++)c[t].call(null,e)}var p,m,h,y=0,b=0,g={},v={},w={};function C(e){return+e+""===e?+e:e}function _(e){if("idle"!==d)throw new Error("check() is only allowed in idle status");return r=e,f("check"),(t=a,t=t||1e4,new Promise(function(e,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var r=new XMLHttpRequest,a=O.p+""+o+".hot-update.json";r.open("GET",a,!0),r.timeout=t,r.send(null)}catch(e){return n(e)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)n(new Error("Manifest request to "+a+" timed out."));else if(404===r.status)e();else if(200!==r.status&&304!==r.status)n(new Error("Manifest request to "+a+" failed."));else{try{var t=JSON.parse(r.responseText)}catch(e){return void n(e)}e(t)}}})).then(function(e){if(!e)return f("idle"),null;v={},g={},w=e.c,h=e.h,f("prepare");var t=new Promise(function(e,t){p={resolve:e,reject:t}});m={};return x(0),"prepare"===d&&0===b&&0===y&&k(),t});var t}function x(e){w[e]?(v[e]=!0,y++,function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");n.charset="utf-8",n.src=O.p+""+e+"."+o+".hot-update.js",t.appendChild(n)}(e)):g[e]=!0}function k(){f("ready");var e=p;if(p=null,e)if(r)Promise.resolve().then(function(){return E(r)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var n in m)Object.prototype.hasOwnProperty.call(m,n)&&t.push(C(n));e.resolve(t)}}function E(t){if("ready"!==d)throw new Error("apply() is only allowed in ready status");var n,r,a,u,s;function c(e){for(var t=[e],n={},r=t.slice().map(function(e){return{chain:[e],id:e}});r.length>0;){var o=r.pop(),a=o.id,i=o.chain;if((u=j[a])&&!u.hot._selfAccepted){if(u.hot._selfDeclined)return{type:"self-declined",chain:i,moduleId:a};if(u.hot._main)return{type:"unaccepted",chain:i,moduleId:a};for(var l=0;l<u.parents.length;l++){var s=u.parents[l],c=j[s];if(c){if(c.hot._declinedDependencies[a])return{type:"declined",chain:i.concat([s]),moduleId:a,parentId:s};-1===t.indexOf(s)&&(c.hot._acceptedDependencies[a]?(n[s]||(n[s]=[]),p(n[s],[a])):(delete n[s],t.push(s),r.push({chain:i.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}t=t||{};var y={},b=[],g={},v=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var _ in m)if(Object.prototype.hasOwnProperty.call(m,_)){var x;s=C(_);var k=!1,E=!1,T=!1,S="";switch((x=m[_]?c(s):{type:"disposed",moduleId:_}).chain&&(S="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":t.onDeclined&&t.onDeclined(x),t.ignoreDeclined||(k=new Error("Aborted because of self decline: "+x.moduleId+S));break;case"declined":t.onDeclined&&t.onDeclined(x),t.ignoreDeclined||(k=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+S));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(x),t.ignoreUnaccepted||(k=new Error("Aborted because "+s+" is not accepted"+S));break;case"accepted":t.onAccepted&&t.onAccepted(x),E=!0;break;case"disposed":t.onDisposed&&t.onDisposed(x),T=!0;break;default:throw new Error("Unexception type "+x.type)}if(k)return f("abort"),Promise.reject(k);if(E)for(s in g[s]=m[s],p(b,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,s)&&(y[s]||(y[s]=[]),p(y[s],x.outdatedDependencies[s]));T&&(p(b,[x.moduleId]),g[s]=v)}var P,I=[];for(r=0;r<b.length;r++)s=b[r],j[s]&&j[s].hot._selfAccepted&&I.push({module:s,errorHandler:j[s].hot._selfAccepted});f("dispose"),Object.keys(w).forEach(function(e){!1===w[e]&&function(e){delete installedChunks[e]}(e)});for(var A,N,R=b.slice();R.length>0;)if(s=R.pop(),u=j[s]){var M={},U=u.hot._disposeHandlers;for(a=0;a<U.length;a++)(n=U[a])(M);for(i[s]=M,u.hot.active=!1,delete j[s],delete y[s],a=0;a<u.children.length;a++){var D=j[u.children[a]];D&&((P=D.parents.indexOf(s))>=0&&D.parents.splice(P,1))}}for(s in y)if(Object.prototype.hasOwnProperty.call(y,s)&&(u=j[s]))for(N=y[s],a=0;a<N.length;a++)A=N[a],(P=u.children.indexOf(A))>=0&&u.children.splice(P,1);for(s in f("apply"),o=h,g)Object.prototype.hasOwnProperty.call(g,s)&&(e[s]=g[s]);var L=null;for(s in y)if(Object.prototype.hasOwnProperty.call(y,s)&&(u=j[s])){N=y[s];var F=[];for(r=0;r<N.length;r++)if(A=N[r],n=u.hot._acceptedDependencies[A]){if(-1!==F.indexOf(n))continue;F.push(n)}for(r=0;r<F.length;r++){n=F[r];try{n(N)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:s,dependencyId:N[r],error:e}),t.ignoreErrored||L||(L=e)}}}for(r=0;r<I.length;r++){var H=I[r];s=H.module,l=[s];try{O(s)}catch(e){if("function"==typeof H.errorHandler)try{H.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:s,error:n,originalError:e}),t.ignoreErrored||L||(L=n),L||(L=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:s,error:e}),t.ignoreErrored||L||(L=e)}}return L?(f("fail"),Promise.reject(L)):(f("idle"),new Promise(function(e){e(b)}))}var j={};function O(t){if(j[t])return j[t].exports;var r=j[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var r=0;r<e.length;r++)t._acceptedDependencies[e[r]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},check:_,apply:E,status:function(e){if(!e)return d;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var t=c.indexOf(e);t>=0&&c.splice(t,1)},data:i[e]};return n=void 0,t}(t),parents:(u=l,l=[],u),children:[]};return e[t].call(r.exports,r,r.exports,s(t)),r.l=!0,r.exports}O.m=e,O.c=j,O.d=function(e,t,n){O.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},O.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},O.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return O.d(t,"a",t),t},O.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},O.p="",O.h=function(){return o},s("./src/index.js")(O.s="./src/index.js")}({"./node_modules/classnames/index.js":function(e,t,n){var r;
      /*!
        Copyright (c) 2016 Jed Watson.
        Licensed under the MIT License (MIT), see
        http://jedwatson.github.io/classnames
      */
      /*!
        Copyright (c) 2016 Jed Watson.
        Licensed under the MIT License (MIT), see
        http://jedwatson.github.io/classnames
      */
      !function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var a=typeof r;if("string"===a||"number"===a)e.push(r);else if(Array.isArray(r))e.push(o.apply(null,r));else if("object"===a)for(var i in r)n.call(r,i)&&r[i]&&e.push(i)}}return e.join(" ")}void 0!==e&&e.exports?e.exports=o:void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/card.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,'.card-shape {\n    background-color: black;\n    border-color: black;\n    border-radius: 0.5em;\n    border-style: solid;\n    border-width: 0.08em;\n    box-sizing: border-box;\n    padding: 0.3em;\n    width: 18.4em;\n    height: 25.6em;\n    font-family: "Book Antiqua", serif;\n    font-size: large;\n}\n\n.landscape {\n    height: 18.4em;\n    width: 25.6em;\n}\n',""]),t.locals={"card-shape":"card-shape",landscape:"landscape"}},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,'.card {\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    /*\n  background-image: url("data:image/png;base64, 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");\n  /**/\n    background-color: rgba(192, 192, 192, 1);\n    border-radius: 0.30em;\n    padding: 0.15em;\n    width: 100%;\n    height: 100%;\n}\n\n.card>:first-child {\n    margin-top: 0.30em;\n}\n\n.card>:last-child {\n    margin-bottom: 0.30em;\n}\n\n.card-item {\n    background-color: rgba(230, 230, 230, 0.9);\n    border-style: solid;\n    border-radius: 0.30em;\n    border-width: 0.15em;\n    overflow: hidden;\n    margin-top: -0.15em;\n    margin-bottom: 0;\n    margin-left: 0.30em;\n    margin-right: 0.30em;\n    padding-top: 0.15em;\n    padding-bottom: 0.15em;\n    padding-left: 0.30em;\n    padding-right: 0.30em;\n}\n',""]),t.locals={card:"card","card-item":"card-item"}},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/field/card-field.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).i(n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css"),void 0),t.push([e.i,".card-field-container {\n\n    min-height: 1.2em;\n    max-height: 1.2em;\n\n    display: flex;\n    justify-content: space-between;\n\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n.card-field-container > * {\n    flex-grow: 1;\n}\n\n.card-field-header {\n    font-weight: bold;\n}\n\n.card-field-separator {\n    text-align: center;\n}\n\n.card-field-value {\n    font-family: sans-serif;\n    font-variant: small-caps;\n    text-transform: lowercase;\n    text-align: right;\n}\n",""]),t.locals={"card-field-container":"card-field-container "+n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css").locals["card-item"],"card-field-header":"card-field-header","card-field-separator":"card-field-separator","card-field-value":"card-field-value"}},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/text/card-text.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).i(n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css"),void 0),t.push([e.i,".card-text {\n\n    flex-grow: 1;\n    text-align: justify;\n}\n",""]),t.locals={"card-text":"card-text "+n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css").locals["card-item"]}},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/title/card-title.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).i(n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css"),void 0),t.push([e.i,".card-title {\n\n    margin-left: 0;\n    margin-right: 0;\n    z-index: 10;\n\n    min-height: 1.2em;\n    max-height: 1.2em;\n\n    font-size: 1.1em;\n    font-weight: bold;\n}\n",""]),t.locals={"card-title":"card-title "+n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css").locals["card-item"]}},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/list/cardListContainer.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".card-container {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.card-container > * {\n    margin: 0.08em;\n}\n\n.card-container-toolbar {\n\n}\n.card-container-items  > * {\n    margin: 0.08em;\n    display: inline-block;\n}\n",""]),t.locals={"card-container":"card-container","card-container-toolbar":"card-container-toolbar","card-container-items":"card-container-items"}},"./node_modules/css-loader/index.js??ref--5-1!./src/cards/theme/card-themes.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,"/** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n * Colors\n *\n * .card.background-color = maincolor\n * .card-item.background-color = maincolor +40% lighter, opacity 0.75\n * .card-item.border-color = maincolor +40% lighter, opacity 1\n */\n.white.card-shape {\n    background-color: rgba(255, 255, 255, 1);\n}\n\n.white .card {\n    background-color: rgba(255, 255, 255, 1);\n}\n\n.white .card-item {\n    background-color: rgba(255, 255, 255, 0.75);\n    border-color: rgba(255, 255, 255, 1);\n}\n\n.white .card-field {\n    border-color: rgba(255, 255, 255, 1);\n}\n\n.green .card {\n    background-color: rgba(0, 128, 0, 1);\n}\n\n.green .card-item {\n    background-color: rgba(102, 230, 102, 0.75);\n    border-color: rgba(102, 230, 102, 1);\n}\n\n.green .card-field {\n    border-color: rgba(102, 230, 102, 1);\n}\n\n.green-light .card {\n    background-color: rgba(64, 192, 64, 1);\n    background-color: rgba(64, 128, 64, 1);\n}\n\n.green-light .card-item {\n    background-color: rgba(166, 255, 166, 0.75);\n    border-color: rgba(166, 255, 166, 1);\n}\n\n.green-light .card-field {\n    border-color: rgba(166, 255, 166, 1);\n}\n\n.green-lizard .card {\n    background-color: rgba(64, 128, 0, 1);\n}\n\n.green-lizard .card-item {\n    background-color: rgba(166, 230, 102, 0.75);\n    border-color: rgba(166, 230, 102, 1);\n}\n\n.green-lizard .card-field {\n    border-color: rgba(166, 230, 102, 1);\n}\n\n.blue .card {\n    background-color: rgba(0, 0, 128, 1);\n    /*color: rgba(230, 230, 230, 1);*/\n}\n\n.blue .card-item {\n    background-color: rgba(102, 102, 230, 0.75);\n    border-color: rgba(102, 102, 230, 1);\n}\n\n.blue .card-field {\n    border-color: rgba(102, 102, 230, 1);\n}\n\n.blue-light .card {\n    background-color: rgba(64, 64, 192, 1);\n}\n\n.blue-light .card-item {\n    background-color: rgba(166, 166, 255, 0.75);\n    border-color: rgba(166, 166, 255, 1);\n}\n\n.blue-light .card-field {\n    border-color: rgba(166, 166, 255, 1);\n}\n\n.red .card {\n    background-color: rgba(128, 0, 0, 1);\n    /*color: rgba(230, 230, 230, 1);*/\n}\n\n.red .card-item {\n    background-color: rgba(205, 102, 102, 0.75);\n    border-color: rgba(205, 102, 102, 1);\n}\n\n.red .card-field {\n    border-color: rgba(205, 102, 102, 1);\n}\n\n.red-light .card {\n    background-color: rgba(192, 64, 64, 1);\n}\n\n.red-light .card-item {\n    background-color: rgba(230, 192, 192, 0.75);\n    border-color: rgba(230, 192, 192, 1);\n}\n\n.red-light .card-field {\n    border-color: rgba(230, 192, 192, 1);\n}\n\n.red-gray .card {\n    background-color: rgba(128, 0, 0, 1);\n}\n\n.red-gray .card-item {\n    background-color: rgba(205, 166, 166, 0.75);\n    border-color: rgba(205, 166, 166, 1);\n}\n\n.red-gray .card-field {\n    border-color: rgba(205, 166, 166, 1);\n}\n\n.cyan .card {\n    background-color: rgba(0, 128, 128, 1);\n}\n\n.cyan .card-item {\n    background-color: rgba(166, 230, 230, 0.75);\n    border-color: rgba(166, 230, 230, 1);\n}\n\n.magenta .card {\n    background-color: rgba(128, 0, 128, 1);\n}\n\n.magenta .card-item {\n    background-color: rgba(205, 166, 205, 0.75);\n    border-color: rgba(205, 166, 205, 1);\n}\n\n.yellow .card {\n    background-color: rgba(128, 128, 0, 1);\n}\n\n.yellow .card-item {\n    background-color: rgba(230, 230, 166, 0.75);\n    border-color: rgba(230, 230, 166, 1);\n}\n\n.yellow-light .card {\n    /*background-color: rgba(192, 192, 0, 1);*/\n    background-color: rgba(255, 255, 77, 1);\n}\n\n.yellow-light .card-item {\n    /*background-color: rgba(255, 255, 77, 0.75);*/\n    background-color: rgba(192, 192, 0, 0.75);\n    border-color: rgba(90, 90, 0, 1);\n}\n\n\n.action .card {\n    background-color: rgba(128, 0, 0, 1);\n}\n\n.action .card-item {\n    background-color: rgba(205, 166, 166, 0.75);\n    border-color: rgba(205, 166, 166, 1);\n}\n\n.action .card-field {\n    border-color: rgba(205, 166, 166, 1);\n}\n\n\n.ability .card {\n    background-color: rgba(0, 128, 128, 1);\n}\n\n.ability .card-item {\n    background-color: rgba(166, 230, 230, 0.75);\n    border-color: rgba(166, 230, 230, 1);\n}\n",""]),t.locals={white:"white","card-shape":"card-shape",card:"card","card-item":"card-item","card-field":"card-field",green:"green","green-light":"green-light","green-lizard":"green-lizard",blue:"blue","blue-light":"blue-light",red:"red","red-light":"red-light","red-gray":"red-gray",cyan:"cyan",magenta:"magenta",yellow:"yellow","yellow-light":"yellow-light",action:"action",ability:"ability"}},"./node_modules/css-loader/index.js??ref--5-1!./src/codex/codex.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".codex-toolbar {\n\n}\n",""]),t.locals={"codex-toolbar":"codex-toolbar"}},"./node_modules/css-loader/index.js??ref--5-1!./src/css/screen.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,"body {\n\tbackground-color: #eeeeee;\n}\n",""])},"./node_modules/css-loader/index.js??ref--5-1!./src/deck/deck.css":function(e,t,n){(t=e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".deck {\n}\n\n.deck > * {\n    margin: 0.08em;\n    display: inline-block;\n}\n\n.deck .page-break {\n    break-after: page;\n}\n\n.deck .card-shape {\n\tfont-size: small;\n}\n\n.deck .landscape {\n\twriting-mode: vertical-rl;\n}\n\n.deck .landscape.card-shape {\n\twidth: 18.4em;\n\theight: 25.6em;\n}\n\n.deck .landscape .card>:first-child {\n\tmargin-right: 0.30em;\n}\n\n.deck .landscape .card>:last-child {\n\tmargin-left: 0.30em;\n}\n\n.deck .landscape .card-item {\n\tmargin-right: -0.15em;\n\tmargin-left: 0;\n\tmargin-top: 0.30em;\n\tmargin-bottom: 0.30em;\n\tpadding-right: 0.15em;\n\tpadding-left: 0.15em;\n\tpadding-top: 0.30em;\n\tpadding-bottom: 0.30em;\n}\n\n.deck .landscape .card-item.emphasized {\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n}\n\n.deck .landscape .card-item.no-padding {\n\tborder-style: none;\n\tborder-color: rgba(0, 0, 0, 0);\n\tpadding: 0;\n}\n\n.deck .landscape .card-item.short {\n\tmin-height: initial;\n\tmax-height: initial;\n\tmin-width: 1.2em;\n\tmax-width: 1.2em;\n}\n\n.deck .landscape .card-item.no-padding.short {\n\tmin-width: 1.8em;\n\tmax-width: 1.8em;\n}\n\n.deck .landscape .card-header {\n\t\n}\n\n.deck .landscape .card-field {\n\tpadding-right: 0.15em;\n\tpadding-left: 0.15em;\n\tpadding-top: 0.30em;\n\tpadding-bottom: 0.30em;\n}\n\n.deck .landscape .card-field+.card-field {\n\tmargin-left: inherit;\n\tmargin-top: -0.15em;\n}\n\n/*.landscape .card-icon {}\n\n.landscape .card-icon:before {\n  transform: rotate(90deg);\n}\n\n.landscape .card-field-right .icon-laby {\n  display: block;\n  position: relative;\n  transform: rotate(90deg);\n}*/\n.deck .landscape .card-image picture {\n\tdisplay: block;\n\tposition: relative;\n\ttransform: rotate(90deg);\n\ttransform-origin: 0 0;\n\t-webkit-transform: rotate(90deg);\n\t-moz-transform: rotate(90deg);\n\t-o-transform: rotate(90deg);\n}\n",""]),t.locals={deck:"deck","page-break":"page-break","card-shape":"card-shape",landscape:"landscape",card:"card","card-item":"card-item",emphasized:"emphasized","no-padding":"no-padding",short:"short","card-header":"card-header","card-field":"card-field","card-image":"card-image"}},"./node_modules/css-loader/lib/css-base.js":function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}var i;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},"./node_modules/fbjs/lib/EventListener.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/emptyFunction.js"),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=o},"./node_modules/fbjs/lib/ExecutionEnvironment.js":function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},"./node_modules/fbjs/lib/containsNode.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/isTextNode.js");e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},"./node_modules/fbjs/lib/emptyFunction.js":function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},"./node_modules/fbjs/lib/emptyObject.js":function(e,t,n){"use strict";e.exports={}},"./node_modules/fbjs/lib/focusNode.js":function(e,t,n){"use strict";e.exports=function(e){try{e.focus()}catch(e){}}},"./node_modules/fbjs/lib/getActiveElement.js":function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},"./node_modules/fbjs/lib/invariant.js":function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,l,u){if(r(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,a,i,l,u],d=0;(s=new Error(t.replace(/%s/g,function(){return c[d++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}},"./node_modules/fbjs/lib/isNode.js":function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},"./node_modules/fbjs/lib/isTextNode.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/isNode.js");e.exports=function(e){return r(e)&&3==e.nodeType}},"./node_modules/fbjs/lib/shallowEqual.js":function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},"./node_modules/file-saver/FileSaver.js":function(e,t,n){var r,o=o||function(e){"use strict";if(!(void 0===e||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var t=function(){return e.URL||e.webkitURL||e},n=e.document.createElementNS("http://www.w3.org/1999/xhtml","a"),r="download"in n,o=/constructor/i.test(e.HTMLElement)||e.safari,a=/CriOS\/[\d]+/.test(navigator.userAgent),i=function(t){(e.setImmediate||e.setTimeout)(function(){throw t},0)},l=function(e){setTimeout(function(){"string"==typeof e?t().revokeObjectURL(e):e.remove()},4e4)},u=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},s=function(s,c,d){d||(s=u(s));var f,p=this,m="application/octet-stream"===s.type,h=function(){!function(e,t,n){for(var r=(t=[].concat(t)).length;r--;){var o=e["on"+t[r]];if("function"==typeof o)try{o.call(e,n||e)}catch(e){i(e)}}}(p,"writestart progress write writeend".split(" "))};if(p.readyState=p.INIT,r)return f=t().createObjectURL(s),void setTimeout(function(){var e,t;n.href=f,n.download=c,e=n,t=new MouseEvent("click"),e.dispatchEvent(t),h(),l(f),p.readyState=p.DONE});!function(){if((a||m&&o)&&e.FileReader){var n=new FileReader;return n.onloadend=function(){var t=a?n.result:n.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(t,"_blank")||(e.location.href=t),t=void 0,p.readyState=p.DONE,h()},n.readAsDataURL(s),void(p.readyState=p.INIT)}f||(f=t().createObjectURL(s)),m?e.location.href=f:e.open(f,"_blank")||(e.location.href=f);p.readyState=p.DONE,h(),l(f)}()},c=s.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,n){return t=t||e.name||"download",n||(e=u(e)),navigator.msSaveOrOpenBlob(e,t)}:(c.abort=function(){},c.readyState=c.INIT=0,c.WRITING=1,c.DONE=2,c.error=c.onwritestart=c.onprogress=c.onwrite=c.onabort=c.onerror=c.onwriteend=null,function(e,t,n){return new s(e,t||e.name||"download",n)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);
      /*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */void 0!==e&&e.exports?e.exports.saveAs=o:null!==n("./node_modules/webpack/buildin/amd-define.js")&&null!==n("./node_modules/webpack/buildin/amd-options.js")&&(void 0===(r=function(){return o}.call(t,n,t,e))||(e.exports=r))},"./node_modules/object-assign/index.js":function(e,t,n){"use strict";
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(l[s]=n[s]);if(r){i=r(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(l[i[c]]=n[i[c]])}}return l}},"./node_modules/prop-types/factoryWithThrowingShims.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/emptyFunction.js"),o=n("./node_modules/fbjs/lib/invariant.js"),a=n("./node_modules/prop-types/lib/ReactPropTypesSecret.js");e.exports=function(){function e(e,t,n,r,i,l){l!==a&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},"./node_modules/prop-types/index.js":function(e,t,n){e.exports=n("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/react-dom/cjs/react-dom.production.min.js":function(e,t,n){"use strict";
      /** @license React v16.2.0
       * react-dom.production.min.js
       *
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */var r=n("./node_modules/react/index.js"),o=n("./node_modules/fbjs/lib/ExecutionEnvironment.js"),a=n("./node_modules/object-assign/index.js"),i=n("./node_modules/fbjs/lib/emptyFunction.js"),l=n("./node_modules/fbjs/lib/EventListener.js"),u=n("./node_modules/fbjs/lib/getActiveElement.js"),s=n("./node_modules/fbjs/lib/shallowEqual.js"),c=n("./node_modules/fbjs/lib/containsNode.js"),d=n("./node_modules/fbjs/lib/focusNode.js"),f=n("./node_modules/fbjs/lib/emptyObject.js");function p(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}r||p("227");var m={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function h(e,t){return(e&t)===t}var y={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=y,n=e.Properties||{},r=e.DOMAttributeNamespaces||{},o=e.DOMAttributeNames||{};for(var a in e=e.DOMMutationMethods||{},n){b.hasOwnProperty(a)&&p("48",a);var i=a.toLowerCase(),l=n[a];1>=(i={attributeName:i,attributeNamespace:null,propertyName:a,mutationMethod:null,mustUseProperty:h(l,t.MUST_USE_PROPERTY),hasBooleanValue:h(l,t.HAS_BOOLEAN_VALUE),hasNumericValue:h(l,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:h(l,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:h(l,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:h(l,t.HAS_STRING_BOOLEAN_VALUE)}).hasBooleanValue+i.hasNumericValue+i.hasOverloadedBooleanValue||p("50",a),o.hasOwnProperty(a)&&(i.attributeName=o[a]),r.hasOwnProperty(a)&&(i.attributeNamespace=r[a]),e.hasOwnProperty(a)&&(i.mutationMethod=e[a]),b[a]=i}}},b={};function g(e,t){if(m.hasOwnProperty(e)||2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return m.hasOwnProperty(e)?e=!0:(t=v(e))?e=t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:e="data-"===(e=e.toLowerCase().slice(0,5))||"aria-"===e,e;case"undefined":case"number":case"string":case"object":return!0;default:return!1}}function v(e){return b.hasOwnProperty(e)?b[e]:null}var w=y,C=w.MUST_USE_PROPERTY,_=w.HAS_BOOLEAN_VALUE,x=w.HAS_NUMERIC_VALUE,k=w.HAS_POSITIVE_NUMERIC_VALUE,E=w.HAS_OVERLOADED_BOOLEAN_VALUE,j=w.HAS_STRING_BOOLEAN_VALUE,O={Properties:{allowFullScreen:_,async:_,autoFocus:_,autoPlay:_,capture:E,checked:C|_,cols:k,contentEditable:j,controls:_,default:_,defer:_,disabled:_,download:E,draggable:j,formNoValidate:_,hidden:_,loop:_,multiple:C|_,muted:C|_,noValidate:_,open:_,playsInline:_,readOnly:_,required:_,reversed:_,rows:k,rowSpan:x,scoped:_,seamless:_,selected:C|_,size:k,start:x,span:k,spellCheck:j,style:0,tabIndex:0,itemScope:_,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:j},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},T=w.HAS_STRING_BOOLEAN_VALUE,S="http://www.w3.org/1999/xlink",P="http://www.w3.org/XML/1998/namespace",I={Properties:{autoReverse:T,externalResourcesRequired:T,preserveAlpha:T},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:S,xlinkArcrole:S,xlinkHref:S,xlinkRole:S,xlinkShow:S,xlinkTitle:S,xlinkType:S,xmlBase:P,xmlLang:P,xmlSpace:P}},A=/[\-\:]([a-z])/g;function N(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(A,N);I.Properties[t]=0,I.DOMAttributeNames[t]=e}),w.injectDOMPropertyConfig(O),w.injectDOMPropertyConfig(I);var R={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!=typeof e.invokeGuardedCallback&&p("197"),M=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){M.apply(R,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(R.invokeGuardedCallback.apply(this,arguments),R.hasCaughtError()){var s=R.clearCaughtError();R._hasRethrowError||(R._hasRethrowError=!0,R._rethrowError=s)}},rethrowCaughtError:function(){return function(){if(R._hasRethrowError){var e=R._rethrowError;throw R._rethrowError=null,R._hasRethrowError=!1,e}}.apply(R,arguments)},hasCaughtError:function(){return R._hasCaughtError},clearCaughtError:function(){if(R._hasCaughtError){var e=R._caughtError;return R._caughtError=null,R._hasCaughtError=!1,e}p("198")}};function M(e,t,n,r,o,a,i,l,u){R._hasCaughtError=!1,R._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){R._caughtError=e,R._hasCaughtError=!0}}var U=null,D={};function L(){if(U)for(var e in D){var t=D[e],n=U.indexOf(e);if(-1<n||p("96",e),!H[n])for(var r in t.extractEvents||p("97",e),H[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;z.hasOwnProperty(l)&&p("99",l),z[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&F(u[o],i,l);o=!0}else a.registrationName?(F(a.registrationName,i,l),o=!0):o=!1;o||p("98",r,e)}}}function F(e,t,n){B[e]&&p("100",e),B[e]=t,V[e]=t.eventTypes[n].dependencies}var H=[],z={},B={},V={};function q(e){U&&p("101"),U=Array.prototype.slice.call(e),L()}function K(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];D.hasOwnProperty(t)&&D[t]===r||(D[t]&&p("102",t),D[t]=r,n=!0)}n&&L()}var W=Object.freeze({plugins:H,eventNameDispatchConfigs:z,registrationNameModules:B,registrationNameDependencies:V,possibleRegistrationNames:null,injectEventPluginOrder:q,injectEventPluginsByName:K}),G=null,Q=null,Y=null;function X(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=Y(r),R.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function J(e,t){return null==t&&p("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function Z(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var $=null;function ee(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)X(e,t,n[o],r[o]);else n&&X(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function te(e){return ee(e,!0)}function ne(e){return ee(e,!1)}var re={injectEventPluginOrder:q,injectEventPluginsByName:K};function oe(e,t){var n=e.stateNode;if(!n)return null;var r=G(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&p("231",t,typeof n),n)}function ae(e,t,n,r){for(var o,a=0;a<H.length;a++){var i=H[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=J(o,i))}return o}function ie(e){e&&($=J($,e))}function le(e){var t=$;$=null,t&&(Z(t,e?te:ne),$&&p("95"),R.rethrowCaughtError())}var ue=Object.freeze({injection:re,getListener:oe,extractEvents:ae,enqueueEvents:ie,processEventQueue:le}),se=Math.random().toString(36).slice(2),ce="__reactInternalInstance$"+se,de="__reactEventHandlers$"+se;function fe(e){if(e[ce])return e[ce];for(var t=[];!e[ce];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=void 0,r=e[ce];if(5===r.tag||6===r.tag)return r;for(;e&&(r=e[ce]);e=t.pop())n=r;return n}function pe(e){if(5===e.tag||6===e.tag)return e.stateNode;p("33")}function me(e){return e[de]||null}var he=Object.freeze({precacheFiberNode:function(e,t){t[ce]=e},getClosestInstanceFromNode:fe,getInstanceFromNode:function(e){return!(e=e[ce])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:pe,getFiberCurrentPropsFromNode:me,updateFiberProps:function(e,t){e[de]=t}});function ye(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function be(e,t,n){for(var r=[];e;)r.push(e),e=ye(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function ge(e,t,n){(t=oe(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=J(n._dispatchListeners,t),n._dispatchInstances=J(n._dispatchInstances,e))}function ve(e){e&&e.dispatchConfig.phasedRegistrationNames&&be(e._targetInst,ge,e)}function we(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;be(t=t?ye(t):null,ge,e)}}function Ce(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=oe(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=J(n._dispatchListeners,t),n._dispatchInstances=J(n._dispatchInstances,e))}function _e(e){e&&e.dispatchConfig.registrationName&&Ce(e._targetInst,null,e)}function xe(e){Z(e,ve)}function ke(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=ye(l))i++;l=0;for(var u=a;u;u=ye(u))l++;for(;0<i-l;)o=ye(o),i--;for(;0<l-i;)a=ye(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=ye(o),a=ye(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=ye(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=ye(r);for(r=0;r<o.length;r++)Ce(o[r],"bubbled",e);for(e=n.length;0<e--;)Ce(n[e],"captured",t)}var Ee=Object.freeze({accumulateTwoPhaseDispatches:xe,accumulateTwoPhaseDispatchesSkipTarget:function(e){Z(e,we)},accumulateEnterLeaveDispatches:ke,accumulateDirectDispatches:function(e){Z(e,_e)}}),je=null;function Oe(){return!je&&o.canUseDOM&&(je="textContent"in document.documentElement?"textContent":"innerText"),je}var Te={_root:null,_startText:null,_fallbackText:null};function Se(){if(Te._fallbackText)return Te._fallbackText;var e,t,n=Te._startText,r=n.length,o=Pe(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return Te._fallbackText=o.slice(e,1<t?1-t:void 0),Te._fallbackText}function Pe(){return"value"in Te._root?Te._root.value:Te._root[Oe()]}var Ie="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Ae={type:null,target:null,currentTarget:i.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function Ne(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?i.thatReturnsTrue:i.thatReturnsFalse,this.isPropagationStopped=i.thatReturnsFalse,this}function Re(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Me(e){e instanceof this||p("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ue(e){e.eventPool=[],e.getPooled=Re,e.release=Me}function De(e,t,n,r){return Ne.call(this,e,t,n,r)}function Le(e,t,n,r){return Ne.call(this,e,t,n,r)}a(Ne.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=i.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=i.thatReturnsTrue)},persist:function(){this.isPersistent=i.thatReturnsTrue},isPersistent:i.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<Ie.length;t++)this[Ie[t]]=null}}),Ne.Interface=Ae,Ne.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;a(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=a({},this.Interface,t),e.augmentClass=this.augmentClass,Ue(e)},Ue(Ne),Ne.augmentClass(De,{data:null}),Ne.augmentClass(Le,{data:null});var Fe,He=[9,13,27,32],ze=o.canUseDOM&&"CompositionEvent"in window,Be=null;if(o.canUseDOM&&"documentMode"in document&&(Be=document.documentMode),Fe=o.canUseDOM&&"TextEvent"in window&&!Be){var Ve=window.opera;Fe=!("object"==typeof Ve&&"function"==typeof Ve.version&&12>=parseInt(Ve.version(),10))}var qe=Fe,Ke=o.canUseDOM&&(!ze||Be&&8<Be&&11>=Be),We=String.fromCharCode(32),Ge={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Qe=!1;function Ye(e,t){switch(e){case"topKeyUp":return-1!==He.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function Xe(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Je=!1;var Ze={eventTypes:Ge,extractEvents:function(e,t,n,r){var o;if(ze)e:{switch(e){case"topCompositionStart":var a=Ge.compositionStart;break e;case"topCompositionEnd":a=Ge.compositionEnd;break e;case"topCompositionUpdate":a=Ge.compositionUpdate;break e}a=void 0}else Je?Ye(e,n)&&(a=Ge.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(a=Ge.compositionStart);return a?(Ke&&(Je||a!==Ge.compositionStart?a===Ge.compositionEnd&&Je&&(o=Se()):(Te._root=r,Te._startText=Pe(),Je=!0)),a=De.getPooled(a,t,n,r),o?a.data=o:null!==(o=Xe(n))&&(a.data=o),xe(a),o=a):o=null,(e=qe?function(e,t){switch(e){case"topCompositionEnd":return Xe(t);case"topKeyPress":return 32!==t.which?null:(Qe=!0,We);case"topTextInput":return(e=t.data)===We&&Qe?null:e;default:return null}}(e,n):function(e,t){if(Je)return"topCompositionEnd"===e||!ze&&Ye(e,t)?(e=Se(),Te._root=null,Te._startText=null,Te._fallbackText=null,Je=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return Ke?null:t.data;default:return null}}(e,n))?((t=Le.getPooled(Ge.beforeInput,t,n,r)).data=e,xe(t)):t=null,[o,t]}},$e=null,et=null,tt=null;function nt(e){if(e=Q(e)){$e&&"function"==typeof $e.restoreControlledState||p("194");var t=G(e.stateNode);$e.restoreControlledState(e.stateNode,e.type,t)}}var rt={injectFiberControlledHostComponent:function(e){$e=e}};function ot(e){et?tt?tt.push(e):tt=[e]:et=e}function at(){if(et){var e=et,t=tt;if(tt=et=null,nt(e),t)for(e=0;e<t.length;e++)nt(t[e])}}var it=Object.freeze({injection:rt,enqueueStateRestore:ot,restoreStateIfNeeded:at});function lt(e,t){return e(t)}var ut=!1;function st(e,t){if(ut)return lt(e,t);ut=!0;try{return lt(e,t)}finally{ut=!1,at()}}var ct,dt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ft(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dt[e.type]:"textarea"===t}function pt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function mt(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n=(t="on"+e)in document;return n||((n=document.createElement("div")).setAttribute(t,"return;"),n="function"==typeof n[t]),!n&&ct&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function ht(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function yt(e){e._valueTracker||(e._valueTracker=function(e){var t=ht(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}(e))}function bt(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ht(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}o.canUseDOM&&(ct=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var gt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};function vt(e,t,n){return(e=Ne.getPooled(gt.change,e,t,n)).type="change",ot(n),xe(e),e}var wt=null,Ct=null;function _t(e){ie(e),le(!1)}function xt(e){if(bt(pe(e)))return e}function kt(e,t){if("topChange"===e)return t}var Et=!1;function jt(){wt&&(wt.detachEvent("onpropertychange",Ot),Ct=wt=null)}function Ot(e){"value"===e.propertyName&&xt(Ct)&&st(_t,e=vt(Ct,e,pt(e)))}function Tt(e,t,n){"topFocus"===e?(jt(),Ct=n,(wt=t).attachEvent("onpropertychange",Ot)):"topBlur"===e&&jt()}function St(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return xt(Ct)}function Pt(e,t){if("topClick"===e)return xt(t)}function It(e,t){if("topInput"===e||"topChange"===e)return xt(t)}o.canUseDOM&&(Et=mt("input")&&(!document.documentMode||9<document.documentMode));var At={eventTypes:gt,_isInputEventSupported:Et,extractEvents:function(e,t,n,r){var o=t?pe(t):window,a=o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type)var i=kt;else if(ft(o))if(Et)i=It;else{i=St;var l=Tt}else!(a=o.nodeName)||"input"!==a.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type||(i=Pt);if(i&&(i=i(e,t)))return vt(i,n,r);l&&l(e,o,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&(e=""+o.value,o.getAttribute("value")!==e&&o.setAttribute("value",e))}};function Nt(e,t,n,r){return Ne.call(this,e,t,n,r)}Ne.augmentClass(Nt,{view:null,detail:null});var Rt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Mt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Rt[e])&&!!t[e]}function Ut(){return Mt}function Dt(e,t,n,r){return Ne.call(this,e,t,n,r)}Nt.augmentClass(Dt,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ut,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var Lt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Ft={eventTypes:Lt,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?fe(t):null):e=null,e===t)return null;var a=null==e?o:pe(e);o=null==t?o:pe(t);var i=Dt.getPooled(Lt.mouseLeave,e,n,r);return i.type="mouseleave",i.target=a,i.relatedTarget=o,(n=Dt.getPooled(Lt.mouseEnter,t,n,r)).type="mouseenter",n.target=o,n.relatedTarget=a,ke(i,n,e,t),[i,n]}},Ht=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function zt(e){return"string"==typeof(e=e.type)?e:"function"==typeof e?e.displayName||e.name:null}function Bt(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function Vt(e){return!!(e=e._reactInternalFiber)&&2===Bt(e)}function qt(e){2!==Bt(e)&&p("188")}function Kt(e){var t=e.alternate;if(!t)return 3===(t=Bt(e))&&p("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return qt(o),e;if(i===r)return qt(o),t;i=i.sibling}p("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||p("189")}}n.alternate!==r&&p("190")}return 3!==n.tag&&p("188"),n.stateNode.current===n?e:t}var Wt=[];function Gt(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=fe(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],Yt(e.topLevelType,t,e.nativeEvent,pt(e.nativeEvent))}var Qt=!0,Yt=void 0;function Xt(e){Qt=!!e}function Jt(e,t,n){return n?l.listen(n,t,$t.bind(null,e)):null}function Zt(e,t,n){return n?l.capture(n,t,$t.bind(null,e)):null}function $t(e,t){if(Qt){var n=pt(t);if(null===(n=fe(n))||"number"!=typeof n.tag||2===Bt(n)||(n=null),Wt.length){var r=Wt.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{st(Gt,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Wt.length&&Wt.push(e)}}}var en=Object.freeze({get _enabled(){return Qt},get _handleTopLevel(){return Yt},setHandleTopLevel:function(e){Yt=e},setEnabled:Xt,isEnabled:function(){return Qt},trapBubbledEvent:Jt,trapCapturedEvent:Zt,dispatchEvent:$t});function tn(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var nn={animationend:tn("Animation","AnimationEnd"),animationiteration:tn("Animation","AnimationIteration"),animationstart:tn("Animation","AnimationStart"),transitionend:tn("Transition","TransitionEnd")},rn={},on={};function an(e){if(rn[e])return rn[e];if(!nn[e])return e;var t,n=nn[e];for(t in n)if(n.hasOwnProperty(t)&&t in on)return rn[e]=n[t];return""}o.canUseDOM&&(on=document.createElement("div").style,"AnimationEvent"in window||(delete nn.animationend.animation,delete nn.animationiteration.animation,delete nn.animationstart.animation),"TransitionEvent"in window||delete nn.transitionend.transition);var ln={topAbort:"abort",topAnimationEnd:an("animationend")||"animationend",topAnimationIteration:an("animationiteration")||"animationiteration",topAnimationStart:an("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:an("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},un={},sn=0,cn="_reactListenersID"+(""+Math.random()).slice(2);function dn(e){return Object.prototype.hasOwnProperty.call(e,cn)||(e[cn]=sn++,un[e[cn]]={}),un[e[cn]]}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var hn=o.canUseDOM&&"documentMode"in document&&11>=document.documentMode,yn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},bn=null,gn=null,vn=null,wn=!1;function Cn(e,t){if(wn||null==bn||bn!==u())return null;var n=bn;return"selectionStart"in n&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,vn&&s(vn,n)?null:(vn=n,(e=Ne.getPooled(yn.select,gn,e,t)).type="select",e.target=bn,xe(e),e)}var _n={eventTypes:yn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=dn(a),o=V.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?pe(t):window,e){case"topFocus":(ft(a)||"true"===a.contentEditable)&&(bn=a,gn=t,vn=null);break;case"topBlur":vn=gn=bn=null;break;case"topMouseDown":wn=!0;break;case"topContextMenu":case"topMouseUp":return wn=!1,Cn(n,r);case"topSelectionChange":if(hn)break;case"topKeyDown":case"topKeyUp":return Cn(n,r)}return null}};function xn(e,t,n,r){return Ne.call(this,e,t,n,r)}function kn(e,t,n,r){return Ne.call(this,e,t,n,r)}function En(e,t,n,r){return Ne.call(this,e,t,n,r)}function jn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}Ne.augmentClass(xn,{animationName:null,elapsedTime:null,pseudoElement:null}),Ne.augmentClass(kn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Nt.augmentClass(En,{relatedTarget:null});var On={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Tn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function Sn(e,t,n,r){return Ne.call(this,e,t,n,r)}function Pn(e,t,n,r){return Ne.call(this,e,t,n,r)}function In(e,t,n,r){return Ne.call(this,e,t,n,r)}function An(e,t,n,r){return Ne.call(this,e,t,n,r)}function Nn(e,t,n,r){return Ne.call(this,e,t,n,r)}Nt.augmentClass(Sn,{key:function(e){if(e.key){var t=On[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=jn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Tn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ut,charCode:function(e){return"keypress"===e.type?jn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?jn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Dt.augmentClass(Pn,{dataTransfer:null}),Nt.augmentClass(In,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ut}),Ne.augmentClass(An,{propertyName:null,elapsedTime:null,pseudoElement:null}),Dt.augmentClass(Nn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var Rn={},Mn={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t="top"+t]},Rn[e]=n,Mn[t]=n});var Un={eventTypes:Rn,extractEvents:function(e,t,n,r){var o=Mn[e];if(!o)return null;switch(e){case"topKeyPress":if(0===jn(n))return null;case"topKeyDown":case"topKeyUp":e=Sn;break;case"topBlur":case"topFocus":e=En;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":e=Dt;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":e=Pn;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":e=In;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":e=xn;break;case"topTransitionEnd":e=An;break;case"topScroll":e=Nt;break;case"topWheel":e=Nn;break;case"topCopy":case"topCut":case"topPaste":e=kn;break;default:e=Ne}return xe(t=e.getPooled(o,t,n,r)),t}};Yt=function(e,t,n,r){ie(e=ae(e,t,n,r)),le(!1)},re.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),G=he.getFiberCurrentPropsFromNode,Q=he.getInstanceFromNode,Y=he.getNodeFromInstance,re.injectEventPluginsByName({SimpleEventPlugin:Un,EnterLeaveEventPlugin:Ft,ChangeEventPlugin:At,SelectEventPlugin:_n,BeforeInputEventPlugin:Ze});var Dn=[],Ln=-1;function Fn(e){0>Ln||(e.current=Dn[Ln],Dn[Ln]=null,Ln--)}function Hn(e,t){Dn[++Ln]=e.current,e.current=t}new Set;var zn={current:f},Bn={current:!1},Vn=f;function qn(e){return Wn(e)?Vn:zn.current}function Kn(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Wn(e){return 2===e.tag&&null!=e.type.childContextTypes}function Gn(e){Wn(e)&&(Fn(Bn),Fn(zn))}function Qn(e,t,n){null!=zn.cursor&&p("168"),Hn(zn,t),Hn(Bn,n)}function Yn(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||p("108",zt(e)||"Unknown",o);return a({},t,n)}function Xn(e){if(!Wn(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,Vn=zn.current,Hn(zn,t),Hn(Bn,Bn.current),!0}function Jn(e,t){var n=e.stateNode;if(n||p("169"),t){var r=Yn(e,Vn);n.__reactInternalMemoizedMergedChildContext=r,Fn(Bn),Fn(zn),Hn(zn,r)}else Fn(Bn);Hn(Bn,t)}function Zn(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function $n(e,t,n){var r=e.alternate;return null===r?((r=new Zn(e.tag,e.key,e.internalContextTag)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.pendingProps=t,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function er(e,t,n){var r=void 0,o=e.type,a=e.key;return"function"==typeof o?((r=o.prototype&&o.prototype.isReactComponent?new Zn(2,a,t):new Zn(0,a,t)).type=o,r.pendingProps=e.props):"string"==typeof o?((r=new Zn(5,a,t)).type=o,r.pendingProps=e.props):"object"==typeof o&&null!==o&&"number"==typeof o.tag?(r=o).pendingProps=e.props:p("130",null==o?o:typeof o,""),r.expirationTime=n,r}function tr(e,t,n,r){return(t=new Zn(10,r,t)).pendingProps=e,t.expirationTime=n,t}function nr(e,t,n){return(t=new Zn(6,null,t)).pendingProps=e,t.expirationTime=n,t}function rr(e,t,n){return(t=new Zn(7,e.key,t)).type=e.handler,t.pendingProps=e,t.expirationTime=n,t}function or(e,t,n){return(e=new Zn(9,null,t)).expirationTime=n,e}function ar(e,t,n){return(t=new Zn(4,e.key,t)).pendingProps=e.children||[],t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var ir=null,lr=null;function ur(e){return function(t){try{return e(t)}catch(e){}}}function sr(e){"function"==typeof ir&&ir(e)}function cr(e){"function"==typeof lr&&lr(e)}function dr(e){return{baseState:e,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function fr(e,t){null===e.last?e.first=e.last=t:(e.last.next=t,e.last=t),(0===e.expirationTime||e.expirationTime>t.expirationTime)&&(e.expirationTime=t.expirationTime)}function pr(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=dr(null)),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=dr(null)):e=null,null===(e=e!==r?e:null)?fr(r,t):null===r.last||null===e.last?(fr(r,t),fr(e,t)):(fr(r,t),e.last=t)}function mr(e,t,n,r){return"function"==typeof(e=e.partialState)?e.call(t,n,r):e}function hr(e,t,n,r,o,i){null!==e&&e.updateQueue===n&&(n=t.updateQueue={baseState:n.baseState,expirationTime:n.expirationTime,first:n.first,last:n.last,isInitialized:n.isInitialized,callbackList:null,hasForceUpdate:!1}),n.expirationTime=0,n.isInitialized?e=n.baseState:(e=n.baseState=t.memoizedState,n.isInitialized=!0);for(var l=!0,u=n.first,s=!1;null!==u;){var c=u.expirationTime;if(c>i){var d=n.expirationTime;(0===d||d>c)&&(n.expirationTime=c),s||(s=!0,n.baseState=e)}else s||(n.first=u.next,null===n.first&&(n.last=null)),u.isReplace?(e=mr(u,r,e,o),l=!0):(c=mr(u,r,e,o))&&(e=l?a({},e,c):a(e,c),l=!1),u.isForced&&(n.hasForceUpdate=!0),null!==u.callback&&(null===(c=n.callbackList)&&(c=n.callbackList=[]),c.push(u));u=u.next}return null!==n.callbackList?t.effectTag|=32:null!==n.first||n.hasForceUpdate||(t.updateQueue=null),s||(n.baseState=e),e}function yr(e,t){var n=e.callbackList;if(null!==n)for(e.callbackList=null,e=0;e<n.length;e++){var r=n[e],o=r.callback;r.callback=null,"function"!=typeof o&&p("191",o),o.call(t)}}var br="function"==typeof Symbol&&Symbol.for,gr=br?Symbol.for("react.element"):60103,vr=br?Symbol.for("react.call"):60104,wr=br?Symbol.for("react.return"):60105,Cr=br?Symbol.for("react.portal"):60106,_r=br?Symbol.for("react.fragment"):60107,xr="function"==typeof Symbol&&Symbol.iterator;function kr(e){return null===e||void 0===e?null:"function"==typeof(e=xr&&e[xr]||e["@@iterator"])?e:null}var Er=Array.isArray;function jr(e,t){var n=t.ref;if(null!==n&&"function"!=typeof n){if(t._owner){var r=void 0;(t=t._owner)&&(2!==t.tag&&p("110"),r=t.stateNode),r||p("147",n);var o=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===o?e.ref:((e=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,e)}"string"!=typeof n&&p("148"),t._owner||p("149",n)}return n}function Or(e,t){"textarea"!==e.type&&p("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Tr(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=$n(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=nr(n,e.internalContextTag,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=jr(t,n),r.return=e,r):((r=er(n,e.internalContextTag,r)).ref=jr(t,n),r.return=e,r)}function s(e,t,n,r){return null===t||7!==t.tag?((t=rr(n,e.internalContextTag,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function c(e,t,n,r){return null===t||9!==t.tag?((t=or(n,e.internalContextTag,r)).type=n.value,t.return=e,t):((t=o(t,null,r)).type=n.value,t.return=e,t)}function d(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ar(n,e.internalContextTag,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function f(e,t,n,r,a){return null===t||10!==t.tag?((t=tr(n,e.internalContextTag,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function m(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=nr(""+t,e.internalContextTag,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case gr:return t.type===_r?((t=tr(t.props.children,e.internalContextTag,n,t.key)).return=e,t):((n=er(t,e.internalContextTag,n)).ref=jr(null,t),n.return=e,n);case vr:return(t=rr(t,e.internalContextTag,n)).return=e,t;case wr:return(n=or(t,e.internalContextTag,n)).type=t.value,n.return=e,n;case Cr:return(t=ar(t,e.internalContextTag,n)).return=e,t}if(Er(t)||kr(t))return(t=tr(t,e.internalContextTag,n,null)).return=e,t;Or(e,t)}return null}function h(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case gr:return n.key===o?n.type===_r?f(e,t,n.props.children,r,o):u(e,t,n,r):null;case vr:return n.key===o?s(e,t,n,r):null;case wr:return null===o?c(e,t,n,r):null;case Cr:return n.key===o?d(e,t,n,r):null}if(Er(n)||kr(n))return null!==o?null:f(e,t,n,r,null);Or(e,n)}return null}function y(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case gr:return e=e.get(null===r.key?n:r.key)||null,r.type===_r?f(t,e,r.props.children,o,r.key):u(t,e,r,o);case vr:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o);case wr:return c(t,e=e.get(n)||null,r,o);case Cr:return d(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Er(r)||kr(r))return f(t,e=e.get(n)||null,r,o,null);Or(t,r)}return null}function b(o,i,l,u){for(var s=null,c=null,d=i,f=i=0,p=null;null!==d&&f<l.length;f++){d.index>f?(p=d,d=null):p=d.sibling;var b=h(o,d,l[f],u);if(null===b){null===d&&(d=p);break}e&&d&&null===b.alternate&&t(o,d),i=a(b,i,f),null===c?s=b:c.sibling=b,c=b,d=p}if(f===l.length)return n(o,d),s;if(null===d){for(;f<l.length;f++)(d=m(o,l[f],u))&&(i=a(d,i,f),null===c?s=d:c.sibling=d,c=d);return s}for(d=r(o,d);f<l.length;f++)(p=y(d,o,f,l[f],u))&&(e&&null!==p.alternate&&d.delete(null===p.key?f:p.key),i=a(p,i,f),null===c?s=p:c.sibling=p,c=p);return e&&d.forEach(function(e){return t(o,e)}),s}function g(o,i,l,u){var s=kr(l);"function"!=typeof s&&p("150"),null==(l=s.call(l))&&p("151");for(var c=s=null,d=i,f=i=0,b=null,g=l.next();null!==d&&!g.done;f++,g=l.next()){d.index>f?(b=d,d=null):b=d.sibling;var v=h(o,d,g.value,u);if(null===v){d||(d=b);break}e&&d&&null===v.alternate&&t(o,d),i=a(v,i,f),null===c?s=v:c.sibling=v,c=v,d=b}if(g.done)return n(o,d),s;if(null===d){for(;!g.done;f++,g=l.next())null!==(g=m(o,g.value,u))&&(i=a(g,i,f),null===c?s=g:c.sibling=g,c=g);return s}for(d=r(o,d);!g.done;f++,g=l.next())null!==(g=y(d,o,f,g.value,u))&&(e&&null!==g.alternate&&d.delete(null===g.key?f:g.key),i=a(g,i,f),null===c?s=g:c.sibling=g,c=g);return e&&d.forEach(function(e){return t(o,e)}),s}return function(e,r,a,l){"object"==typeof a&&null!==a&&a.type===_r&&null===a.key&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case gr:e:{var s=a.key;for(u=r;null!==u;){if(u.key===s){if(10===u.tag?a.type===_r:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===_r?a.props.children:a.props,l)).ref=jr(u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===_r?((r=tr(a.props.children,e.internalContextTag,l,a.key)).return=e,e=r):((l=er(a,e.internalContextTag,l)).ref=jr(r,a),l.return=e,e=l)}return i(e);case vr:e:{for(u=a.key;null!==r;){if(r.key===u){if(7===r.tag){n(e,r.sibling),(r=o(r,a,l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=rr(a,e.internalContextTag,l)).return=e,e=r}return i(e);case wr:e:{if(null!==r){if(9===r.tag){n(e,r.sibling),(r=o(r,null,l)).type=a.value,r.return=e,e=r;break e}n(e,r)}(r=or(a,e.internalContextTag,l)).type=a.value,r.return=e,e=r}return i(e);case Cr:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=ar(a,e.internalContextTag,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),r=o(r,a,l)):(n(e,r),r=nr(a,e.internalContextTag,l)),r.return=e,i(e=r);if(Er(a))return b(e,r,a,l);if(kr(a))return g(e,r,a,l);if(u&&Or(e,a),void 0===a)switch(e.tag){case 2:case 1:p("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var Sr=Tr(!0),Pr=Tr(!1);function Ir(e,t,n,r,o){function a(e,t,n){var r=t.expirationTime;t.child=null===e?Pr(t,null,n,r):Sr(t,e.child,n,r)}function i(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=128)}function l(e,t,n,r){if(i(e,t),!n)return r&&Jn(t,!1),c(e,t);n=t.stateNode,Ht.current=t;var o=n.render();return t.effectTag|=1,a(e,t,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&Jn(t,!0),t.child}function u(e){var t=e.stateNode;t.pendingContext?Qn(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Qn(0,t.context,!1),g(e,t.containerInfo)}function c(e,t){if(null!==e&&t.child!==e.child&&p("153"),null!==t.child){var n=$n(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=$n(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function d(e,t){switch(t.tag){case 3:u(t);break;case 2:Xn(t);break;case 4:g(t,t.stateNode.containerInfo)}return null}var m=e.shouldSetTextContent,h=e.useSyncScheduling,y=e.shouldDeprioritizeSubtree,b=t.pushHostContext,g=t.pushHostContainer,v=n.enterHydrationState,w=n.resetHydrationState,C=n.tryToClaimNextHydratableInstance,_=(e=function(e,t,n,r){function o(e,t){t.updater=a,e.stateNode=t,t._reactInternalFiber=e}var a={isMounted:Vt,enqueueSetState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var a=t(n);pr(n,{expirationTime:a,partialState:r,callback:o,isReplace:!1,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueReplaceState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var a=t(n);pr(n,{expirationTime:a,partialState:r,callback:o,isReplace:!0,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueForceUpdate:function(n,r){n=n._reactInternalFiber,r=void 0===r?null:r;var o=t(n);pr(n,{expirationTime:o,partialState:null,callback:r,isReplace:!1,isForced:!0,nextCallback:null,next:null}),e(n,o)}};return{adoptClassInstance:o,constructClassInstance:function(e,t){var n=e.type,r=qn(e),a=2===e.tag&&null!=e.type.contextTypes,i=a?Kn(e,r):f;return o(e,t=new n(t,i)),a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=i),t},mountClassInstance:function(e,t){var n=e.alternate,r=e.stateNode,o=r.state||null,i=e.pendingProps;i||p("158");var l=qn(e);r.props=i,r.state=e.memoizedState=o,r.refs=f,r.context=Kn(e,l),null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=1),"function"==typeof r.componentWillMount&&(o=r.state,r.componentWillMount(),o!==r.state&&a.enqueueReplaceState(r,r.state,null),null!==(o=e.updateQueue)&&(r.state=hr(n,e,o,r,i,t))),"function"==typeof r.componentDidMount&&(e.effectTag|=4)},updateClassInstance:function(e,t,o){var i=t.stateNode;i.props=t.memoizedProps,i.state=t.memoizedState;var l=t.memoizedProps,u=t.pendingProps;u||null==(u=l)&&p("159");var c=i.context,d=qn(t);if(d=Kn(t,d),"function"!=typeof i.componentWillReceiveProps||l===u&&c===d||(c=i.state,i.componentWillReceiveProps(u,d),i.state!==c&&a.enqueueReplaceState(i,i.state,null)),c=t.memoizedState,o=null!==t.updateQueue?hr(e,t,t.updateQueue,i,u,o):c,!(l!==u||c!==o||Bn.current||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),!1;var f=u;if(null===l||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)f=!0;else{var m=t.stateNode,h=t.type;f="function"==typeof m.shouldComponentUpdate?m.shouldComponentUpdate(f,o,d):!(h.prototype&&h.prototype.isPureReactComponent&&s(l,f)&&s(c,o))}return f?("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(u,o,d),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),n(t,u),r(t,o)),i.props=u,i.state=o,i.context=d,f}}}(r,o,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t})).adoptClassInstance,x=e.constructClassInstance,k=e.mountClassInstance,E=e.updateClassInstance;return{beginWork:function(e,t,n){if(0===t.expirationTime||t.expirationTime>n)return d(0,t);switch(t.tag){case 0:null!==e&&p("155");var r=t.type,o=t.pendingProps,s=qn(t);return r=r(o,s=Kn(t,s)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render?(t.tag=2,o=Xn(t),_(t,r),k(t,n),t=l(e,t,!0,o)):(t.tag=1,a(e,t,r),t.memoizedProps=o,t=t.child),t;case 1:e:{if(o=t.type,n=t.pendingProps,r=t.memoizedProps,Bn.current)null===n&&(n=r);else if(null===n||r===n){t=c(e,t);break e}o=o(n,r=Kn(t,r=qn(t))),t.effectTag|=1,a(e,t,o),t.memoizedProps=n,t=t.child}return t;case 2:return o=Xn(t),r=void 0,null===e?t.stateNode?p("153"):(x(t,t.pendingProps),k(t,n),r=!0):r=E(e,t,n),l(e,t,r,o);case 3:return u(t),null!==(o=t.updateQueue)?(r=t.memoizedState)===(o=hr(e,t,o,null,null,n))?(w(),t=c(e,t)):(r=o.element,s=t.stateNode,(null===e||null===e.child)&&s.hydrate&&v(t)?(t.effectTag|=2,t.child=Pr(t,null,r,n)):(w(),a(e,t,r)),t.memoizedState=o,t=t.child):(w(),t=c(e,t)),t;case 5:b(t),null===e&&C(t),o=t.type;var f=t.memoizedProps;return null===(r=t.pendingProps)&&(null===(r=f)&&p("154")),s=null!==e?e.memoizedProps:null,Bn.current||null!==r&&f!==r?(f=r.children,m(o,r)?f=null:s&&m(o,s)&&(t.effectTag|=16),i(e,t),2147483647!==n&&!h&&y(o,r)?(t.expirationTime=2147483647,t=null):(a(e,t,f),t.memoizedProps=r,t=t.child)):t=c(e,t),t;case 6:return null===e&&C(t),null===(e=t.pendingProps)&&(e=t.memoizedProps),t.memoizedProps=e,null;case 8:t.tag=7;case 7:return o=t.pendingProps,Bn.current?null===o&&(null===(o=e&&e.memoizedProps)&&p("154")):null!==o&&t.memoizedProps!==o||(o=t.memoizedProps),r=o.children,t.stateNode=null===e?Pr(t,t.stateNode,r,n):Sr(t,t.stateNode,r,n),t.memoizedProps=o,t.stateNode;case 9:return null;case 4:e:{if(g(t,t.stateNode.containerInfo),o=t.pendingProps,Bn.current)null===o&&(null==(o=e&&e.memoizedProps)&&p("154"));else if(null===o||t.memoizedProps===o){t=c(e,t);break e}null===e?t.child=Sr(t,null,o,n):a(e,t,o),t.memoizedProps=o,t=t.child}return t;case 10:e:{if(n=t.pendingProps,Bn.current)null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=c(e,t);break e}a(e,t,n),t.memoizedProps=n,t=t.child}return t;default:p("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case 2:Xn(t);break;case 3:u(t);break;default:p("157")}return t.effectTag|=64,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),0===t.expirationTime||t.expirationTime>n?d(0,t):(t.firstEffect=null,t.lastEffect=null,t.child=null===e?Pr(t,null,null,n):Sr(t,e.child,null,n),2===t.tag&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}var Ar={};function Nr(e){function t(e){ie=X=!0;var t=e.stateNode;if(t.current===e&&p("177"),t.isReadyForCommit=!1,Ht.current=null,1<e.effectTag)if(null!==e.lastEffect){e.lastEffect.nextEffect=e;var n=e.firstEffect}else n=e;else n=e.firstEffect;for(K(),ee=n;null!==ee;){var r=!1,o=void 0;try{for(;null!==ee;){var a=ee.effectTag;if(16&a&&R(ee),128&a){var i=ee.alternate;null!==i&&H(i)}switch(-242&a){case 2:M(ee),ee.effectTag&=-3;break;case 6:M(ee),ee.effectTag&=-3,D(ee.alternate,ee);break;case 4:D(ee.alternate,ee);break;case 8:le=!0,U(ee),le=!1}ee=ee.nextEffect}}catch(e){r=!0,o=e}r&&(null===ee&&p("178"),l(ee,o),null!==ee&&(ee=ee.nextEffect))}for(W(),t.current=e,ee=n;null!==ee;){n=!1,r=void 0;try{for(;null!==ee;){var u=ee.effectTag;if(36&u&&L(ee.alternate,ee),128&u&&F(ee),64&u)switch(o=ee,a=void 0,null!==te&&(a=te.get(o),te.delete(o),null==a&&null!==o.alternate&&(o=o.alternate,a=te.get(o),te.delete(o))),null==a&&p("184"),o.tag){case 2:o.stateNode.componentDidCatch(a.error,{componentStack:a.componentStack});break;case 3:null===oe&&(oe=a.error);break;default:p("157")}var s=ee.nextEffect;ee.nextEffect=null,ee=s}}catch(e){n=!0,r=e}n&&(null===ee&&p("178"),l(ee,r),null!==ee&&(ee=ee.nextEffect))}return X=ie=!1,sr(e.stateNode),re&&(re.forEach(y),re=null),null!==oe&&(e=oe,oe=null,k(e)),0===(t=t.current.expirationTime)&&(ne=te=null),t}function n(e){for(;;){var t=N(e.alternate,e,$),n=e.return,r=e.sibling,o=e;if(2147483647===$||2147483647!==o.expirationTime){if(2!==o.tag&&3!==o.tag)var a=0;else a=null===(a=o.updateQueue)?0:a.expirationTime;for(var i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){e.stateNode.isReadyForCommit=!0;break}e=n}return null}function r(e){var t=I(e.alternate,e,$);return null===t&&(t=n(e)),Ht.current=null,t}function o(e){var t=A(e.alternate,e,$);return null===t&&(t=n(e)),Ht.current=null,t}function a(e){if(null!==te){if(!(0===$||$>e))if($<=Q)for(;null!==J;)J=u(J)?o(J):r(J);else for(;null!==J&&!x();)J=u(J)?o(J):r(J)}else if(!(0===$||$>e))if($<=Q)for(;null!==J;)J=r(J);else for(;null!==J&&!x();)J=r(J)}function i(e,t){if(X&&p("243"),X=!0,e.isReadyForCommit=!1,e!==Z||t!==$||null===J){for(;-1<Ln;)Dn[Ln]=null,Ln--;Vn=f,zn.current=f,Bn.current=!1,S(),$=t,J=$n((Z=e).current,null,t)}var n=!1,r=null;try{a(t)}catch(e){n=!0,r=e}for(;n;){if(ae){oe=r;break}var i=J;if(null===i)ae=!0;else{var u=l(i,r);if(null===u&&p("183"),!ae){try{for(r=t,u=n=u;null!==i;){switch(i.tag){case 2:Gn(i);break;case 5:T(i);break;case 3:O(i);break;case 4:O(i)}if(i===u||i.alternate===u)break;i=i.return}J=o(n),a(r)}catch(e){n=!0,r=e;continue}break}}}return t=oe,ae=X=!1,oe=null,null!==t&&k(t),e.isReadyForCommit?e.current.alternate:null}function l(e,t){var n=Ht.current=null,r=!1,o=!1,a=null;if(3===e.tag)n=e,s(e)&&(ae=!0);else for(var i=e.return;null!==i&&null===n;){if(2===i.tag?"function"==typeof i.stateNode.componentDidCatch&&(r=!0,a=zt(i),n=i,o=!0):3===i.tag&&(n=i),s(i)){if(le||null!==re&&(re.has(i)||null!==i.alternate&&re.has(i.alternate)))return null;n=null,o=!1}i=i.return}if(null!==n){null===ne&&(ne=new Set),ne.add(n);var l="";i=e;do{e:switch(i.tag){case 0:case 1:case 2:case 5:var u=i._debugOwner,c=i._debugSource,d=zt(i),f=null;u&&(f=zt(u)),u=c,d="\n    in "+(d||"Unknown")+(u?" (at "+u.fileName.replace(/^.*[\\\/]/,"")+":"+u.lineNumber+")":f?" (created by "+f+")":"");break e;default:d=""}l+=d,i=i.return}while(i);i=l,e=zt(e),null===te&&(te=new Map),t={componentName:e,componentStack:i,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:a,willRetry:o},te.set(n,t);try{var p=t.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}return ie?(null===re&&(re=new Set),re.add(n)):y(n),n}return null===oe&&(oe=t),null}function u(e){return null!==te&&(te.has(e)||null!==e.alternate&&te.has(e.alternate))}function s(e){return null!==ne&&(ne.has(e)||null!==e.alternate&&ne.has(e.alternate))}function c(){return 20*(1+((b()+100)/20|0))}function d(e){return 0!==Y?Y:X?ie?1:$:!q||1&e.internalContextTag?c():1}function m(e,t){return h(e,t)}function h(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!X&&n===Z&&t<$&&(J=Z=null,$=0);var r=n,o=t;if(_e>Ce&&p("185"),null===r.nextScheduledRoot)r.remainingExpirationTime=o,null===se?(ue=se=r,r.nextScheduledRoot=r):(se=se.nextScheduledRoot=r).nextScheduledRoot=ue;else{var a=r.remainingExpirationTime;(0===a||o<a)&&(r.remainingExpirationTime=o)}fe||(ve?we&&_(pe=r,me=1):1===o?C(1,null):g(o)),!X&&n===Z&&t<$&&(J=Z=null,$=0)}e=e.return}}function y(e){h(e,1)}function b(){return Q=2+((z()-G)/10|0)}function g(e){if(0!==ce){if(e>ce)return;V(de)}var t=z()-G;ce=e,de=B(w,{timeout:10*(e-2)-t})}function v(){var e=0,t=null;if(null!==se)for(var n=se,r=ue;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===se)&&p("244"),r===r.nextScheduledRoot){ue=se=r.nextScheduledRoot=null;break}if(r===ue)ue=o=r.nextScheduledRoot,se.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===se){(se=n).nextScheduledRoot=ue,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===se)break;n=r,r=r.nextScheduledRoot}}null!==(n=pe)&&n===t?_e++:_e=0,pe=t,me=e}function w(e){C(0,e)}function C(e,t){for(ge=t,v();null!==pe&&0!==me&&(0===e||me<=e)&&!he;)_(pe,me),v();if(null!==ge&&(ce=0,de=-1),0!==me&&g(me),ge=null,he=!1,_e=0,ye)throw e=be,be=null,ye=!1,e}function _(e,n){if(fe&&p("245"),fe=!0,n<=b()){var r=e.finishedWork;null!==r?(e.finishedWork=null,e.remainingExpirationTime=t(r)):(e.finishedWork=null,null!==(r=i(e,n))&&(e.remainingExpirationTime=t(r)))}else null!==(r=e.finishedWork)?(e.finishedWork=null,e.remainingExpirationTime=t(r)):(e.finishedWork=null,null!==(r=i(e,n))&&(x()?e.finishedWork=r:e.remainingExpirationTime=t(r)));fe=!1}function x(){return!(null===ge||ge.timeRemaining()>xe)&&(he=!0)}function k(e){null===pe&&p("246"),pe.remainingExpirationTime=0,ye||(ye=!0,be=e)}var E=function(e){function t(e){return e===Ar&&p("174"),e}var n=e.getChildHostContext,r=e.getRootHostContext,o={current:Ar},a={current:Ar},i={current:Ar};return{getHostContext:function(){return t(o.current)},getRootHostContainer:function(){return t(i.current)},popHostContainer:function(e){Fn(o),Fn(a),Fn(i)},popHostContext:function(e){a.current===e&&(Fn(o),Fn(a))},pushHostContainer:function(e,t){Hn(i,t),t=r(t),Hn(a,e),Hn(o,t)},pushHostContext:function(e){var r=t(i.current),l=t(o.current);l!==(r=n(l,e.type,r))&&(Hn(a,e),Hn(o,r))},resetHostContainer:function(){o.current=Ar,i.current=Ar}}}(e),j=function(e){function t(e,t){var n=new Zn(5,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case 5:return null!==(t=a(t,e.type,e.pendingProps))&&(e.stateNode=t,!0);case 6:return null!==(t=i(t,e.pendingProps))&&(e.stateNode=t,!0);default:return!1}}function r(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;d=e}var o=e.shouldSetTextContent;if(!(e=e.hydration))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){p("175")},prepareToHydrateHostTextInstance:function(){p("176")},popHydrationState:function(){return!1}};var a=e.canHydrateInstance,i=e.canHydrateTextInstance,l=e.getNextHydratableSibling,u=e.getFirstHydratableChild,s=e.hydrateInstance,c=e.hydrateTextInstance,d=null,f=null,m=!1;return{enterHydrationState:function(e){return f=u(e.stateNode.containerInfo),d=e,m=!0},resetHydrationState:function(){f=d=null,m=!1},tryToClaimNextHydratableInstance:function(e){if(m){var r=f;if(r){if(!n(e,r)){if(!(r=l(r))||!n(e,r))return e.effectTag|=2,m=!1,void(d=e);t(d,f)}d=e,f=u(r)}else e.effectTag|=2,m=!1,d=e}},prepareToHydrateHostInstance:function(e,t,n){return t=s(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return c(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==d)return!1;if(!m)return r(e),m=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!o(n,e.memoizedProps))for(n=f;n;)t(e,n),n=l(n);return r(e),f=d?l(e.stateNode):null,!0}}}(e),O=E.popHostContainer,T=E.popHostContext,S=E.resetHostContainer,P=Ir(e,E,j,m,d),I=P.beginWork,A=P.beginFailedWork,N=function(e,t,n){function r(e){e.effectTag|=4}var o=e.createInstance,a=e.createTextInstance,i=e.appendInitialChild,l=e.finalizeInitialChildren,u=e.prepareUpdate,s=e.persistence,c=t.getRootHostContainer,d=t.popHostContext,f=t.getHostContext,m=t.popHostContainer,h=n.prepareToHydrateHostInstance,y=n.prepareToHydrateHostTextInstance,b=n.popHydrationState,g=void 0,v=void 0,w=void 0;return e.mutation?(g=function(){},v=function(e,t,n){(t.updateQueue=n)&&r(t)},w=function(e,t,n,o){n!==o&&r(t)}):p(s?"235":"236"),{completeWork:function(e,t,n){var s=t.pendingProps;switch(null===s?s=t.memoizedProps:2147483647===t.expirationTime&&2147483647!==n||(t.pendingProps=null),t.tag){case 1:return null;case 2:return Gn(t),null;case 3:return m(t),Fn(Bn),Fn(zn),(s=t.stateNode).pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==e&&null!==e.child||(b(t),t.effectTag&=-3),g(t),null;case 5:d(t),n=c();var C=t.type;if(null!==e&&null!=t.stateNode){var _=e.memoizedProps,x=t.stateNode,k=f();x=u(x,C,_,s,n,k),v(e,t,x,C,_,s,n),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!s)return null===t.stateNode&&p("166"),null;if(e=f(),b(t))h(t,n,e)&&r(t);else{e=o(C,s,n,e,t);e:for(_=t.child;null!==_;){if(5===_.tag||6===_.tag)i(e,_.stateNode);else if(4!==_.tag&&null!==_.child){_.child.return=_,_=_.child;continue}if(_===t)break;for(;null===_.sibling;){if(null===_.return||_.return===t)break e;_=_.return}_.sibling.return=_.return,_=_.sibling}l(e,C,s,n)&&r(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)w(e,t,e.memoizedProps,s);else{if("string"!=typeof s)return null===t.stateNode&&p("166"),null;e=c(),n=f(),b(t)?y(t)&&r(t):t.stateNode=a(s,e,n,t)}return null;case 7:(s=t.memoizedProps)||p("165"),t.tag=8,C=[];e:for((_=t.stateNode)&&(_.return=t);null!==_;){if(5===_.tag||6===_.tag||4===_.tag)p("247");else if(9===_.tag)C.push(_.type);else if(null!==_.child){_.child.return=_,_=_.child;continue}for(;null===_.sibling;){if(null===_.return||_.return===t)break e;_=_.return}_.sibling.return=_.return,_=_.sibling}return s=(_=s.handler)(s.props,C),t.child=Sr(t,null!==e?e.child:null,s,n),t.child;case 8:return t.tag=7,null;case 9:case 10:return null;case 4:return m(t),g(t),null;case 0:p("167");default:p("156")}}}}(e,E,j).completeWork,R=(E=function(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function r(e){switch(cr(e),e.tag){case 2:n(e);var r=e.stateNode;if("function"==typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case 5:n(e);break;case 7:o(e.stateNode);break;case 4:u&&i(e)}}function o(e){for(var t=e;;)if(r(t),null===t.child||u&&4===t.tag){if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}else t.child.return=t,t=t.child}function a(e){return 5===e.tag||3===e.tag||4===e.tag}function i(e){for(var t=e,n=!1,a=void 0,i=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&p("160"),n.tag){case 5:a=n.stateNode,i=!1;break e;case 3:case 4:a=n.stateNode.containerInfo,i=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag)o(t),i?v(a,t.stateNode):g(a,t.stateNode);else if(4===t.tag?a=t.stateNode.containerInfo:r(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}var l=e.getPublicInstance,u=e.mutation;e=e.persistence,u||p(e?"235":"236");var s=u.commitMount,c=u.commitUpdate,d=u.resetTextContent,f=u.commitTextUpdate,m=u.appendChild,h=u.appendChildToContainer,y=u.insertBefore,b=u.insertInContainerBefore,g=u.removeChild,v=u.removeChildFromContainer;return{commitResetTextContent:function(e){d(e.stateNode)},commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(a(t)){var n=t;break e}t=t.return}p("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:p("161")}16&n.effectTag&&(d(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||a(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)n?r?b(t,o.stateNode,n):y(t,o.stateNode,n):r?h(t,o.stateNode):m(t,o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},commitDeletion:function(e){i(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&c(n,a,o,e,r,t)}break;case 6:null===t.stateNode&&p("162"),n=t.memoizedProps,f(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 3:break;default:p("163")}},commitLifeCycles:function(e,t){switch(t.tag){case 2:var n=t.stateNode;if(4&t.effectTag)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var r=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(r,e)}null!==(t=t.updateQueue)&&yr(t,n);break;case 3:null!==(n=t.updateQueue)&&yr(n,null!==t.child?t.child.stateNode:null);break;case 5:n=t.stateNode,null===e&&4&t.effectTag&&s(n,t.type,t.memoizedProps,t);break;case 6:case 4:break;default:p("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:t(l(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}(e,l)).commitResetTextContent,M=E.commitPlacement,U=E.commitDeletion,D=E.commitWork,L=E.commitLifeCycles,F=E.commitAttachRef,H=E.commitDetachRef,z=e.now,B=e.scheduleDeferredCallback,V=e.cancelDeferredCallback,q=e.useSyncScheduling,K=e.prepareForCommit,W=e.resetAfterCommit,G=z(),Q=2,Y=0,X=!1,J=null,Z=null,$=0,ee=null,te=null,ne=null,re=null,oe=null,ae=!1,ie=!1,le=!1,ue=null,se=null,ce=0,de=-1,fe=!1,pe=null,me=0,he=!1,ye=!1,be=null,ge=null,ve=!1,we=!1,Ce=1e3,_e=0,xe=1;return{computeAsyncExpiration:c,computeExpirationForFiber:d,scheduleWork:m,batchedUpdates:function(e,t){var n=ve;ve=!0;try{return e(t)}finally{(ve=n)||fe||C(1,null)}},unbatchedUpdates:function(e){if(ve&&!we){we=!0;try{return e()}finally{we=!1}}return e()},flushSync:function(e){var t=ve;ve=!0;try{e:{var n=Y;Y=1;try{var r=e();break e}finally{Y=n}r=void 0}return r}finally{ve=t,fe&&p("187"),C(1,null)}},deferredUpdates:function(e){var t=Y;Y=c();try{return e()}finally{Y=t}}}}function Rr(e){function t(e){return null===(e=function(e){if(!(e=Kt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode}var n=e.getPublicInstance,r=(e=Nr(e)).computeAsyncExpiration,o=e.computeExpirationForFiber,i=e.scheduleWork;return{createContainer:function(e,t){var n=new Zn(3,null,0);return e={current:n,containerInfo:e,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:t,nextScheduledRoot:null},n.stateNode=e},updateContainer:function(e,t,n,a){var l=t.current;if(n){var u;n=n._reactInternalFiber;e:{for(2===Bt(n)&&2===n.tag||p("170"),u=n;3!==u.tag;){if(Wn(u)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}(u=u.return)||p("171")}u=u.stateNode.context}n=Wn(n)?Yn(n,u):u}else n=f;null===t.context?t.context=n:t.pendingContext=n,t=void 0===(t=a)?null:t,pr(l,{expirationTime:a=null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent?r():o(l),partialState:{element:e},callback:t,isReplace:!1,isForced:!1,nextCallback:null,next:null}),i(l,a)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:return n(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:t,findHostInstanceWithNoPortals:function(e){return null===(e=function(e){if(!(e=Kt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},injectIntoDevTools:function(e){var n=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ir=ur(function(e){return t.onCommitFiberRoot(n,e)}),lr=ur(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(a({},e,{findHostInstanceByFiber:function(e){return t(e)},findFiberByHostInstance:function(e){return n?n(e):null}}))}}}var Mr=Object.freeze({default:Rr}),Ur=Mr&&Rr||Mr,Dr=Ur.default?Ur.default:Ur;var Lr="object"==typeof performance&&"function"==typeof performance.now,Fr=void 0;Fr=Lr?function(){return performance.now()}:function(){return Date.now()};var Hr=void 0,zr=void 0;if(o.canUseDOM)if("function"!=typeof requestIdleCallback||"function"!=typeof cancelIdleCallback){var Br,Vr=null,qr=!1,Kr=-1,Wr=!1,Gr=0,Qr=33,Yr=33;Br=Lr?{didTimeout:!1,timeRemaining:function(){var e=Gr-performance.now();return 0<e?e:0}}:{didTimeout:!1,timeRemaining:function(){var e=Gr-Date.now();return 0<e?e:0}};var Xr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===Xr){if(qr=!1,e=Fr(),0>=Gr-e){if(!(-1!==Kr&&Kr<=e))return void(Wr||(Wr=!0,requestAnimationFrame(Jr)));Br.didTimeout=!0}else Br.didTimeout=!1;Kr=-1,e=Vr,Vr=null,null!==e&&e(Br)}},!1);var Jr=function(e){Wr=!1;var t=e-Gr+Yr;t<Yr&&Qr<Yr?(8>t&&(t=8),Yr=t<Qr?Qr:t):Qr=t,Gr=e+Yr,qr||(qr=!0,window.postMessage(Xr,"*"))};Hr=function(e,t){return Vr=e,null!=t&&"number"==typeof t.timeout&&(Kr=Fr()+t.timeout),Wr||(Wr=!0,requestAnimationFrame(Jr)),0},zr=function(){Vr=null,qr=!1,Kr=-1}}else Hr=window.requestIdleCallback,zr=window.cancelIdleCallback;else Hr=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})})},zr=function(e){clearTimeout(e)};var Zr=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,$r={},eo={};function to(e,t,n){var r=v(t);if(r&&g(t,n)){var o=r.mutationMethod;o?o(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?ro(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(o=r.attributeNamespace)?e.setAttributeNS(o,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else no(e,t,g(t,n)?n:null)}function no(e,t,n){(function(e){return!!eo.hasOwnProperty(e)||!$r.hasOwnProperty(e)&&(Zr.test(e)?eo[e]=!0:($r[e]=!0,!1))})(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))}function ro(e,t){var n=v(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}function oo(e,t){var n=t.value,r=t.checked;return a({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})}function ao(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function io(e,t){null!=(t=t.checked)&&to(e,"checked",t)}function lo(e,t){io(e,t);var n=t.value;null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(n!=(t=parseFloat(e.value)||0)||n==t&&e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))}function uo(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function so(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function co(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function fo(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function po(e,t){return null!=t.dangerouslySetInnerHTML&&p("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function mo(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&p("92"),Array.isArray(t)&&(1>=t.length||p("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function ho(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function yo(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var bo="http://www.w3.org/1999/xhtml",go="http://www.w3.org/2000/svg";function vo(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function wo(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?vo(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Co,_o=void 0,xo=(Co=function(e,t){if(e.namespaceURI!==go||"innerHTML"in e)e.innerHTML=t;else{for((_o=_o||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=_o.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return Co(e,t)})}:Co);function ko(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Eo={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},jo=["Webkit","ms","Moz","O"];function Oo(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||Eo.hasOwnProperty(o)&&Eo[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Eo).forEach(function(e){jo.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Eo[t]=Eo[e]})});var To=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function So(e,t,n){t&&(To[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&p("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&p("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||p("61")),null!=t.style&&"object"!=typeof t.style&&p("62",n()))}function Po(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Io=bo,Ao=i.thatReturns("");function No(e,t){var n=dn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=V[t];for(var r=0;r<t.length;r++){var o=t[r];n.hasOwnProperty(o)&&n[o]||("topScroll"===o?Zt("topScroll","scroll",e):"topFocus"===o||"topBlur"===o?(Zt("topFocus","focus",e),Zt("topBlur","blur",e),n.topBlur=!0,n.topFocus=!0):"topCancel"===o?(mt("cancel",!0)&&Zt("topCancel","cancel",e),n.topCancel=!0):"topClose"===o?(mt("close",!0)&&Zt("topClose","close",e),n.topClose=!0):ln.hasOwnProperty(o)&&Jt(o,ln[o],e),n[o]=!0)}}var Ro={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"};function Mo(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===Io&&(r=vo(e)),r===Io?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Uo(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Do(e,t,n,r){var o=Po(t,n);switch(t){case"iframe":case"object":Jt("topLoad","load",e);var l=n;break;case"video":case"audio":for(l in Ro)Ro.hasOwnProperty(l)&&Jt(l,Ro[l],e);l=n;break;case"source":Jt("topError","error",e),l=n;break;case"img":case"image":Jt("topError","error",e),Jt("topLoad","load",e),l=n;break;case"form":Jt("topReset","reset",e),Jt("topSubmit","submit",e),l=n;break;case"details":Jt("topToggle","toggle",e),l=n;break;case"input":ao(e,n),l=oo(e,n),Jt("topInvalid","invalid",e),No(r,"onChange");break;case"option":l=so(e,n);break;case"select":fo(e,n),l=a({},n,{value:void 0}),Jt("topInvalid","invalid",e),No(r,"onChange");break;case"textarea":mo(e,n),l=po(e,n),Jt("topInvalid","invalid",e),No(r,"onChange");break;default:l=n}So(t,l,Ao);var u,s=l;for(u in s)if(s.hasOwnProperty(u)){var c=s[u];"style"===u?Oo(e,c):"dangerouslySetInnerHTML"===u?null!=(c=c?c.__html:void 0)&&xo(e,c):"children"===u?"string"==typeof c?("textarea"!==t||""!==c)&&ko(e,c):"number"==typeof c&&ko(e,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(B.hasOwnProperty(u)?null!=c&&No(r,u):o?no(e,u,c):null!=c&&to(e,u,c))}switch(t){case"input":yt(e),uo(e,n);break;case"textarea":yt(e),yo(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?co(e,!!n.multiple,t,!1):null!=n.defaultValue&&co(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=i)}}function Lo(e,t,n,r,o){var l,u,s=null;switch(t){case"input":n=oo(e,n),r=oo(e,r),s=[];break;case"option":n=so(e,n),r=so(e,r),s=[];break;case"select":n=a({},n,{value:void 0}),r=a({},r,{value:void 0}),s=[];break;case"textarea":n=po(e,n),r=po(e,r),s=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=i)}for(l in So(t,r,Ao),e=null,n)if(!r.hasOwnProperty(l)&&n.hasOwnProperty(l)&&null!=n[l])if("style"===l)for(u in t=n[l])t.hasOwnProperty(u)&&(e||(e={}),e[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(B.hasOwnProperty(l)?s||(s=[]):(s=s||[]).push(l,null));for(l in r){var c=r[l];if(t=null!=n?n[l]:void 0,r.hasOwnProperty(l)&&c!==t&&(null!=c||null!=t))if("style"===l)if(t){for(u in t)!t.hasOwnProperty(u)||c&&c.hasOwnProperty(u)||(e||(e={}),e[u]="");for(u in c)c.hasOwnProperty(u)&&t[u]!==c[u]&&(e||(e={}),e[u]=c[u])}else e||(s||(s=[]),s.push(l,e)),e=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,t=t?t.__html:void 0,null!=c&&t!==c&&(s=s||[]).push(l,""+c)):"children"===l?t===c||"string"!=typeof c&&"number"!=typeof c||(s=s||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(B.hasOwnProperty(l)?(null!=c&&No(o,l),s||t===c||(s=[])):(s=s||[]).push(l,c))}return e&&(s=s||[]).push("style",e),s}function Fo(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&io(e,o),Po(n,r),r=Po(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?Oo(e,l):"dangerouslySetInnerHTML"===i?xo(e,l):"children"===i?ko(e,l):r?null!=l?no(e,i,l):e.removeAttribute(i):null!=l?to(e,i,l):ro(e,i)}switch(n){case"input":lo(e,o);break;case"textarea":ho(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?co(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?co(e,!!o.multiple,o.defaultValue,!0):co(e,!!o.multiple,o.multiple?[]:"",!1))}}function Ho(e,t,n,r,o){switch(t){case"iframe":case"object":Jt("topLoad","load",e);break;case"video":case"audio":for(var a in Ro)Ro.hasOwnProperty(a)&&Jt(a,Ro[a],e);break;case"source":Jt("topError","error",e);break;case"img":case"image":Jt("topError","error",e),Jt("topLoad","load",e);break;case"form":Jt("topReset","reset",e),Jt("topSubmit","submit",e);break;case"details":Jt("topToggle","toggle",e);break;case"input":ao(e,n),Jt("topInvalid","invalid",e),No(o,"onChange");break;case"select":fo(e,n),Jt("topInvalid","invalid",e),No(o,"onChange");break;case"textarea":mo(e,n),Jt("topInvalid","invalid",e),No(o,"onChange")}for(var l in So(t,n,Ao),r=null,n)n.hasOwnProperty(l)&&(a=n[l],"children"===l?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):B.hasOwnProperty(l)&&null!=a&&No(o,l));switch(t){case"input":yt(e),uo(e,n);break;case"textarea":yt(e),yo(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=i)}return r}function zo(e,t){return e.nodeValue!==t}var Bo=Object.freeze({createElement:Mo,createTextNode:Uo,setInitialProperties:Do,diffProperties:Lo,updateProperties:Fo,diffHydratedProperties:Ho,diffHydratedText:zo,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(lo(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=me(r);o||p("90"),bt(r),lo(r,o)}}}break;case"textarea":ho(e,n);break;case"select":null!=(t=n.value)&&co(e,!!n.multiple,t,!1)}}});rt.injectFiberControlledHostComponent(Bo);var Vo=null,qo=null;function Ko(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}var Wo=Dr({getRootHostContext:function(e){var t=e.nodeType;switch(t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:wo(null,"");break;default:e=wo(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}return e},getChildHostContext:function(e,t){return wo(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){Vo=Qt;var e=u();if(mn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=window.getSelection&&window.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,s=0,c=0,d=e,f=null;t:for(;;){for(var p;d!==t||0!==r&&3!==d.nodeType||(i=a+r),d!==o||0!==n&&3!==d.nodeType||(l=a+n),3===d.nodeType&&(a+=d.nodeValue.length),null!==(p=d.firstChild);)f=d,d=p;for(;;){if(d===e)break t;if(f===t&&++s===r&&(i=a),f===o&&++c===n&&(l=a),null!==(p=d.nextSibling))break;f=(d=f).parentNode}d=p}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;qo={focusedElem:e,selectionRange:t},Xt(!1)},resetAfterCommit:function(){var e=qo,t=u(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&c(document.documentElement,n)){if(mn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(window.getSelection){t=window.getSelection();var o=n[Oe()].length;e=Math.min(r.start,o),r=void 0===r.end?e:Math.min(r.end,o),!t.extend&&e>r&&(o=r,r=e,e=o),o=pn(n,e);var a=pn(n,r);if(o&&a&&(1!==t.rangeCount||t.anchorNode!==o.node||t.anchorOffset!==o.offset||t.focusNode!==a.node||t.focusOffset!==a.offset)){var i=document.createRange();i.setStart(o.node,o.offset),t.removeAllRanges(),e>r?(t.addRange(i),t.extend(a.node,a.offset)):(i.setEnd(a.node,a.offset),t.addRange(i))}}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(d(n),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}qo=null,Xt(Vo),Vo=null},createInstance:function(e,t,n,r,o){return(e=Mo(e,t,n,r))[ce]=o,e[de]=t,e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){Do(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,o){return Lo(e,t,n,r,o)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return(e=Uo(e,t))[ce]=r,e},now:Fr,mutation:{commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,o){e[de]=o,Fo(e,t,n,r,o)},resetTextContent:function(e){e.textContent=""},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){8===e.nodeType?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){8===e.nodeType?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)}},hydration:{canHydrateInstance:function(e,t){return 1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e},canHydrateTextInstance:function(e,t){return""===t||3!==e.nodeType?null:e},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,o,a){return e[ce]=a,e[de]=n,Ho(e,t,n,o,r)},hydrateTextInstance:function(e,t,n){return e[ce]=n,zo(e,t)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:Hr,cancelDeferredCallback:zr,useSyncScheduling:!0});function Go(e,t,n,r,o){Ko(n)||p("200");var a=n._reactRootContainer;if(a)Wo.updateContainer(t,a,e,o);else{if(!(r=r||function(e){return!(!(e=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))}(n)))for(a=void 0;a=n.lastChild;)n.removeChild(a);var i=Wo.createContainer(n,r);a=n._reactRootContainer=i,Wo.unbatchedUpdates(function(){Wo.updateContainer(t,i,e,o)})}return Wo.getPublicRootInstance(a)}function Qo(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ko(t)||p("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Cr,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}function Yo(e,t){this._reactRootContainer=Wo.createContainer(e,t)}lt=Wo.batchedUpdates,Yo.prototype.render=function(e,t){Wo.updateContainer(e,this._reactRootContainer,null,t)},Yo.prototype.unmount=function(e){Wo.updateContainer(null,this._reactRootContainer,null,e)};var Xo={createPortal:Qo,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(t)return Wo.findHostInstance(t);"function"==typeof e.render?p("188"):p("213",Object.keys(e))},hydrate:function(e,t,n){return Go(null,e,t,!0,n)},render:function(e,t,n){return Go(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&p("38"),Go(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ko(e)||p("40"),!!e._reactRootContainer&&(Wo.unbatchedUpdates(function(){Go(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:Qo,unstable_batchedUpdates:st,unstable_deferredUpdates:Wo.deferredUpdates,flushSync:Wo.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:ue,EventPluginRegistry:W,EventPropagators:Ee,ReactControlledComponent:it,ReactDOMComponentTree:he,ReactDOMEventListener:en}};Wo.injectIntoDevTools({findFiberByHostInstance:fe,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var Jo=Object.freeze({default:Xo}),Zo=Jo&&Xo||Jo;e.exports=Zo.default?Zo.default:Zo},"./node_modules/react-dom/index.js":function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n("./node_modules/react-dom/cjs/react-dom.production.min.js")},"./node_modules/react/cjs/react.production.min.js":function(e,t,n){"use strict";
      /** @license React v16.2.0
       * react.production.min.js
       *
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */var r=n("./node_modules/object-assign/index.js"),o=n("./node_modules/fbjs/lib/emptyObject.js"),a=n("./node_modules/fbjs/lib/emptyFunction.js"),i="function"==typeof Symbol&&Symbol.for,l=i?Symbol.for("react.element"):60103,u=i?Symbol.for("react.call"):60104,s=i?Symbol.for("react.return"):60105,c=i?Symbol.for("react.portal"):60106,d=i?Symbol.for("react.fragment"):60107,f="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function h(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}function y(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}function b(){}h.prototype.isReactComponent={},h.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&p("85"),this.updater.enqueueSetState(this,e,t,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=h.prototype;var g=y.prototype=new b;function v(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}g.constructor=y,r(g,h.prototype),g.isPureReactComponent=!0;var w=v.prototype=new b;w.constructor=v,r(w,h.prototype),w.unstable_isAsyncReactComponent=!0,w.render=function(){return this.props.children};var C={current:null},_=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function k(e,t,n){var r,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!x.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:l,type:e,key:a,ref:i,props:o,_owner:C.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var j=/\/+/g,O=[];function T(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function S(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function P(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case l:case u:case s:case c:a=!0}}if(a)return n(r,e,""===t?"."+I(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var d=t+I(o=e[i],i);a+=P(o,d,n,r)}else if(null===e||void 0===e?d=null:d="function"==typeof(d=f&&e[f]||e["@@iterator"])?d:null,"function"==typeof d)for(e=d.call(e),i=0;!(o=e.next()).done;)a+=P(o=o.value,d=t+I(o,i++),n,r);else"object"===o&&p("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function N(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?R(e,r,n,a.thatReturnsArgument):null!=e&&(E(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function R(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(j,"$&/")+"/"),t=T(t,a,r,o),null==e||P(e,"",N,t),S(t)}var M={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return R(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=T(null,null,t,n),null==e||P(e,"",A,t),S(t)},count:function(e){return null==e?0:P(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return R(e,t,null,a.thatReturnsArgument),t},only:function(e){return E(e)||p("143"),e}},Component:h,PureComponent:y,unstable_AsyncComponent:v,Fragment:d,createElement:k,cloneElement:function(e,t,n){var o=r({},e.props),a=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=C.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)_.call(t,c)&&!x.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var d=0;d<c;d++)s[d]=arguments[d+2];o.children=s}return{$$typeof:l,type:e.type,key:a,ref:i,props:o,_owner:u}},createFactory:function(e){var t=k.bind(null,e);return t.type=e,t},isValidElement:E,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},U=Object.freeze({default:M}),D=U&&M||U;e.exports=D.default?D.default:D},"./node_modules/react/index.js":function(e,t,n){"use strict";e.exports=n("./node_modules/react/cjs/react.production.min.js")},"./node_modules/style-loader/lib/addStyles.js":function(e,t,n){var r,o,a={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),u=null,s=0,c=[],d=n("./node_modules/style-loader/lib/urls.js");function f(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=a[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(g(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(g(r.parts[i],t));a[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function y(e){var t=document.createElement("style");return e.attrs.type="text/css",b(t,e.attrs),m(e,t),t}function b(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function g(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var i=s++;n=u||(u=y(t)),r=C.bind(null,n,i,!1),o=C.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",b(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=d(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return f(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var i=n[o];(l=a[i.id]).refs--,r.push(l)}e&&f(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete a[l.id]}}}};var v,w=(v=[],function(e,t){return v[e]=t,v.filter(Boolean).join("\n")});function C(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},"./node_modules/style-loader/lib/urls.js":function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},"./node_modules/webpack/buildin/amd-define.js":function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},"./node_modules/webpack/buildin/amd-options.js":function(e,t){(function(t){e.exports=t}).call(this,{})},"./src/cards/Card.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=c(o),i=c(n("./node_modules/prop-types/index.js")),l=c(n("./node_modules/classnames/index.js")),u=c(n("./src/cards/items/CardItemContainer.js")),s=c(n("./src/cards/card.css"));function c(e){return e&&e.__esModule?e:{default:e}}n("./src/cards/theme/card-themes.css");var d=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=l.default.bind(s.default)("card-shape",{landscape:"landscape"===this.props.card.shape},this.props.card.theme);return a.default.createElement("div",{className:e},a.default.createElement(u.default,{container:this.props.card.content}))}}]),t}();d.defaultProps={card:{content:[]}},d.propTypes={card:i.default.object},t.default=d},"./src/cards/card.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/card.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/card.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/card.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/cards/creation/CardEditor.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=s(n("./node_modules/prop-types/index.js")),l=s(n("./src/cards/items/CardItemContainerEditor.js")),u=s(n("./src/cards/theme/CardThemeSelector.js"));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleCardChange=n.handleCardChange.bind(n),n.updateCardContent=n.updateCardContent.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.card,t=e.content||[];return a.default.createElement("form",{className:"card-editor"},a.default.createElement("input",{name:"name",type:"text",value:e.name,onChange:this.handleCardChange}),a.default.createElement(u.default,{card:e,onUpdate:this.handleCardChange}),a.default.createElement(l.default,{container:t,onUpdate:this.updateCardContent}))}},{key:"handleCardChange",value:function(e){var t=e.target,n=this.props.card;n[t.name]=t.value,this.props.onUpdate(n)}},{key:"updateCardContent",value:function(e){var t=this.props.card;t.content=e,this.props.onUpdate(t)}}]),t}();c.propTypes={card:i.default.object.isRequired,onUpdate:i.default.func.isRequired},t.default=c},"./src/cards/creation/EditableCard.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=s(n("./node_modules/prop-types/index.js")),l=s(n("./src/cards/creation/CardEditor.js")),u=s(n("./src/cards/Card.js"));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={card:e.card,editMode:e.editMode},n.onUpdateCard=n.onUpdateCard.bind(n),n.toggleEditMode=n.toggleEditMode.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"onUpdateCard",value:function(e){this.setState({card:e})}},{key:"toggleEditMode",value:function(){var e=this.isEditable()?"readonly":"edit";this.setState({editMode:e})}},{key:"render",value:function(){var e=this,t=this.state.card;return a.default.createElement("div",{className:"card-container-item"},a.default.createElement("div",{className:"card-container-item-name"},t.name),a.default.createElement("div",{className:"card-container-item-toolbar"},a.default.createElement("button",{type:"button",onClick:this.toggleEditMode},this.isEditable()?"Lecture seule":"Éditer"),a.default.createElement("button",{type:"button",onClick:function(){return e.props.addCard(t)}},"Dupliquer"),a.default.createElement("button",{type:"button",onClick:function(){return e.props.removeCard(t)}},"Supprimer")),a.default.createElement(u.default,{card:t}),this.isEditable()&&a.default.createElement(l.default,{card:t,onUpdate:this.onUpdateCard}))}},{key:"isEditable",value:function(){return"edit"===this.state.editMode}}]),t}();c.propTypes={card:i.default.object.isRequired,editMode:i.default.string,addCard:i.default.func.isRequired,removeCard:i.default.func.isRequired},t.default=c},"./src/cards/items/CardItemContainer.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=s(n("./node_modules/prop-types/index.js")),l=n("./src/cards/items/CardItemTypes.js"),u=s(n("./src/cards/items/card-item-container.css"));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.container=e.container||[],n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.container.map(function(e,t){return a.default.createElement(d,{className:u.default["card-item"],key:t,item:e})});return a.default.createElement("div",{className:u.default.card},e)}}]),t}();c.propTypes={container:i.default.array.isRequired};var d=function(e){var t=e.item,n=l.CardItemTypes[t.type].view||f;return a.default.createElement(n,e)},f=function(){return a.default.createElement("div",null,"Empty")};d.propTypes={item:i.default.object.isRequired},t.default=c},"./src/cards/items/CardItemContainerEditor.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=u(n("./src/cards/items/CardItemEditor.js"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.createItem=n.createItem.bind(n),n.removeItem=n.removeItem.bind(n),n.updateItem=n.updateItem.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"createItem",value:function(){var e=this.props.container;e.push({type:"title",content:""}),this.props.onUpdate(e)}},{key:"removeItem",value:function(e){var t=this.props.container,n=t.indexOf(e);t.splice(n,1),this.props.onUpdate(t)}},{key:"updateItem",value:function(){var e=this.props.container;this.props.onUpdate(e)}},{key:"render",value:function(){var e=this,t=this.props.container.map(function(t,n){return a.default.createElement(l.default,{key:n,item:t,onUpdate:e.updateItem,onRemove:e.removeItem})});return a.default.createElement("div",{className:"card-item-container-editor"},a.default.createElement("button",{type:"button",onClick:this.createItem},"+"),a.default.createElement("fieldset",null,t))}}]),t}();s.propTypes={container:i.default.array.isRequired,onUpdate:i.default.func.isRequired},t.default=s},"./src/cards/items/CardItemEditor.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=s(n("./node_modules/prop-types/index.js")),l=n("./src/cards/items/CardItemTypes.js"),u=s(n("./src/cards/items/CardItemTypeSelector.js"));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.item;return a.default.createElement("div",{className:"card-item-editor"},a.default.createElement(u.default,{item:t,onUpdate:this.props.onUpdate}),a.default.createElement(d,{item:t,onUpdate:this.props.onUpdate}),a.default.createElement("button",{type:"button",onClick:function(){return e.props.onRemove}},"-"))}}]),t}();c.propTypes={item:i.default.object.isRequired,onUpdate:i.default.func.isRequired,onRemove:i.default.func.isRequired};var d=function(e){var t=e.item,n=l.CardItemTypes[t.type].input||f;return a.default.createElement(n,{item:t,onUpdate:e.onUpdate})},f=function(){return a.default.createElement("div",null,"Empty")};d.propTypes={item:i.default.shape({type:i.default.string.isRequired}).isRequired,onUpdate:i.default.func.isRequired},t.default=c},"./src/cards/items/CardItemTypeSelector.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=n("./src/cards/items/CardItemTypes.js");function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={item:e.item},n.handleTypeChange=n.handleTypeChange.bind(n),n.onUpdate=e.onUpdate,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.state.item,t=l.CardItemTypes.values(function(e,t){return a.default.createElement("option",{key:e,value:e},t.label)});return a.default.createElement("select",{value:e.type,onChange:this.handleTypeChange},t)}},{key:"handleTypeChange",value:function(e){var t=this.state.item;t.type=e.target.value,this.updateItem(t)}},{key:"updateItem",value:function(e){this.setState({item:e}),this.onUpdate(e)}}]),t}();s.propTypes={item:i.default.shape({type:i.default.string.isRequired}).isRequired,onUpdate:i.default.func.isRequired},t.default=s},"./src/cards/items/CardItemTypes.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CardItemTypes=void 0;var r=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=c(n("./src/cards/items/title/CardTitle.js")),a=c(n("./src/cards/items/title/CardTitleInput.js")),i=c(n("./src/cards/items/field/CardField.js")),l=c(n("./src/cards/items/field/CardFieldInput.js")),u=c(n("./src/cards/items/text/CardText.js")),s=c(n("./src/cards/items/text/CardTextInput.js"));function c(e){return e&&e.__esModule?e:{default:e}}var d={title:{label:"Titre",input:a.default,view:o.default},text:{label:"Texte long",input:s.default,view:u.default},field:{label:"Clé/Valeur",input:l.default,view:i.default}};Object.defineProperty(d,"values",{writable:!1,value:function(e){return Object.entries(d).map(function(t){var n=r(t,2),o=n[0],a=n[1];return e(o,a)})}});t.CardItemTypes=Object.freeze(d)},"./src/cards/items/card-item-container.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/card-item-container.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/cards/items/field/CardField.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=u(n("./src/cards/items/field/card-field.css"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.item=e.item,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.item;return a.default.createElement("div",{className:l.default["card-field-container"]},a.default.createElement("div",{className:l.default["card-field-header"]},e.header),a.default.createElement("div",{className:l.default["card-field-separator"]}),a.default.createElement("div",{className:l.default["card-field-value"]},e.content))}}]),t}();s.propTypes={item:i.default.shape({header:i.default.string.isRequired,content:i.default.string.isRequired}).isRequired},t.default=s},"./src/cards/items/field/CardFieldInput.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=l(o),i=l(n("./node_modules/prop-types/index.js"));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={item:e.item},n.handleHeaderChange=n.handleHeaderChange.bind(n),n.handleValueChange=n.handleValueChange.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.state.item;return a.default.createElement("div",{className:"card-input-field"},a.default.createElement("input",{type:"text",value:e.header,onChange:this.handleHeaderChange}),a.default.createElement("input",{type:"text",value:e.content,onChange:this.handleValueChange}))}},{key:"handleHeaderChange",value:function(e){var t=this.state.item;t.header=e.target.value,this.updateItem(t)}},{key:"handleValueChange",value:function(e){var t=this.state.item;t.content=e.target.value,this.updateItem(t)}},{key:"updateItem",value:function(e){this.setState({item:e}),this.props.onUpdate(e)}}]),t}();u.propTypes={item:i.default.shape({header:i.default.string.isRequired,content:i.default.string.isRequired}).isRequired,onUpdate:i.default.func.isRequired},t.default=u},"./src/cards/items/field/card-field.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/field/card-field.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/field/card-field.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/field/card-field.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/cards/items/text/CardText.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=u(n("./src/cards/items/text/card-text.css"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.item=e.item,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.item;return a.default.createElement("div",{className:l.default["card-text"]},e.content)}}]),t}();s.propTypes={item:i.default.shape({content:i.default.string.isRequired}).isRequired},t.default=s},"./src/cards/items/text/CardTextInput.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=l(o),i=l(n("./node_modules/prop-types/index.js"));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={item:e.item},n.handleTextChange=n.handleTextChange.bind(n),n.onUpdate=e.onUpdate,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.state.item;return a.default.createElement("div",{className:"card-input-text"},a.default.createElement("textarea",{value:e.content,onChange:this.handleTextChange}))}},{key:"handleTextChange",value:function(e){var t=this.state.item;t.content=e.target.value,this.updateItem(t)}},{key:"updateItem",value:function(e){this.setState({item:e}),this.onUpdate(e)}}]),t}();u.propTypes={item:i.default.shape({content:i.default.string.isRequired}).isRequired,onUpdate:i.default.func.isRequired},t.default=u},"./src/cards/items/text/card-text.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/text/card-text.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/text/card-text.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/text/card-text.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/cards/items/title/CardTitle.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=u(n("./src/cards/items/title/card-title.css"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.item=e.item,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.item;return a.default.createElement("div",{className:l.default["card-title"]},e.content)}}]),t}();s.propTypes={item:i.default.shape({content:i.default.string.isRequired}).isRequired},t.default=s},"./src/cards/items/title/CardTitleInput.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=l(o),i=l(n("./node_modules/prop-types/index.js"));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={item:e.item},n.handleTitleChange=n.handleTitleChange.bind(n),n.onUpdate=e.onUpdate,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.state.item;return a.default.createElement("div",{className:"card-input-title"},a.default.createElement("input",{type:"text",value:e.content,onChange:this.handleTitleChange}))}},{key:"handleTitleChange",value:function(e){var t=this.state.item;t.content=e.target.value,this.updateItem(t)}},{key:"updateItem",value:function(e){this.setState({item:e}),this.onUpdate(e)}}]),t}();u.propTypes={item:i.default.shape({content:i.default.string.isRequired}).isRequired,onUpdate:i.default.func.isRequired},t.default=u},"./src/cards/items/title/card-title.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/title/card-title.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/title/card-title.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/items/title/card-title.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/cards/list/CardImporter.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=l(o),i=l(n("./node_modules/prop-types/index.js"));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleChange=n.handleChange.bind(n),n.fileImporter=n.createFileImporter(e.onImport),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"createFileImporter",value:function(e){var t=new FileReader;return t.onload=function(t){try{var n=JSON.parse(t.target.result);e(n)}catch(e){throw e}},t.onerror=function(){throw new Error("Cannot import file")},t}},{key:"render",value:function(){var e=this;return a.default.createElement("input",{type:"file",onChange:function(t){var n=t.target.files;return e.handleChange(n)}})}},{key:"handleChange",value:function(e){var t=this;Array.from(e).forEach(function(e){return t.importFile(e)})}},{key:"importFile",value:function(e){this.fileImporter.readAsText(e,"UTF-8")}}]),t}();u.propTypes={onImport:i.default.func.isRequired},t.default=u},"./src/cards/list/CardList.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=c(o),i=c(n("./node_modules/prop-types/index.js")),l=c(n("./src/cards/list/CardImporter.js")),u=c(n("./src/cards/list/cardListContainer.css")),s=c(n("./src/cards/creation/EditableCard.js"));function c(e){return e&&e.__esModule?e:{default:e}}function d(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var f=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={cards:e.cards},n.createCard=n.createCard.bind(n),n.removeCard=n.removeCard.bind(n),n.addCard=n.addCard.bind(n),n.addCards=n.addCards.bind(n),n.onUpdateContainer=e.onUpdateContainer,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updateContainer",value:function(e){this.setState({cards:e}),this.onUpdateContainer(e)}},{key:"createCard",value:function(){this.addCard({name:"",theme:"",content:[]})}},{key:"addCard",value:function(e){this.addCards([e])}},{key:"addCards",value:function(e){this.updateContainer([].concat(d(this.state.cards),d(e)))}},{key:"removeCard",value:function(e){var t=this.state.cards,n=t.indexOf(e);t.splice(n,1),this.updateContainer(t)}},{key:"render",value:function(){var e=this,t=this.state.cards.map(function(t,n){return a.default.createElement(s.default,{key:n,card:t,addCard:e.addCard,removeCard:e.removeCard})});return a.default.createElement("div",{className:u.default["card-container"]},a.default.createElement("div",{className:u.default["card-container-toolbar"]},a.default.createElement("button",{type:"button",onClick:this.createCard},"+"),a.default.createElement(l.default,{onImport:this.addCards})),a.default.createElement("div",{className:u.default["card-container-items"]},t))}}]),t}();f.propTypes={cards:i.default.array.isRequired,onUpdateContainer:i.default.func.isRequired},t.default=f},"./src/cards/list/cardListContainer.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/list/cardListContainer.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/list/cardListContainer.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/list/cardListContainer.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/cards/theme/CardThemeSelector.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=u(n("./src/cards/theme/CardThemesTypes.js"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("select",{name:"theme",value:this.props.card.theme,onChange:this.props.onUpdate},Object.values(l.default).map(function(e,t){return a.default.createElement("option",{key:t,value:e.name},e.label)}))}}]),t}();s.propTypes={card:i.default.object.isRequired,onUpdate:i.default.func.isRequired},t.default=s},"./src/cards/theme/CardThemesTypes.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={default:{name:"",label:"-"},action:{name:"action",label:"Action"},ability:{name:"ability",label:"Aptitude"},white:{name:"white",label:"Blanc"},green:{name:"green",label:"Vert"},blue:{name:"blue",label:"Blue"},red:{name:"red",label:"Rouge"},cyan:{name:"cyan",label:"Cyan"},magenta:{name:"magenta",label:"Magenta"},yellow:{name:"yellow",label:"Jaune"},greenLight:{name:"green-light",label:"Vert clair"},blueLight:{name:"blue-light",label:"Bleu clair"},redLight:{name:"red-light",label:"Rouge clair"},yellowLight:{name:"yellow-light",label:"Jaune clair"},redGray:{name:"red-gray",label:"Rouge gris"},greenLizard:{name:"green-lizard",label:"Vert Lézard"}}},"./src/cards/theme/card-themes.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/theme/card-themes.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/cards/theme/card-themes.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/cards/theme/card-themes.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/codex/Codex.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=s(n("./node_modules/prop-types/index.js")),l=s(n("./src/cards/list/CardList.js")),u=s(n("./src/codex/CodexToolbar.js"));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={codex:{name:e.name,cards:e.cards||[]}},n.updateCodex=n.updateCodex.bind(n),n.updateCards=n.updateCards.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updateCodex",value:function(e){this.setState({codex:e})}},{key:"updateCards",value:function(e){var t=this.state.codex;t.cards=e,this.updateCodex(t)}},{key:"render",value:function(){var e=this.state.codex,t=e.cards;return a.default.createElement("div",{className:"codex"},a.default.createElement("h1",null,e.name),a.default.createElement(u.default,{onLoadCodex:function(){return e}}),a.default.createElement(l.default,{cards:t,onUpdateContainer:this.updateCards}))}}]),t}();c.propTypes={name:i.default.string.isRequired,cards:i.default.array},t.default=c},"./src/codex/CodexExporter.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/file-saver/FileSaver.js")),l=u(n("./node_modules/prop-types/index.js"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.exportCards=n.exportCards.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("button",{type:"button",onClick:this.exportCards},"Sauver")}},{key:"exportCards",value:function(){var e=this.loadCodex(),t=new Blob([this.toExportContent(e)],{type:"text/json;charset=utf-8"});i.default.saveAs(t,this.toExportName())}},{key:"loadCodex",value:function(){return this.props.onLoadCodex()}},{key:"toExportContent",value:function(e){return JSON.stringify(e.cards)}},{key:"toExportName",value:function(e){return e.name+".json"}}]),t}();s.propTypes={onLoadCodex:l.default.func.isRequired},t.default=s},"./src/codex/CodexToolbar.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=c(o),i=c(n("./node_modules/prop-types/index.js")),l=c(n("./src/codex/CodexExporter.js")),u=c(n("./src/deck/DeckButton.js")),s=c(n("./src/codex/codex.css"));function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.onLoadCodex=e.onLoadCodex,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",{className:s.default["codex-toolbar"]},a.default.createElement(l.default,{onLoadCodex:this.onLoadCodex}),a.default.createElement(u.default,{label:"Imprimer Codex",onLoadDeck:this.onLoadCodex}))}}]),t}();d.propTypes={onLoadCodex:i.default.func.isRequired},t.default=d},"./src/codex/codex.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/codex/codex.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/codex/codex.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/codex/codex.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/css/screen.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/css/screen.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/css/screen.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/css/screen.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/deck/Deck.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/prop-types/index.js")),l=u(n("./src/cards/Card.js"));function u(e){return e&&e.__esModule?e:{default:e}}n("./src/deck/deck.css");var s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.cards.map(function(e,t){return a.default.createElement(l.default,{key:t,card:e})});return a.default.createElement("div",{className:"deck"},e)}}]),t}();s.propTypes={cards:i.default.array.isRequired},t.default=s},"./src/deck/DeckButton.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=s(n("./node_modules/prop-types/index.js")),l=s(n("./src/deck/Deck.js")),u=s(n("./src/popup/PopupButton.js"));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.loadDeck=n.loadDeck.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"loadDeck",value:function(){return this.props.onLoadDeck()}},{key:"render",value:function(){var e=this.loadDeck();return a.default.createElement(u.default,{label:this.props.label,name:e.name},a.default.createElement(l.default,{cards:e.cards}))}}]),t}();c.propTypes={label:i.default.string.isRequired,onLoadDeck:i.default.func.isRequired},t.default=c},"./src/deck/deck.css":function(e,t,n){var r=n("./node_modules/css-loader/index.js??ref--5-1!./src/deck/deck.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},a=n("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js??ref--5-1!./src/deck/deck.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js??ref--5-1!./src/deck/deck.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}()}),e.hot.dispose(function(){a()})},"./src/index.js":function(e,t,n){"use strict";var r,o,a=u(n("./node_modules/react/index.js")),i=u(n("./node_modules/react-dom/index.js")),l=u(n("./src/codex/Codex.js"));function u(e){return e&&e.__esModule?e:{default:e}}n("./src/css/screen.css"),r=document.getElementById("shelves-root"),o="Sphérier",fetch("https://raw.githubusercontent.com/de-dale/skills-sphere/spheres.all/main/all.spheres").then(function(e){return e.json()}).then(function(e){!function(e,t,n){i.default.render(a.default.createElement(l.default,{name:t,cards:n}),e)}(r,o,e)})},"./src/popup/PopupButton.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=u(o),i=u(n("./node_modules/react-dom/index.js")),l=u(n("./node_modules/prop-types/index.js"));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.openPopup=n.openPopup.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("button",{onClick:this.openPopup},this.props.label)}},{key:"openPopup",value:function(){var e=window.open("","","width=800,height=800,left=200,top=200");this.copyStyles(document,e.document);var t=e.document,n=t.createElement("style");Array.from(["body {margin: 0;background-color: white;}","body * {visibility: hidden;}","#popup-root * {visibility: visible;}","@page {margin: 8mm;}"]).map(function(e){return t.createTextNode(e)}).forEach(function(e){return n.appendChild(e)}),t.head.appendChild(n);var r=t.createElement("div");r.id="popup-root",t.body.appendChild(r),i.default.render(this.props.children,r)}},{key:"copyStyles",value:function(e,t){var n=this;Array.from(e.styleSheets).map(function(e){return n.copyStyle(e,t)}).forEach(function(e){return t.head.appendChild(e)})}},{key:"copyStyle",value:function(e,n){return e.cssRules?this.copyStyleElement(n,e):e.href?t.copyStyleLink(n,e):void 0}},{key:"copyStyleElement",value:function(e,t){var n=e.createElement("style");return Array.from(t.cssRules).map(function(t){return e.createTextNode(t.cssText)}).forEach(function(e){return n.appendChild(e)}),n}}],[{key:"copyStyleLink",value:function(e,t){var n=e.createElement("link");return n.rel="stylesheet",n.href=t.href,n}}]),t}();s.propTypes={label:l.default.string.isRequired,children:l.default.element},t.default=s}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL2NhcmQuY3NzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy9pdGVtcy9jYXJkLWl0ZW0tY29udGFpbmVyLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvZmllbGQvY2FyZC1maWVsZC5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL2l0ZW1zL3RleHQvY2FyZC10ZXh0LmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvdGl0bGUvY2FyZC10aXRsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL2xpc3QvY2FyZExpc3RDb250YWluZXIuY3NzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy90aGVtZS9jYXJkLXRoZW1lcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvZGV4L2NvZGV4LmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3NjcmVlbi5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RlY2svZGVjay5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9FdmVudExpc3RlbmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY29udGFpbnNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eU9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZm9jdXNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNUZXh0Tm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9maWxlLXNhdmVyL0ZpbGVTYXZlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9hbWQtZGVmaW5lLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9hbWQtb3B0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvY2FyZC5jc3M/NzViNSIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvY3JlYXRpb24vQ2FyZEVkaXRvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvY3JlYXRpb24vRWRpdGFibGVDYXJkLmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy9pdGVtcy9DYXJkSXRlbUNvbnRhaW5lci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvQ2FyZEl0ZW1Db250YWluZXJFZGl0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL2l0ZW1zL0NhcmRJdGVtRWRpdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy9pdGVtcy9DYXJkSXRlbVR5cGVTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvQ2FyZEl0ZW1UeXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvY2FyZC1pdGVtLWNvbnRhaW5lci5jc3M/MDhiOCIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvZmllbGQvQ2FyZEZpZWxkLmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy9pdGVtcy9maWVsZC9DYXJkRmllbGRJbnB1dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvZmllbGQvY2FyZC1maWVsZC5jc3M/NDVlMSIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvdGV4dC9DYXJkVGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvdGV4dC9DYXJkVGV4dElucHV0LmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy9pdGVtcy90ZXh0L2NhcmQtdGV4dC5jc3M/YjdjYiIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvdGl0bGUvQ2FyZFRpdGxlLmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy9pdGVtcy90aXRsZS9DYXJkVGl0bGVJbnB1dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvaXRlbXMvdGl0bGUvY2FyZC10aXRsZS5jc3M/YzEzOSIsIndlYnBhY2s6Ly8vLi9zcmMvY2FyZHMvbGlzdC9DYXJkSW1wb3J0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL2xpc3QvQ2FyZExpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL2xpc3QvY2FyZExpc3RDb250YWluZXIuY3NzPzNhMjUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL3RoZW1lL0NhcmRUaGVtZVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9jYXJkcy90aGVtZS9DYXJkVGhlbWVzVHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhcmRzL3RoZW1lL2NhcmQtdGhlbWVzLmNzcz84MTVmIiwid2VicGFjazovLy8uL3NyYy9jb2RleC9Db2RleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29kZXgvQ29kZXhFeHBvcnRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29kZXgvQ29kZXhUb29sYmFyLmpzIiwid2VicGFjazovLy8uL3NyYy9jb2RleC9jb2RleC5jc3M/YzYzNSIsIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3NjcmVlbi5jc3M/MjY0MCIsIndlYnBhY2s6Ly8vLi9zcmMvZGVjay9EZWNrLmpzIiwid2VicGFjazovLy8uL3NyYy9kZWNrL0RlY2tCdXR0b24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RlY2svZGVjay5jc3M/YTgxNSIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BvcHVwL1BvcHVwQnV0dG9uLmpzIl0sIm5hbWVzIjpbInBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrIiwid2luZG93IiwiY2h1bmtJZCIsIm1vcmVNb2R1bGVzIiwiaG90QXZhaWxhYmxlRmlsZXNNYXAiLCJob3RSZXF1ZXN0ZWRGaWxlc01hcCIsIm1vZHVsZUlkIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaG90VXBkYXRlIiwiaG90V2FpdGluZ0ZpbGVzIiwiaG90Q2h1bmtzTG9hZGluZyIsImhvdFVwZGF0ZURvd25sb2FkZWQiLCJob3RBZGRVcGRhdGVDaHVuayIsImhvdEN1cnJlbnRDaGlsZE1vZHVsZSIsImhvdEFwcGx5T25VcGRhdGUiLCJob3RDdXJyZW50SGFzaCIsImhvdFJlcXVlc3RUaW1lb3V0IiwiaG90Q3VycmVudE1vZHVsZURhdGEiLCJob3RDdXJyZW50UGFyZW50cyIsImhvdEN1cnJlbnRQYXJlbnRzVGVtcCIsImhvdENyZWF0ZVJlcXVpcmUiLCJtZSIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZm4iLCJyZXF1ZXN0IiwiaG90IiwiYWN0aXZlIiwicGFyZW50cyIsImluZGV4T2YiLCJwdXNoIiwiY2hpbGRyZW4iLCJjb25zb2xlIiwid2FybiIsIk9iamVjdEZhY3RvcnkiLCJuYW1lIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsInNldCIsInZhbHVlIiwiZGVmaW5lUHJvcGVydHkiLCJlIiwiaG90U3RhdHVzIiwiaG90U2V0U3RhdHVzIiwidGhlbiIsImZpbmlzaENodW5rTG9hZGluZyIsImVyciIsImhvdFdhaXRpbmdGaWxlc01hcCIsImhvdEVuc3VyZVVwZGF0ZUNodW5rIiwiaG90U3RhdHVzSGFuZGxlcnMiLCJuZXdTdGF0dXMiLCJpIiwibGVuZ3RoIiwiaG90RGVmZXJyZWQiLCJob3RVcGRhdGVOZXdIYXNoIiwidG9Nb2R1bGVJZCIsImlkIiwiaG90Q2hlY2siLCJhcHBseSIsIkVycm9yIiwicmVxdWVzdFRpbWVvdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIlhNTEh0dHBSZXF1ZXN0IiwicmVxdWVzdFBhdGgiLCJwIiwib3BlbiIsInRpbWVvdXQiLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInVwZGF0ZSIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImMiLCJoIiwicHJvbWlzZSIsImhlYWQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJzcmMiLCJhcHBlbmRDaGlsZCIsImhvdERvd25sb2FkVXBkYXRlQ2h1bmsiLCJkZWZlcnJlZCIsImhvdEFwcGx5IiwicmVzdWx0Iiwib3V0ZGF0ZWRNb2R1bGVzIiwib3B0aW9ucyIsImNiIiwiaiIsIm1vZHVsZSIsImdldEFmZmVjdGVkU3R1ZmYiLCJ1cGRhdGVNb2R1bGVJZCIsIm91dGRhdGVkRGVwZW5kZW5jaWVzIiwicXVldWUiLCJzbGljZSIsIm1hcCIsImNoYWluIiwicXVldWVJdGVtIiwicG9wIiwiX3NlbGZBY2NlcHRlZCIsIl9zZWxmRGVjbGluZWQiLCJ0eXBlIiwiX21haW4iLCJwYXJlbnRJZCIsInBhcmVudCIsIl9kZWNsaW5lZERlcGVuZGVuY2llcyIsImNvbmNhdCIsIl9hY2NlcHRlZERlcGVuZGVuY2llcyIsImFkZEFsbFRvU2V0IiwiYSIsImIiLCJpdGVtIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsImFib3J0RXJyb3IiLCJkb0FwcGx5IiwiZG9EaXNwb3NlIiwiY2hhaW5JbmZvIiwiam9pbiIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsImlkeCIsIm91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyIsImVycm9ySGFuZGxlciIsImtleXMiLCJmb3JFYWNoIiwiaW5zdGFsbGVkQ2h1bmtzIiwiaG90RGlzcG9zZUNodW5rIiwiZGVwZW5kZW5jeSIsIm1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzIiwiZGF0YSIsImRpc3Bvc2VIYW5kbGVycyIsIl9kaXNwb3NlSGFuZGxlcnMiLCJjaGlsZCIsInNwbGljZSIsIm1vZHVsZXMiLCJlcnJvciIsImNhbGxiYWNrcyIsIm9uRXJyb3JlZCIsImRlcGVuZGVuY3lJZCIsImlnbm9yZUVycm9yZWQiLCJlcnIyIiwib3JpZ2luYWxFcnJvciIsImV4cG9ydHMiLCJsIiwiYWNjZXB0IiwiZGVwIiwiY2FsbGJhY2siLCJkZWNsaW5lIiwiZGlzcG9zZSIsImFkZERpc3Bvc2VIYW5kbGVyIiwicmVtb3ZlRGlzcG9zZUhhbmRsZXIiLCJjaGVjayIsImFkZFN0YXR1c0hhbmRsZXIiLCJyZW1vdmVTdGF0dXNIYW5kbGVyIiwidW5kZWZpbmVkIiwiaG90Q3JlYXRlTW9kdWxlIiwibSIsImQiLCJnZXR0ZXIiLCJvIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwib2JqZWN0IiwicHJvcGVydHkiLCJzIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18iLCJoYXNPd24iLCJjbGFzc05hbWVzIiwiY2xhc3NlcyIsImFyZ3VtZW50cyIsImFyZyIsImFyZ1R5cGUiLCJBcnJheSIsImlzQXJyYXkiLCJrZXkiLCJsb2NhbHMiLCJjYXJkLXNoYXBlIiwibGFuZHNjYXBlIiwiY2FyZCIsImNhcmQtaXRlbSIsImNhcmQtZmllbGQtY29udGFpbmVyIiwiY2FyZC1maWVsZC1oZWFkZXIiLCJjYXJkLWZpZWxkLXNlcGFyYXRvciIsImNhcmQtZmllbGQtdmFsdWUiLCJjYXJkLXRleHQiLCJjYXJkLXRpdGxlIiwiY2FyZC1jb250YWluZXIiLCJjYXJkLWNvbnRhaW5lci10b29sYmFyIiwiY2FyZC1jb250YWluZXItaXRlbXMiLCJ3aGl0ZSIsImNhcmQtZmllbGQiLCJncmVlbiIsImdyZWVuLWxpZ2h0IiwiZ3JlZW4tbGl6YXJkIiwiYmx1ZSIsImJsdWUtbGlnaHQiLCJyZWQiLCJyZWQtbGlnaHQiLCJyZWQtZ3JheSIsImN5YW4iLCJtYWdlbnRhIiwieWVsbG93IiwieWVsbG93LWxpZ2h0IiwiYWN0aW9uIiwiYWJpbGl0eSIsImNvZGV4LXRvb2xiYXIiLCJkZWNrIiwicGFnZS1icmVhayIsImVtcGhhc2l6ZWQiLCJuby1wYWRkaW5nIiwic2hvcnQiLCJjYXJkLWhlYWRlciIsImNhcmQtaW1hZ2UiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwiY29udGVudCIsImNzc01hcHBpbmciLCJidG9hIiwic291cmNlTWFwcGluZyIsInNvdXJjZU1hcCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic3RyaW5naWZ5Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiZW1wdHlGdW5jdGlvbiIsIkV2ZW50TGlzdGVuZXIiLCJsaXN0ZW4iLCJ0YXJnZXQiLCJldmVudFR5cGUiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiZGV0YWNoRXZlbnQiLCJjYXB0dXJlIiwicmVnaXN0ZXJEZWZhdWx0IiwiY2FuVXNlRE9NIiwiRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJjYW5Vc2VXb3JrZXJzIiwiV29ya2VyIiwiY2FuVXNlRXZlbnRMaXN0ZW5lcnMiLCJjYW5Vc2VWaWV3cG9ydCIsInNjcmVlbiIsImlzSW5Xb3JrZXIiLCJpc1RleHROb2RlIiwiY29udGFpbnNOb2RlIiwib3V0ZXJOb2RlIiwiaW5uZXJOb2RlIiwicGFyZW50Tm9kZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJtYWtlRW1wdHlGdW5jdGlvbiIsInRoYXRSZXR1cm5zIiwidGhhdFJldHVybnNGYWxzZSIsInRoYXRSZXR1cm5zVHJ1ZSIsInRoYXRSZXR1cm5zTnVsbCIsInRoYXRSZXR1cm5zVGhpcyIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJub2RlIiwiZm9jdXMiLCJkb2MiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsInZhbGlkYXRlRm9ybWF0IiwiZm9ybWF0IiwiY29uZGl0aW9uIiwiZiIsImFyZ3MiLCJhcmdJbmRleCIsInJlcGxhY2UiLCJmcmFtZXNUb1BvcCIsImRlZmF1bHRWaWV3Iiwib3duZXJEb2N1bWVudCIsIk5vZGUiLCJub2RlVHlwZSIsIm5vZGVOYW1lIiwiaXNOb2RlIiwiaXMiLCJ4IiwieSIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsInNhdmVBcyIsInZpZXciLCJuYXZpZ2F0b3IiLCJ0ZXN0IiwidXNlckFnZW50IiwiZ2V0X1VSTCIsIlVSTCIsIndlYmtpdFVSTCIsInNhdmVfbGluayIsImNyZWF0ZUVsZW1lbnROUyIsImNhbl91c2Vfc2F2ZV9saW5rIiwiaXNfc2FmYXJpIiwiSFRNTEVsZW1lbnQiLCJzYWZhcmkiLCJpc19jaHJvbWVfaW9zIiwidGhyb3dfb3V0c2lkZSIsImV4Iiwic2V0SW1tZWRpYXRlIiwic2V0VGltZW91dCIsInJldm9rZSIsImZpbGUiLCJyZXZva2VPYmplY3RVUkwiLCJhdXRvX2JvbSIsImJsb2IiLCJCbG9iIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiRmlsZVNhdmVyIiwibm9fYXV0b19ib20iLCJvYmplY3RfdXJsIiwiZmlsZXNhdmVyIiwiZm9yY2UiLCJkaXNwYXRjaF9hbGwiLCJldmVudF90eXBlcyIsImV2ZW50IiwibGlzdGVuZXIiLCJkaXNwYXRjaCIsInNwbGl0IiwiSU5JVCIsImNyZWF0ZU9iamVjdFVSTCIsImhyZWYiLCJkb3dubG9hZCIsIk1vdXNlRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiRE9ORSIsIkZpbGVSZWFkZXIiLCJyZWFkZXIiLCJvbmxvYWRlbmQiLCJ1cmwiLCJsb2NhdGlvbiIsInJlYWRBc0RhdGFVUkwiLCJmc19lcnJvciIsIkZTX3Byb3RvIiwibXNTYXZlT3JPcGVuQmxvYiIsImFib3J0IiwiV1JJVElORyIsIm9ud3JpdGVzdGFydCIsIm9ucHJvZ3Jlc3MiLCJvbndyaXRlIiwib25hYm9ydCIsIm9uZXJyb3IiLCJvbndyaXRlZW5kIiwic2VsZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwiVHlwZUVycm9yIiwidG9PYmplY3QiLCJpbnZhcmlhbnQiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwiQiIsIkMiLCJiYSIsImRhIiwiZWEiLCJmYSIsImlhIiwiRCIsIkUiLCJvYSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiZGVmYXVsdFZhbHVlIiwiZGVmYXVsdENoZWNrZWQiLCJpbm5lckhUTUwiLCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmciLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJzdHlsZSIsInBhIiwidGEiLCJNVVNUX1VTRV9QUk9QRVJUWSIsIkhBU19CT09MRUFOX1ZBTFVFIiwiSEFTX05VTUVSSUNfVkFMVUUiLCJIQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSIsIkhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUUiLCJIQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUiLCJpbmplY3RET01Qcm9wZXJ0eUNvbmZpZyIsIlByb3BlcnRpZXMiLCJET01BdHRyaWJ1dGVOYW1lc3BhY2VzIiwiRE9NQXR0cmlidXRlTmFtZXMiLCJET01NdXRhdGlvbk1ldGhvZHMiLCJ1YSIsImciLCJ0b0xvd2VyQ2FzZSIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJwcm9wZXJ0eU5hbWUiLCJtdXRhdGlvbk1ldGhvZCIsIm11c3RVc2VQcm9wZXJ0eSIsImhhc0Jvb2xlYW5WYWx1ZSIsImhhc051bWVyaWNWYWx1ZSIsImhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlIiwiaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSIsImhhc1N0cmluZ0Jvb2xlYW5WYWx1ZSIsInZhIiwid2EiLCJ4YSIsInlhIiwiSyIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJhbGxvd0Z1bGxTY3JlZW4iLCJhc3luYyIsImF1dG9Gb2N1cyIsImF1dG9QbGF5IiwiY2hlY2tlZCIsImNvbHMiLCJjb250ZW50RWRpdGFibGUiLCJjb250cm9scyIsImRlZmF1bHQiLCJkZWZlciIsImRpc2FibGVkIiwiZHJhZ2dhYmxlIiwiZm9ybU5vVmFsaWRhdGUiLCJoaWRkZW4iLCJsb29wIiwibXVsdGlwbGUiLCJtdXRlZCIsIm5vVmFsaWRhdGUiLCJwbGF5c0lubGluZSIsInJlYWRPbmx5IiwicmVxdWlyZWQiLCJyZXZlcnNlZCIsInJvd3MiLCJyb3dTcGFuIiwic2NvcGVkIiwic2VhbWxlc3MiLCJzZWxlY3RlZCIsInNpemUiLCJzdGFydCIsInNwYW4iLCJzcGVsbENoZWNrIiwidGFiSW5kZXgiLCJpdGVtU2NvcGUiLCJhY2NlcHRDaGFyc2V0IiwiY2xhc3NOYW1lIiwiaHRtbEZvciIsImh0dHBFcXVpdiIsInJlbW92ZUF0dHJpYnV0ZSIsImhhc0F0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInZhbGlkaXR5IiwiYmFkSW5wdXQiLCJFYSIsIk0iLCJHYSIsImF1dG9SZXZlcnNlIiwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZCIsInByZXNlcnZlQWxwaGEiLCJ4bGlua0FjdHVhdGUiLCJ4bGlua0FyY3JvbGUiLCJ4bGlua0hyZWYiLCJ4bGlua1JvbGUiLCJ4bGlua1Nob3ciLCJ4bGlua1RpdGxlIiwieGxpbmtUeXBlIiwieG1sQmFzZSIsInhtbExhbmciLCJ4bWxTcGFjZSIsIkhhIiwiSWEiLCJ0b1VwcGVyQ2FzZSIsIlAiLCJfY2F1Z2h0RXJyb3IiLCJfaGFzQ2F1Z2h0RXJyb3IiLCJfcmV0aHJvd0Vycm9yIiwiX2hhc1JldGhyb3dFcnJvciIsImluamVjdGlvbiIsImluamVjdEVycm9yVXRpbHMiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2siLCJKYSIsImsiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IiLCJoYXNDYXVnaHRFcnJvciIsInEiLCJjbGVhckNhdWdodEVycm9yIiwicmV0aHJvd0NhdWdodEVycm9yIiwidiIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJQYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwiUWEiLCJyZWdpc3RyYXRpb25OYW1lIiwiUmEiLCJTYSIsImRlcGVuZGVuY2llcyIsIlRhIiwiVWEiLCJWYSIsImZyZWV6ZSIsInBsdWdpbnMiLCJldmVudE5hbWVEaXNwYXRjaENvbmZpZ3MiLCJyZWdpc3RyYXRpb25OYW1lTW9kdWxlcyIsInJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXMiLCJwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIldhIiwiWGEiLCJZYSIsIlphIiwiY3VycmVudFRhcmdldCIsIiRhIiwiYWIiLCJiYiIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwiY29uc3RydWN0b3IiLCJyZWxlYXNlIiwiZGIiLCJnYiIsImhiIiwiaWIiLCJzdGF0ZU5vZGUiLCJqYiIsImtiIiwibGIiLCJtYiIsImdldExpc3RlbmVyIiwiZW5xdWV1ZUV2ZW50cyIsInByb2Nlc3NFdmVudFF1ZXVlIiwibmIiLCJNYXRoIiwicmFuZG9tIiwiUSIsIm9iIiwicGIiLCJ0YWciLCJxYiIsInJiIiwic2IiLCJwcmVjYWNoZUZpYmVyTm9kZSIsImdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlIiwiZ2V0SW5zdGFuY2VGcm9tTm9kZSIsImdldE5vZGVGcm9tSW5zdGFuY2UiLCJnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlIiwidXBkYXRlRmliZXJQcm9wcyIsInRiIiwidWIiLCJ2YiIsImRpc3BhdGNoQ29uZmlnIiwid2IiLCJfdGFyZ2V0SW5zdCIsInhiIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJhbHRlcm5hdGUiLCJDYiIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiRGIiLCJFYiIsImRvY3VtZW50RWxlbWVudCIsIlMiLCJfcm9vdCIsIl9zdGFydFRleHQiLCJfZmFsbGJhY2tUZXh0IiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiZGVmYXVsdFByZXZlbnRlZCIsImlzVHJ1c3RlZCIsIlQiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiS2IiLCJldmVudFBvb2wiLCJMYiIsImRlc3RydWN0b3IiLCJKYiIsImdldFBvb2xlZCIsIk1iIiwiTmIiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJhdWdtZW50Q2xhc3MiLCJYYiIsIlBiIiwiVmIiLCJXYiIsImRvY3VtZW50TW9kZSIsIlliIiwib3BlcmEiLCJ2ZXJzaW9uIiwicGFyc2VJbnQiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJjYyIsImRjIiwia2V5Q29kZSIsImVjIiwiZGV0YWlsIiwiZmMiLCJpYyIsIndoaWNoIiwiZ2MiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJoYyIsImpjIiwia2MiLCJsYyIsIm1jIiwicmVzdG9yZUNvbnRyb2xsZWRTdGF0ZSIsIm5jIiwiaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCIsIm9jIiwicGMiLCJxYyIsImVucXVldWVTdGF0ZVJlc3RvcmUiLCJyZXN0b3JlU3RhdGVJZk5lZWRlZCIsInJjIiwic2MiLCJ0YyIsInhjIiwidWMiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJ2YyIsIndjIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwieWMiLCJpbXBsZW1lbnRhdGlvbiIsImhhc0ZlYXR1cmUiLCJ6YyIsIkJjIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJBYyIsIkNjIiwiRGMiLCJjaGFuZ2UiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiUGMiLCIkYyIsImFkIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIl93cmFwcGVyU3RhdGUiLCJjb250cm9sbGVkIiwiZ2V0QXR0cmlidXRlIiwiYmQiLCJjZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJkZCIsImdldE1vZGlmaWVyU3RhdGUiLCJlZCIsImZkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJnZCIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwiaGQiLCJwYXJlbnRXaW5kb3ciLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwiamQiLCJkaXNwbGF5TmFtZSIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwibWQiLCJuZCIsInNpYmxpbmciLCJjdXJyZW50IiwicWQiLCJyZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwic2QiLCJ0b3BMZXZlbFR5cGUiLCJ0ZCIsInVkIiwiVSIsInZkIiwiYmluZCIsIndkIiwieGQiLCJfZW5hYmxlZCIsIl9oYW5kbGVUb3BMZXZlbCIsInNldEhhbmRsZVRvcExldmVsIiwic2V0RW5hYmxlZCIsImlzRW5hYmxlZCIsInRyYXBCdWJibGVkRXZlbnQiLCJ0cmFwQ2FwdHVyZWRFdmVudCIsInlkIiwiemQiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJBZCIsIkJkIiwiQ2QiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiRGQiLCJ0b3BBYm9ydCIsInRvcEFuaW1hdGlvbkVuZCIsInRvcEFuaW1hdGlvbkl0ZXJhdGlvbiIsInRvcEFuaW1hdGlvblN0YXJ0IiwidG9wQmx1ciIsInRvcENhbmNlbCIsInRvcENhblBsYXkiLCJ0b3BDYW5QbGF5VGhyb3VnaCIsInRvcENoYW5nZSIsInRvcENsaWNrIiwidG9wQ2xvc2UiLCJ0b3BDb21wb3NpdGlvbkVuZCIsInRvcENvbXBvc2l0aW9uU3RhcnQiLCJ0b3BDb21wb3NpdGlvblVwZGF0ZSIsInRvcENvbnRleHRNZW51IiwidG9wQ29weSIsInRvcEN1dCIsInRvcERvdWJsZUNsaWNrIiwidG9wRHJhZyIsInRvcERyYWdFbmQiLCJ0b3BEcmFnRW50ZXIiLCJ0b3BEcmFnRXhpdCIsInRvcERyYWdMZWF2ZSIsInRvcERyYWdPdmVyIiwidG9wRHJhZ1N0YXJ0IiwidG9wRHJvcCIsInRvcER1cmF0aW9uQ2hhbmdlIiwidG9wRW1wdGllZCIsInRvcEVuY3J5cHRlZCIsInRvcEVuZGVkIiwidG9wRXJyb3IiLCJ0b3BGb2N1cyIsInRvcElucHV0IiwidG9wS2V5RG93biIsInRvcEtleVByZXNzIiwidG9wS2V5VXAiLCJ0b3BMb2FkZWREYXRhIiwidG9wTG9hZCIsInRvcExvYWRlZE1ldGFkYXRhIiwidG9wTG9hZFN0YXJ0IiwidG9wTW91c2VEb3duIiwidG9wTW91c2VNb3ZlIiwidG9wTW91c2VPdXQiLCJ0b3BNb3VzZU92ZXIiLCJ0b3BNb3VzZVVwIiwidG9wUGFzdGUiLCJ0b3BQYXVzZSIsInRvcFBsYXkiLCJ0b3BQbGF5aW5nIiwidG9wUHJvZ3Jlc3MiLCJ0b3BSYXRlQ2hhbmdlIiwidG9wU2Nyb2xsIiwidG9wU2Vla2VkIiwidG9wU2Vla2luZyIsInRvcFNlbGVjdGlvbkNoYW5nZSIsInRvcFN0YWxsZWQiLCJ0b3BTdXNwZW5kIiwidG9wVGV4dElucHV0IiwidG9wVGltZVVwZGF0ZSIsInRvcFRvZ2dsZSIsInRvcFRvdWNoQ2FuY2VsIiwidG9wVG91Y2hFbmQiLCJ0b3BUb3VjaE1vdmUiLCJ0b3BUb3VjaFN0YXJ0IiwidG9wVHJhbnNpdGlvbkVuZCIsInRvcFZvbHVtZUNoYW5nZSIsInRvcFdhaXRpbmciLCJ0b3BXaGVlbCIsIkVkIiwiRmQiLCJHZCIsIkhkIiwiSWQiLCJmaXJzdENoaWxkIiwiSmQiLCJ0ZXh0Q29udGVudCIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiS2QiLCJMZCIsIk1kIiwic2VsZWN0IiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiU2QiLCJvblNlbGVjdCIsIlRkIiwiVWQiLCJWZCIsIldkIiwiY2hhckNvZGUiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiY2xpcGJvYXJkRGF0YSIsIlhkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIllkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIlpkIiwiJGQiLCJhZSIsImJlIiwiY2UiLCJyZXBlYXQiLCJsb2NhbGUiLCJkYXRhVHJhbnNmZXIiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJkZSIsImVlIiwiZmUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiZ2UiLCJoZSIsIlYiLCJXIiwiU2V0IiwiaWUiLCJYIiwiamUiLCJrZSIsImxlIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJuZSIsIm9lIiwiY3Vyc29yIiwicGUiLCJnZXRDaGlsZENvbnRleHQiLCJxZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwicmUiLCJZIiwiaW5kZXgiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwicGVuZGluZ1Byb3BzIiwicmVmIiwiaW50ZXJuYWxDb250ZXh0VGFnIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImV4cGlyYXRpb25UaW1lIiwic2UiLCJ0ZSIsImlzUmVhY3RDb21wb25lbnQiLCJ1ZSIsInZlIiwid2UiLCJoYW5kbGVyIiwieGUiLCJ5ZSIsInBlbmRpbmdDaGlsZHJlbiIsInplIiwiQWUiLCJCZSIsIkRlIiwiRWUiLCJGZSIsImJhc2VTdGF0ZSIsImZpcnN0IiwibGFzdCIsImNhbGxiYWNrTGlzdCIsImhhc0ZvcmNlVXBkYXRlIiwiaXNJbml0aWFsaXplZCIsIkdlIiwibmV4dCIsIkhlIiwiSWUiLCJwYXJ0aWFsU3RhdGUiLCJKZSIsImlzUmVwbGFjZSIsImlzRm9yY2VkIiwiS2UiLCJRZSIsIlN5bWJvbCIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsIml0ZXJhdG9yIiwiWGUiLCJZZSIsIlplIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsInJlZnMiLCIkZSIsImFmIiwiTWFwIiwidSIsInoiLCIkJHR5cGVvZiIsIkciLCJJIiwiTCIsIkEiLCJ3IiwiTiIsImRvbmUiLCJKIiwiYmYiLCJjZiIsImRmIiwicmVuZGVyIiwic3RhdGUiLCJwZW5kaW5nQ29udGV4dCIsImNvbnRleHQiLCJzaG91bGRTZXRUZXh0Q29udGVudCIsInVzZVN5bmNTY2hlZHVsaW5nIiwic2hvdWxkRGVwcmlvcml0aXplU3VidHJlZSIsInB1c2hIb3N0Q29udGV4dCIsInB1c2hIb3N0Q29udGFpbmVyIiwiZW50ZXJIeWRyYXRpb25TdGF0ZSIsInJlc2V0SHlkcmF0aW9uU3RhdGUiLCJ0cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZSIsInVwZGF0ZXIiLCJpc01vdW50ZWQiLCJlbnF1ZXVlU2V0U3RhdGUiLCJuZXh0Q2FsbGJhY2siLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiYWRvcHRDbGFzc0luc3RhbmNlIiwiY29uc3RydWN0Q2xhc3NJbnN0YW5jZSIsIm1vdW50Q2xhc3NJbnN0YW5jZSIsInVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwidXBkYXRlQ2xhc3NJbnN0YW5jZSIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJjb21wb25lbnREaWRVcGRhdGUiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJMZSIsIk9iIiwiYmVnaW5Xb3JrIiwiaHlkcmF0ZSIsImJlZ2luRmFpbGVkV29yayIsImdmIiwia2YiLCJRYiIsImphIiwiaXNSZWFkeUZvckNvbW1pdCIsInlnIiwidCIsInpnIiwiQWciLCJOZSIsIk9lIiwiU2MiLCJCZyIsIlRjIiwiQ2ciLCJEZyIsIkVnIiwiUiIsImNvbXBvbmVudERpZENhdGNoIiwiY29tcG9uZW50U3RhY2siLCJjYSIsIlFjIiwiaGEiLCJxYSIsIkZnIiwiSCIsInJnIiwiR2ciLCJVYyIsIkYiLCJyYSIsIlJjIiwiZWIiLCJxZyIsImhhcyIsImFkZCIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiZXJyb3JCb3VuZGFyeSIsImVycm9yQm91bmRhcnlGb3VuZCIsImVycm9yQm91bmRhcnlOYW1lIiwid2lsbFJldHJ5Iiwic3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZyIsIlZjIiwia2EiLCJIZyIsIlJiIiwiSWciLCJuZXh0U2NoZWR1bGVkUm9vdCIsInJlbWFpbmluZ0V4cGlyYXRpb25UaW1lIiwiTyIsInNhIiwiRmEiLCJsYSIsIlNiIiwibWEiLCJuYSIsIldjIiwiUGUiLCJUYiIsIkpnIiwiWGMiLCJLZyIsImZiIiwiWWMiLCJVYiIsIlpjIiwiZmluaXNoZWRXb3JrIiwidGltZVJlbWFpbmluZyIsIkxnIiwiZ2V0Q2hpbGRIb3N0Q29udGV4dCIsImdldFJvb3RIb3N0Q29udGV4dCIsImdldEhvc3RDb250ZXh0IiwiZ2V0Um9vdEhvc3RDb250YWluZXIiLCJwb3BIb3N0Q29udGFpbmVyIiwicG9wSG9zdENvbnRleHQiLCJyZXNldEhvc3RDb250YWluZXIiLCJoZiIsImh5ZHJhdGlvbiIsInByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2UiLCJwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSIsInBvcEh5ZHJhdGlvblN0YXRlIiwiY2FuSHlkcmF0ZUluc3RhbmNlIiwiY2FuSHlkcmF0ZVRleHRJbnN0YW5jZSIsImdldE5leHRIeWRyYXRhYmxlU2libGluZyIsImdldEZpcnN0SHlkcmF0YWJsZUNoaWxkIiwiaHlkcmF0ZUluc3RhbmNlIiwiaHlkcmF0ZVRleHRJbnN0YW5jZSIsImpmIiwiTWUiLCJjcmVhdGVJbnN0YW5jZSIsImNyZWF0ZVRleHRJbnN0YW5jZSIsImFwcGVuZEluaXRpYWxDaGlsZCIsImZpbmFsaXplSW5pdGlhbENoaWxkcmVuIiwicHJlcGFyZVVwZGF0ZSIsInBlcnNpc3RlbmNlIiwibXV0YXRpb24iLCJjb21wbGV0ZVdvcmsiLCJlZiIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiZ2V0UHVibGljSW5zdGFuY2UiLCJjb21taXRNb3VudCIsImNvbW1pdFVwZGF0ZSIsInJlc2V0VGV4dENvbnRlbnQiLCJjb21taXRUZXh0VXBkYXRlIiwiYXBwZW5kQ2hpbGRUb0NvbnRhaW5lciIsImluc2VydEJlZm9yZSIsImluc2VydEluQ29udGFpbmVyQmVmb3JlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVDaGlsZEZyb21Db250YWluZXIiLCJjb21taXRSZXNldFRleHRDb250ZW50IiwiY29tbWl0UGxhY2VtZW50IiwiY29tbWl0RGVsZXRpb24iLCJjb21taXRXb3JrIiwiY29tbWl0TGlmZUN5Y2xlcyIsImNvbW1pdEF0dGFjaFJlZiIsImNvbW1pdERldGFjaFJlZiIsImZmIiwic2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrIiwiY2FuY2VsRGVmZXJyZWRDYWxsYmFjayIsInByZXBhcmVGb3JDb21taXQiLCJyZXNldEFmdGVyQ29tbWl0IiwiY29tcHV0ZUFzeW5jRXhwaXJhdGlvbiIsImNvbXB1dGVFeHBpcmF0aW9uRm9yRmliZXIiLCJzY2hlZHVsZVdvcmsiLCJiYXRjaGVkVXBkYXRlcyIsInVuYmF0Y2hlZFVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJkZWZlcnJlZFVwZGF0ZXMiLCJsZiIsIm9kIiwiY3JlYXRlQ29udGFpbmVyIiwidXBkYXRlQ29udGFpbmVyIiwiZ2V0UHVibGljUm9vdEluc3RhbmNlIiwiZmluZEhvc3RJbnN0YW5jZSIsImZpbmRIb3N0SW5zdGFuY2VXaXRoTm9Qb3J0YWxzIiwicGQiLCJpbmplY3RJbnRvRGV2VG9vbHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIkNlIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJtZiIsIm5mIiwib2YiLCJxZiIsInBlcmZvcm1hbmNlIiwicmYiLCJzZiIsInRmIiwicmVxdWVzdElkbGVDYWxsYmFjayIsImNhbmNlbElkbGVDYWxsYmFjayIsIkJmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJkaWRUaW1lb3V0IiwiQ2YiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJEZiIsInBvc3RNZXNzYWdlIiwiSW5maW5pdHkiLCJjbGVhclRpbWVvdXQiLCJFZiIsIkZmIiwiR2YiLCJJZiIsImlzTmFOIiwiSmYiLCJzZXRBdHRyaWJ1dGVOUyIsIktmIiwiSGYiLCJMZiIsInN0ZXAiLCJtaW4iLCJtYXgiLCJpbml0aWFsVmFsdWUiLCJpbml0aWFsQ2hlY2tlZCIsIk1mIiwiTmYiLCJPZiIsInBhcnNlRmxvYXQiLCJQZiIsIlJmIiwiQ2hpbGRyZW4iLCJRZiIsIlNmIiwiZGVmYXVsdFNlbGVjdGVkIiwiVGYiLCJ3YXNNdWx0aXBsZSIsIlVmIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsIm5hbWVzcGFjZVVSSSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJjZyIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsImRnIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiZWciLCJmZyIsInRyaW0iLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsImdnIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsImNyZWF0ZVRleHROb2RlIiwicGciLCJfX2h0bWwiLCJvbkNsaWNrIiwib25jbGljayIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJzZXRJbml0aWFsUHJvcGVydGllcyIsImRpZmZQcm9wZXJ0aWVzIiwidXBkYXRlUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFByb3BlcnRpZXMiLCJkaWZmSHlkcmF0ZWRUZXh0Iiwid2FybkZvclVubWF0Y2hlZFRleHQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50Iiwid2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dCIsIndhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudCIsIndhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwieGciLCJNZyIsIk5nIiwiWiIsInRhZ05hbWUiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImV4dGVuZCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZGlkTm90TWF0Y2hIeWRyYXRlZENvbnRhaW5lclRleHRJbnN0YW5jZSIsImRpZE5vdE1hdGNoSHlkcmF0ZWRUZXh0SW5zdGFuY2UiLCJkaWROb3RIeWRyYXRlQ29udGFpbmVySW5zdGFuY2UiLCJkaWROb3RIeWRyYXRlSW5zdGFuY2UiLCJkaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lckluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJUZXh0SW5zdGFuY2UiLCJkaWROb3RGaW5kSHlkcmF0YWJsZUluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVUZXh0SW5zdGFuY2UiLCJQZyIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJPZyIsIlFnIiwicGYiLCJSZyIsInVubW91bnQiLCJTZyIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXMiLCJFdmVudFBsdWdpbkh1YiIsIkV2ZW50UGx1Z2luUmVnaXN0cnkiLCJFdmVudFByb3BhZ2F0b3JzIiwiUmVhY3RDb250cm9sbGVkQ29tcG9uZW50IiwiUmVhY3RET01Db21wb25lbnRUcmVlIiwiUmVhY3RET01FdmVudExpc3RlbmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJUZyIsIlVnIiwiY2hlY2tEQ0UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJkZWZhdWx0UHJvcHMiLCJrZXlQcmVmaXgiLCJjb3VudCIsIj0iLCI6IiwiZXNjYXBlIiwidG9BcnJheSIsIm9ubHkiLCJDb21wb25lbnQiLCJQdXJlQ29tcG9uZW50IiwidW5zdGFibGVfQXN5bmNDb21wb25lbnQiLCJGcmFnbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsIm1lbW8iLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50Iiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJkb21TdHlsZSIsInBhcnRzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJuZXdTdHlsZXMiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJpbnNlcnRJbnRvIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwiYWRkQXR0cnMiLCJlbCIsIm9iaiIsInRyYW5zZm9ybSIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsIm9sZFNyYyIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJfX3dlYnBhY2tfYW1kX29wdGlvbnNfXyIsIl9yZWFjdCIsIkNhcmQiLCJzaGFwZUNsYXNzZXMiLCJfY2xhc3NuYW1lczIiLCJfY2FyZDIiLCJ0aGVtZSIsIl9yZWFjdDIiLCJfQ2FyZEl0ZW1Db250YWluZXIyIiwiY29udGFpbmVyIiwicHJvcFR5cGVzIiwiX3Byb3BUeXBlczIiLCJobXIiLCJfX1dFQlBBQ0tfT1VUREFURURfREVQRU5ERU5DSUVTX18iLCJuZXdDb250ZW50IiwiQ2FyZEVkaXRvciIsIl9jbGFzc0NhbGxDaGVjayIsIl90aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsImhhbmRsZUNhcmRDaGFuZ2UiLCJ1cGRhdGVDYXJkQ29udGVudCIsImNhcmRJdGVtcyIsIm9uQ2hhbmdlIiwiX0NhcmRUaGVtZVNlbGVjdG9yMiIsIm9uVXBkYXRlIiwiX0NhcmRJdGVtQ29udGFpbmVyRWRpdG9yMiIsIl9yZWYiLCJFZGl0YWJsZUNhcmQiLCJlZGl0TW9kZSIsIm9uVXBkYXRlQ2FyZCIsInRvZ2dsZUVkaXRNb2RlIiwidXBkYXRlZEVkaXRNb2RlIiwiaXNFZGl0YWJsZSIsIl90aGlzMiIsImFkZENhcmQiLCJyZW1vdmVDYXJkIiwiX0NhcmQyIiwiX0NhcmRFZGl0b3IyIiwiX0NhcmRJdGVtVHlwZXMiLCJDYXJkSXRlbUNvbnRhaW5lciIsIkNhcmRJdGVtIiwiX2NhcmRJdGVtQ29udGFpbmVyMiIsIkl0ZW1IYW5kbGVyIiwiQ2FyZEl0ZW1UeXBlcyIsIkRlZmF1bHRDYXJkSXRlbSIsIkNhcmRJdGVtQ29udGFpbmVyRWRpdG9yIiwiY3JlYXRlSXRlbSIsInJlbW92ZUl0ZW0iLCJ1cGRhdGVJdGVtIiwiaXRlbUluZGV4IiwiY2FyZEl0ZW1JbnB1dHMiLCJfQ2FyZEl0ZW1FZGl0b3IyIiwib25SZW1vdmUiLCJDYXJkSXRlbUVkaXRvciIsIl9DYXJkSXRlbVR5cGVTZWxlY3RvcjIiLCJDYXJkSXRlbUlucHV0IiwiSW5wdXRJdGVtSGFuZGxlciIsIkNhcmRJdGVtVHlwZVNlbGVjdG9yIiwiaGFuZGxlVHlwZUNoYW5nZSIsInR5cGVzT3B0aW9ucyIsInZhbHVlcyIsImxhYmVsIiwidGl0bGUiLCJmaWVsZCIsIndyaXRhYmxlIiwibWFwRWFjaCIsImVudHJpZXMiLCJfcmVmMiIsIl9zbGljZWRUb0FycmF5IiwiQ2FyZEZpZWxkIiwiX2NhcmRGaWVsZDIiLCJoZWFkZXIiLCJDYXJkRmllbGRJbnB1dCIsImhhbmRsZUhlYWRlckNoYW5nZSIsImhhbmRsZVZhbHVlQ2hhbmdlIiwiQ2FyZFRleHQiLCJfY2FyZFRleHQyIiwiQ2FyZFRleHRJbnB1dCIsImhhbmRsZVRleHRDaGFuZ2UiLCJDYXJkVGl0bGUiLCJfY2FyZFRpdGxlMiIsIkNhcmRUaXRsZUlucHV0IiwiaGFuZGxlVGl0bGVDaGFuZ2UiLCJDYXJkSW1wb3J0ZXIiLCJoYW5kbGVDaGFuZ2UiLCJmaWxlSW1wb3J0ZXIiLCJjcmVhdGVGaWxlSW1wb3J0ZXIiLCJvbkltcG9ydCIsIm9ubG9hZCIsImNhcmRzIiwiZmlsZXMiLCJzZWxlY3RvckZpbGVzIiwiX3RoaXMzIiwiaW1wb3J0RmlsZSIsInJlYWRBc1RleHQiLCJDYXJkTGlzdENvbnRhaW5lciIsImNyZWF0ZUNhcmQiLCJhZGRDYXJkcyIsIm9uVXBkYXRlQ29udGFpbmVyIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiY2FyZEluZGV4IiwiaXRlbXMiLCJfRWRpdGFibGVDYXJkMiIsIl9jYXJkTGlzdENvbnRhaW5lcjIiLCJfQ2FyZEltcG9ydGVyMiIsIkNhcmRUaGVtZVNlbGVjdG9yIiwiX0NhcmRUaGVtZXNUeXBlczIiLCJncmVlbkxpZ2h0IiwiYmx1ZUxpZ2h0IiwicmVkTGlnaHQiLCJ5ZWxsb3dMaWdodCIsInJlZEdyYXkiLCJncmVlbkxpemFyZCIsIkNvZGV4IiwiY29kZXgiLCJ1cGRhdGVDb2RleCIsInVwZGF0ZUNhcmRzIiwiX0NvZGV4VG9vbGJhcjIiLCJvbkxvYWRDb2RleCIsIl9DYXJkTGlzdDIiLCJDb2RleEV4cG9ydGVyIiwiZXhwb3J0Q2FyZHMiLCJsb2FkQ29kZXgiLCJ0b0V4cG9ydENvbnRlbnQiLCJfZmlsZVNhdmVyMiIsInRvRXhwb3J0TmFtZSIsIkNvZGV4VG9vbGJhciIsIl9jb2RleDIiLCJfQ29kZXhFeHBvcnRlcjIiLCJfRGVja0J1dHRvbjIiLCJvbkxvYWREZWNrIiwiRGVjayIsIkRlY2tCdXR0b24iLCJsb2FkRGVjayIsIl9Qb3B1cEJ1dHRvbjIiLCJfRGVjazIiLCJkb20iLCJnZXRFbGVtZW50QnlJZCIsImZldGNoIiwicmVzcG9uc2UiLCJqc29uIiwiX3JlYWN0RG9tMiIsIl9Db2RleDIiLCJkaXNwbGF5Q29kZXgiLCJQb3B1cEJ1dHRvbiIsIm9wZW5Qb3B1cCIsInBvcHVwIiwiY29weVN0eWxlcyIsInBvcHVwRG9jIiwicG9wdXBTdHlsZVNoZWV0IiwiY3NzUnVsZSIsInBvcHVwUm9vdCIsInNvdXJjZURvYyIsInRhcmdldERvYyIsInN0eWxlU2hlZXRzIiwiY29weVN0eWxlIiwiY3NzUnVsZXMiLCJjb3B5U3R5bGVFbGVtZW50IiwiY29weVN0eWxlTGluayIsInRhcmdldFN0eWxlU2hlZXQiLCJ0YXJnZXRTdHlsZUxpbmsiXSwibWFwcGluZ3MiOiJhQUdBLElBQUFBLEVBQUFDLE9BQUEsaUJBQ0FBLE9BQUEsaUJBQ0EsU0FBQUMsRUFBQUMsSUFvUUEsU0FBQUQsRUFBQUMsR0FDQSxJQUFBQyxFQUFBRixLQUFBRyxFQUFBSCxHQUNBLE9BRUEsUUFBQUksS0FEQUQsRUFBQUgsSUFBQSxFQUNBQyxFQUNBSSxPQUFBQyxVQUFBQyxlQUFBQyxLQUFBUCxFQUFBRyxLQUNBSyxFQUFBTCxHQUFBSCxFQUFBRyxJQUdBLEtBQUFNLEdBQUEsSUFBQUMsR0FDQUMsSUE3UUFDLENBQUFiLEVBQUFDLEdBQ0FILEtBQUFFLEVBQUFDLElBdURBLElBSUFhLEVBSkFDLEdBQUEsRUFDQUMsRUFBQSx1QkFDQUMsRUFBQSxJQUNBQyxLQUVBQyxLQUNBQyxLQUdBLFNBQUFDLEVBQUFqQixHQUNBLElBQUFrQixFQUFBQyxFQUFBbkIsR0FDQSxJQUFBa0IsRUFBQSxPQUFBRSxFQUNBLElBQUFDLEVBQUEsU0FBQUMsR0FtQkEsT0FsQkFKLEVBQUFLLElB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QUFpQnJvRCxZQUFZNG5ELEtBRWhEUywwQ0FHVU4sRUFBV2xMLEdBQzVCLElBQU15TCxFQUFrQlAsRUFBVWxvRCxjQUFjLFFBR2hELE9BRkF5b0QsRUFBZ0I5TCxJQUFNLGFBQ3RCOEwsRUFBZ0JwNEMsS0FBTzJzQyxFQUFXM3NDLEtBQzNCbzRDLFdBS2ZoQixFQUFZeEksV0FDUnFELE1BQU9wRCxFQUFBNW1DLFFBQVUzRSxPQUFPTixXQUN4QjNXLFNBQVV3aUQsRUFBQTVtQyxRQUFVdkUsbUJBR1QwekMiLCJmaWxlIjoiYXBwLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdGZ1bmN0aW9uIGhvdERpc3Bvc2VDaHVuayhjaHVua0lkKSB7XG4gXHRcdGRlbGV0ZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG4gXHR9XG4gXHR2YXIgcGFyZW50SG90VXBkYXRlQ2FsbGJhY2sgPSB3aW5kb3dbXCJ3ZWJwYWNrSG90VXBkYXRlXCJdO1xuIFx0d2luZG93W1wid2VicGFja0hvdFVwZGF0ZVwiXSA9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gd2VicGFja0hvdFVwZGF0ZUNhbGxiYWNrKGNodW5rSWQsIG1vcmVNb2R1bGVzKSB7XG4gXHRcdGhvdEFkZFVwZGF0ZUNodW5rKGNodW5rSWQsIG1vcmVNb2R1bGVzKTtcbiBcdFx0aWYgKHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrKSBwYXJlbnRIb3RVcGRhdGVDYWxsYmFjayhjaHVua0lkLCBtb3JlTW9kdWxlcyk7XG4gXHR9IDtcblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3REb3dubG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpIHtcbiBcdFx0dmFyIGhlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF07XG4gXHRcdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuIFx0XHRzY3JpcHQuY2hhcnNldCA9IFwidXRmLThcIjtcbiBcdFx0c2NyaXB0LnNyYyA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBjaHVua0lkICsgXCIuXCIgKyBob3RDdXJyZW50SGFzaCArIFwiLmhvdC11cGRhdGUuanNcIjtcbiBcdFx0O1xuIFx0XHRoZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90RG93bmxvYWRNYW5pZmVzdChyZXF1ZXN0VGltZW91dCkge1xuIFx0XHRyZXF1ZXN0VGltZW91dCA9IHJlcXVlc3RUaW1lb3V0IHx8IDEwMDAwO1xuIFx0XHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gXHRcdFx0aWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCA9PT0gXCJ1bmRlZmluZWRcIilcbiBcdFx0XHRcdHJldHVybiByZWplY3QobmV3IEVycm9yKFwiTm8gYnJvd3NlciBzdXBwb3J0XCIpKTtcbiBcdFx0XHR0cnkge1xuIFx0XHRcdFx0dmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiBcdFx0XHRcdHZhciByZXF1ZXN0UGF0aCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBob3RDdXJyZW50SGFzaCArIFwiLmhvdC11cGRhdGUuanNvblwiO1xuIFx0XHRcdFx0cmVxdWVzdC5vcGVuKFwiR0VUXCIsIHJlcXVlc3RQYXRoLCB0cnVlKTtcbiBcdFx0XHRcdHJlcXVlc3QudGltZW91dCA9IHJlcXVlc3RUaW1lb3V0O1xuIFx0XHRcdFx0cmVxdWVzdC5zZW5kKG51bGwpO1xuIFx0XHRcdH0gY2F0Y2ggKGVycikge1xuIFx0XHRcdFx0cmV0dXJuIHJlamVjdChlcnIpO1xuIFx0XHRcdH1cbiBcdFx0XHRyZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuIFx0XHRcdFx0aWYgKHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkgcmV0dXJuO1xuIFx0XHRcdFx0aWYgKHJlcXVlc3Quc3RhdHVzID09PSAwKSB7XG4gXHRcdFx0XHRcdC8vIHRpbWVvdXRcbiBcdFx0XHRcdFx0cmVqZWN0KFxuIFx0XHRcdFx0XHRcdG5ldyBFcnJvcihcIk1hbmlmZXN0IHJlcXVlc3QgdG8gXCIgKyByZXF1ZXN0UGF0aCArIFwiIHRpbWVkIG91dC5cIilcbiBcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDQwNCkge1xuIFx0XHRcdFx0XHQvLyBubyB1cGRhdGUgYXZhaWxhYmxlXG4gXHRcdFx0XHRcdHJlc29sdmUoKTtcbiBcdFx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5zdGF0dXMgIT09IDIwMCAmJiByZXF1ZXN0LnN0YXR1cyAhPT0gMzA0KSB7XG4gXHRcdFx0XHRcdC8vIG90aGVyIGZhaWx1cmVcbiBcdFx0XHRcdFx0cmVqZWN0KG5ldyBFcnJvcihcIk1hbmlmZXN0IHJlcXVlc3QgdG8gXCIgKyByZXF1ZXN0UGF0aCArIFwiIGZhaWxlZC5cIikpO1xuIFx0XHRcdFx0fSBlbHNlIHtcbiBcdFx0XHRcdFx0Ly8gc3VjY2Vzc1xuIFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdHZhciB1cGRhdGUgPSBKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiBcdFx0XHRcdFx0fSBjYXRjaCAoZSkge1xuIFx0XHRcdFx0XHRcdHJlamVjdChlKTtcbiBcdFx0XHRcdFx0XHRyZXR1cm47XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0cmVzb2x2ZSh1cGRhdGUpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH07XG4gXHRcdH0pO1xuIFx0fVxuXG4gXHR2YXIgaG90QXBwbHlPblVwZGF0ZSA9IHRydWU7XG4gXHR2YXIgaG90Q3VycmVudEhhc2ggPSBcImMzYzQ0Nzg4Mjg2N2MyY2I4NjU3XCI7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdHZhciBob3RSZXF1ZXN0VGltZW91dCA9IDEwMDAwO1xuIFx0dmFyIGhvdEN1cnJlbnRNb2R1bGVEYXRhID0ge307XG4gXHR2YXIgaG90Q3VycmVudENoaWxkTW9kdWxlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gXHR2YXIgaG90Q3VycmVudFBhcmVudHMgPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0dmFyIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlUmVxdWlyZShtb2R1bGVJZCkge1xuIFx0XHR2YXIgbWUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0aWYgKCFtZSkgcmV0dXJuIF9fd2VicGFja19yZXF1aXJlX187XG4gXHRcdHZhciBmbiA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiBcdFx0XHRpZiAobWUuaG90LmFjdGl2ZSkge1xuIFx0XHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcbiBcdFx0XHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0ucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKSA9PT0gLTEpXG4gXHRcdFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XS5wYXJlbnRzLnB1c2gobW9kdWxlSWQpO1xuIFx0XHRcdFx0fSBlbHNlIHtcbiBcdFx0XHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbbW9kdWxlSWRdO1xuIFx0XHRcdFx0XHRob3RDdXJyZW50Q2hpbGRNb2R1bGUgPSByZXF1ZXN0O1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKG1lLmNoaWxkcmVuLmluZGV4T2YocmVxdWVzdCkgPT09IC0xKSBtZS5jaGlsZHJlbi5wdXNoKHJlcXVlc3QpO1xuIFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRjb25zb2xlLndhcm4oXG4gXHRcdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICtcbiBcdFx0XHRcdFx0XHRyZXF1ZXN0ICtcbiBcdFx0XHRcdFx0XHRcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgK1xuIFx0XHRcdFx0XHRcdG1vZHVsZUlkXG4gXHRcdFx0XHQpO1xuIFx0XHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbXTtcbiBcdFx0XHR9XG4gXHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ocmVxdWVzdCk7XG4gXHRcdH07XG4gXHRcdHZhciBPYmplY3RGYWN0b3J5ID0gZnVuY3Rpb24gT2JqZWN0RmFjdG9yeShuYW1lKSB7XG4gXHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuIFx0XHRcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfX1tuYW1lXTtcbiBcdFx0XHRcdH0sXG4gXHRcdFx0XHRzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX19bbmFtZV0gPSB2YWx1ZTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9O1xuIFx0XHR9O1xuIFx0XHRmb3IgKHZhciBuYW1lIGluIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX193ZWJwYWNrX3JlcXVpcmVfXywgbmFtZSkgJiZcbiBcdFx0XHRcdG5hbWUgIT09IFwiZVwiXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIG5hbWUsIE9iamVjdEZhY3RvcnkobmFtZSkpO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRmbi5lID0gZnVuY3Rpb24oY2h1bmtJZCkge1xuIFx0XHRcdGlmIChob3RTdGF0dXMgPT09IFwicmVhZHlcIikgaG90U2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcbiBcdFx0XHRob3RDaHVua3NMb2FkaW5nKys7XG4gXHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uZShjaHVua0lkKS50aGVuKGZpbmlzaENodW5rTG9hZGluZywgZnVuY3Rpb24oZXJyKSB7XG4gXHRcdFx0XHRmaW5pc2hDaHVua0xvYWRpbmcoKTtcbiBcdFx0XHRcdHRocm93IGVycjtcbiBcdFx0XHR9KTtcblxuIFx0XHRcdGZ1bmN0aW9uIGZpbmlzaENodW5rTG9hZGluZygpIHtcbiBcdFx0XHRcdGhvdENodW5rc0xvYWRpbmctLTtcbiBcdFx0XHRcdGlmIChob3RTdGF0dXMgPT09IFwicHJlcGFyZVwiKSB7XG4gXHRcdFx0XHRcdGlmICghaG90V2FpdGluZ0ZpbGVzTWFwW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRcdFx0aG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0aWYgKGhvdENodW5rc0xvYWRpbmcgPT09IDAgJiYgaG90V2FpdGluZ0ZpbGVzID09PSAwKSB7XG4gXHRcdFx0XHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9O1xuIFx0XHRyZXR1cm4gZm47XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSB7XG4gXHRcdHZhciBob3QgPSB7XG4gXHRcdFx0Ly8gcHJpdmF0ZSBzdHVmZlxuIFx0XHRcdF9hY2NlcHRlZERlcGVuZGVuY2llczoge30sXG4gXHRcdFx0X2RlY2xpbmVkRGVwZW5kZW5jaWVzOiB7fSxcbiBcdFx0XHRfc2VsZkFjY2VwdGVkOiBmYWxzZSxcbiBcdFx0XHRfc2VsZkRlY2xpbmVkOiBmYWxzZSxcbiBcdFx0XHRfZGlzcG9zZUhhbmRsZXJzOiBbXSxcbiBcdFx0XHRfbWFpbjogaG90Q3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZCxcblxuIFx0XHRcdC8vIE1vZHVsZSBBUElcbiBcdFx0XHRhY3RpdmU6IHRydWUsXG4gXHRcdFx0YWNjZXB0OiBmdW5jdGlvbihkZXAsIGNhbGxiYWNrKSB7XG4gXHRcdFx0XHRpZiAodHlwZW9mIGRlcCA9PT0gXCJ1bmRlZmluZWRcIikgaG90Ll9zZWxmQWNjZXB0ZWQgPSB0cnVlO1xuIFx0XHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJmdW5jdGlvblwiKSBob3QuX3NlbGZBY2NlcHRlZCA9IGRlcDtcbiBcdFx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIpXG4gXHRcdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuIFx0XHRcdFx0XHRcdGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XG4gXHRcdFx0XHRlbHNlIGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XG4gXHRcdFx0fSxcbiBcdFx0XHRkZWNsaW5lOiBmdW5jdGlvbihkZXApIHtcbiBcdFx0XHRcdGlmICh0eXBlb2YgZGVwID09PSBcInVuZGVmaW5lZFwiKSBob3QuX3NlbGZEZWNsaW5lZCA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKVxuIFx0XHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcbiBcdFx0XHRcdFx0XHRob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSB0cnVlO1xuIFx0XHRcdFx0ZWxzZSBob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcF0gPSB0cnVlO1xuIFx0XHRcdH0sXG4gXHRcdFx0ZGlzcG9zZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiBcdFx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuIFx0XHRcdH0sXG4gXHRcdFx0YWRkRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gXHRcdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcbiBcdFx0XHR9LFxuIFx0XHRcdHJlbW92ZURpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuIFx0XHRcdFx0dmFyIGlkeCA9IGhvdC5fZGlzcG9zZUhhbmRsZXJzLmluZGV4T2YoY2FsbGJhY2spO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHR9LFxuXG4gXHRcdFx0Ly8gTWFuYWdlbWVudCBBUElcbiBcdFx0XHRjaGVjazogaG90Q2hlY2ssXG4gXHRcdFx0YXBwbHk6IGhvdEFwcGx5LFxuIFx0XHRcdHN0YXR1czogZnVuY3Rpb24obCkge1xuIFx0XHRcdFx0aWYgKCFsKSByZXR1cm4gaG90U3RhdHVzO1xuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcbiBcdFx0XHR9LFxuIFx0XHRcdGFkZFN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uKGwpIHtcbiBcdFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG4gXHRcdFx0fSxcbiBcdFx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbihsKSB7XG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90U3RhdHVzSGFuZGxlcnMuaW5kZXhPZihsKTtcbiBcdFx0XHRcdGlmIChpZHggPj0gMCkgaG90U3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0fSxcblxuIFx0XHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxuIFx0XHRcdGRhdGE6IGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxuIFx0XHR9O1xuIFx0XHRob3RDdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XG4gXHRcdHJldHVybiBob3Q7XG4gXHR9XG5cbiBcdHZhciBob3RTdGF0dXNIYW5kbGVycyA9IFtdO1xuIFx0dmFyIGhvdFN0YXR1cyA9IFwiaWRsZVwiO1xuXG4gXHRmdW5jdGlvbiBob3RTZXRTdGF0dXMobmV3U3RhdHVzKSB7XG4gXHRcdGhvdFN0YXR1cyA9IG5ld1N0YXR1cztcbiBcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBob3RTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcbiBcdFx0XHRob3RTdGF0dXNIYW5kbGVyc1tpXS5jYWxsKG51bGwsIG5ld1N0YXR1cyk7XG4gXHR9XG5cbiBcdC8vIHdoaWxlIGRvd25sb2FkaW5nXG4gXHR2YXIgaG90V2FpdGluZ0ZpbGVzID0gMDtcbiBcdHZhciBob3RDaHVua3NMb2FkaW5nID0gMDtcbiBcdHZhciBob3RXYWl0aW5nRmlsZXNNYXAgPSB7fTtcbiBcdHZhciBob3RSZXF1ZXN0ZWRGaWxlc01hcCA9IHt9O1xuIFx0dmFyIGhvdEF2YWlsYWJsZUZpbGVzTWFwID0ge307XG4gXHR2YXIgaG90RGVmZXJyZWQ7XG5cbiBcdC8vIFRoZSB1cGRhdGUgaW5mb1xuIFx0dmFyIGhvdFVwZGF0ZSwgaG90VXBkYXRlTmV3SGFzaDtcblxuIFx0ZnVuY3Rpb24gdG9Nb2R1bGVJZChpZCkge1xuIFx0XHR2YXIgaXNOdW1iZXIgPSAraWQgKyBcIlwiID09PSBpZDtcbiBcdFx0cmV0dXJuIGlzTnVtYmVyID8gK2lkIDogaWQ7XG4gXHR9XG5cbiBcdGZ1bmN0aW9uIGhvdENoZWNrKGFwcGx5KSB7XG4gXHRcdGlmIChob3RTdGF0dXMgIT09IFwiaWRsZVwiKVxuIFx0XHRcdHRocm93IG5ldyBFcnJvcihcImNoZWNrKCkgaXMgb25seSBhbGxvd2VkIGluIGlkbGUgc3RhdHVzXCIpO1xuIFx0XHRob3RBcHBseU9uVXBkYXRlID0gYXBwbHk7XG4gXHRcdGhvdFNldFN0YXR1cyhcImNoZWNrXCIpO1xuIFx0XHRyZXR1cm4gaG90RG93bmxvYWRNYW5pZmVzdChob3RSZXF1ZXN0VGltZW91dCkudGhlbihmdW5jdGlvbih1cGRhdGUpIHtcbiBcdFx0XHRpZiAoIXVwZGF0ZSkge1xuIFx0XHRcdFx0aG90U2V0U3RhdHVzKFwiaWRsZVwiKTtcbiBcdFx0XHRcdHJldHVybiBudWxsO1xuIFx0XHRcdH1cbiBcdFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcCA9IHt9O1xuIFx0XHRcdGhvdFdhaXRpbmdGaWxlc01hcCA9IHt9O1xuIFx0XHRcdGhvdEF2YWlsYWJsZUZpbGVzTWFwID0gdXBkYXRlLmM7XG4gXHRcdFx0aG90VXBkYXRlTmV3SGFzaCA9IHVwZGF0ZS5oO1xuXG4gXHRcdFx0aG90U2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcbiBcdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuIFx0XHRcdFx0aG90RGVmZXJyZWQgPSB7XG4gXHRcdFx0XHRcdHJlc29sdmU6IHJlc29sdmUsXG4gXHRcdFx0XHRcdHJlamVjdDogcmVqZWN0XG4gXHRcdFx0XHR9O1xuIFx0XHRcdH0pO1xuIFx0XHRcdGhvdFVwZGF0ZSA9IHt9O1xuIFx0XHRcdHZhciBjaHVua0lkID0gMDtcbiBcdFx0XHR7XG4gXHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWxvbmUtYmxvY2tzXG4gXHRcdFx0XHQvKmdsb2JhbHMgY2h1bmtJZCAqL1xuIFx0XHRcdFx0aG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0fVxuIFx0XHRcdGlmIChcbiBcdFx0XHRcdGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIgJiZcbiBcdFx0XHRcdGhvdENodW5rc0xvYWRpbmcgPT09IDAgJiZcbiBcdFx0XHRcdGhvdFdhaXRpbmdGaWxlcyA9PT0gMFxuIFx0XHRcdCkge1xuIFx0XHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xuIFx0XHRcdH1cbiBcdFx0XHRyZXR1cm4gcHJvbWlzZTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90QWRkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgbW9yZU1vZHVsZXMpIHtcbiBcdFx0aWYgKCFob3RBdmFpbGFibGVGaWxlc01hcFtjaHVua0lkXSB8fCAhaG90UmVxdWVzdGVkRmlsZXNNYXBbY2h1bmtJZF0pXG4gXHRcdFx0cmV0dXJuO1xuIFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IGZhbHNlO1xuIFx0XHRmb3IgKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuIFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0aG90VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0aWYgKC0taG90V2FpdGluZ0ZpbGVzID09PSAwICYmIGhvdENodW5rc0xvYWRpbmcgPT09IDApIHtcbiBcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHRpZiAoIWhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdKSB7XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzTWFwW2NodW5rSWRdID0gdHJ1ZTtcbiBcdFx0fSBlbHNlIHtcbiBcdFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IHRydWU7XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzKys7XG4gXHRcdFx0aG90RG93bmxvYWRVcGRhdGVDaHVuayhjaHVua0lkKTtcbiBcdFx0fVxuIFx0fVxuXG4gXHRmdW5jdGlvbiBob3RVcGRhdGVEb3dubG9hZGVkKCkge1xuIFx0XHRob3RTZXRTdGF0dXMoXCJyZWFkeVwiKTtcbiBcdFx0dmFyIGRlZmVycmVkID0gaG90RGVmZXJyZWQ7XG4gXHRcdGhvdERlZmVycmVkID0gbnVsbDtcbiBcdFx0aWYgKCFkZWZlcnJlZCkgcmV0dXJuO1xuIFx0XHRpZiAoaG90QXBwbHlPblVwZGF0ZSkge1xuIFx0XHRcdC8vIFdyYXAgZGVmZXJyZWQgb2JqZWN0IGluIFByb21pc2UgdG8gbWFyayBpdCBhcyBhIHdlbGwtaGFuZGxlZCBQcm9taXNlIHRvXG4gXHRcdFx0Ly8gYXZvaWQgdHJpZ2dlcmluZyB1bmNhdWdodCBleGNlcHRpb24gd2FybmluZyBpbiBDaHJvbWUuXG4gXHRcdFx0Ly8gU2VlIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ2NTY2NlxuIFx0XHRcdFByb21pc2UucmVzb2x2ZSgpXG4gXHRcdFx0XHQudGhlbihmdW5jdGlvbigpIHtcbiBcdFx0XHRcdFx0cmV0dXJuIGhvdEFwcGx5KGhvdEFwcGx5T25VcGRhdGUpO1xuIFx0XHRcdFx0fSlcbiBcdFx0XHRcdC50aGVuKFxuIFx0XHRcdFx0XHRmdW5jdGlvbihyZXN1bHQpIHtcbiBcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHJlc3VsdCk7XG4gXHRcdFx0XHRcdH0sXG4gXHRcdFx0XHRcdGZ1bmN0aW9uKGVycikge1xuIFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChlcnIpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHQpO1xuIFx0XHR9IGVsc2Uge1xuIFx0XHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcbiBcdFx0XHRmb3IgKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcbiBcdFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaG90VXBkYXRlLCBpZCkpIHtcbiBcdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2godG9Nb2R1bGVJZChpZCkpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90QXBwbHkob3B0aW9ucykge1xuIFx0XHRpZiAoaG90U3RhdHVzICE9PSBcInJlYWR5XCIpXG4gXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiYXBwbHkoKSBpcyBvbmx5IGFsbG93ZWQgaW4gcmVhZHkgc3RhdHVzXCIpO1xuIFx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuIFx0XHR2YXIgY2I7XG4gXHRcdHZhciBpO1xuIFx0XHR2YXIgajtcbiBcdFx0dmFyIG1vZHVsZTtcbiBcdFx0dmFyIG1vZHVsZUlkO1xuXG4gXHRcdGZ1bmN0aW9uIGdldEFmZmVjdGVkU3R1ZmYodXBkYXRlTW9kdWxlSWQpIHtcbiBcdFx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW3VwZGF0ZU1vZHVsZUlkXTtcbiBcdFx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcblxuIFx0XHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5zbGljZSgpLm1hcChmdW5jdGlvbihpZCkge1xuIFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0Y2hhaW46IFtpZF0sXG4gXHRcdFx0XHRcdGlkOiBpZFxuIFx0XHRcdFx0fTtcbiBcdFx0XHR9KTtcbiBcdFx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuIFx0XHRcdFx0dmFyIHF1ZXVlSXRlbSA9IHF1ZXVlLnBvcCgpO1xuIFx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWVJdGVtLmlkO1xuIFx0XHRcdFx0dmFyIGNoYWluID0gcXVldWVJdGVtLmNoYWluO1xuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRpZiAoIW1vZHVsZSB8fCBtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQpIGNvbnRpbnVlO1xuIFx0XHRcdFx0aWYgKG1vZHVsZS5ob3QuX3NlbGZEZWNsaW5lZCkge1xuIFx0XHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1kZWNsaW5lZFwiLFxuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbixcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcbiBcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChtb2R1bGUuaG90Ll9tYWluKSB7XG4gXHRcdFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHRcdFx0dHlwZTogXCJ1bmFjY2VwdGVkXCIsXG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuIFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGUucGFyZW50cy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdFx0XHR2YXIgcGFyZW50SWQgPSBtb2R1bGUucGFyZW50c1tpXTtcbiBcdFx0XHRcdFx0dmFyIHBhcmVudCA9IGluc3RhbGxlZE1vZHVsZXNbcGFyZW50SWRdO1xuIFx0XHRcdFx0XHRpZiAoIXBhcmVudCkgY29udGludWU7XG4gXHRcdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRcdFx0dHlwZTogXCJkZWNsaW5lZFwiLFxuIFx0XHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcbiBcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcbiBcdFx0XHRcdFx0XHRcdHBhcmVudElkOiBwYXJlbnRJZFxuIFx0XHRcdFx0XHRcdH07XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0aWYgKG91dGRhdGVkTW9kdWxlcy5pbmRleE9mKHBhcmVudElkKSAhPT0gLTEpIGNvbnRpbnVlO1xuIFx0XHRcdFx0XHRpZiAocGFyZW50LmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0pXG4gXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0gPSBbXTtcbiBcdFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0sIFttb2R1bGVJZF0pO1xuIFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF07XG4gXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKHBhcmVudElkKTtcbiBcdFx0XHRcdFx0cXVldWUucHVzaCh7XG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcbiBcdFx0XHRcdFx0XHRpZDogcGFyZW50SWRcbiBcdFx0XHRcdFx0fSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuXG4gXHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdHR5cGU6IFwiYWNjZXB0ZWRcIixcbiBcdFx0XHRcdG1vZHVsZUlkOiB1cGRhdGVNb2R1bGVJZCxcbiBcdFx0XHRcdG91dGRhdGVkTW9kdWxlczogb3V0ZGF0ZWRNb2R1bGVzLFxuIFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXM6IG91dGRhdGVkRGVwZW5kZW5jaWVzXG4gXHRcdFx0fTtcbiBcdFx0fVxuXG4gXHRcdGZ1bmN0aW9uIGFkZEFsbFRvU2V0KGEsIGIpIHtcbiBcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdHZhciBpdGVtID0gYltpXTtcbiBcdFx0XHRcdGlmIChhLmluZGV4T2YoaXRlbSkgPT09IC0xKSBhLnB1c2goaXRlbSk7XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gYXQgYmVnaW4gYWxsIHVwZGF0ZXMgbW9kdWxlcyBhcmUgb3V0ZGF0ZWRcbiBcdFx0Ly8gdGhlIFwib3V0ZGF0ZWRcIiBzdGF0dXMgY2FuIHByb3BhZ2F0ZSB0byBwYXJlbnRzIGlmIHRoZXkgZG9uJ3QgYWNjZXB0IHRoZSBjaGlsZHJlblxuIFx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcbiBcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuIFx0XHR2YXIgYXBwbGllZFVwZGF0ZSA9IHt9O1xuXG4gXHRcdHZhciB3YXJuVW5leHBlY3RlZFJlcXVpcmUgPSBmdW5jdGlvbiB3YXJuVW5leHBlY3RlZFJlcXVpcmUoKSB7XG4gXHRcdFx0Y29uc29sZS53YXJuKFxuIFx0XHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgKyByZXN1bHQubW9kdWxlSWQgKyBcIikgdG8gZGlzcG9zZWQgbW9kdWxlXCJcbiBcdFx0XHQpO1xuIFx0XHR9O1xuXG4gXHRcdGZvciAodmFyIGlkIGluIGhvdFVwZGF0ZSkge1xuIFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaG90VXBkYXRlLCBpZCkpIHtcbiBcdFx0XHRcdG1vZHVsZUlkID0gdG9Nb2R1bGVJZChpZCk7XG4gXHRcdFx0XHQvKiogQHR5cGUge1RPRE99ICovXG4gXHRcdFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRcdFx0aWYgKGhvdFVwZGF0ZVtpZF0pIHtcbiBcdFx0XHRcdFx0cmVzdWx0ID0gZ2V0QWZmZWN0ZWRTdHVmZihtb2R1bGVJZCk7XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHRyZXN1bHQgPSB7XG4gXHRcdFx0XHRcdFx0dHlwZTogXCJkaXNwb3NlZFwiLFxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBpZFxuIFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0LyoqIEB0eXBlIHtFcnJvcnxmYWxzZX0gKi9cbiBcdFx0XHRcdHZhciBhYm9ydEVycm9yID0gZmFsc2U7XG4gXHRcdFx0XHR2YXIgZG9BcHBseSA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGRvRGlzcG9zZSA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGNoYWluSW5mbyA9IFwiXCI7XG4gXHRcdFx0XHRpZiAocmVzdWx0LmNoYWluKSB7XG4gXHRcdFx0XHRcdGNoYWluSW5mbyA9IFwiXFxuVXBkYXRlIHByb3BhZ2F0aW9uOiBcIiArIHJlc3VsdC5jaGFpbi5qb2luKFwiIC0+IFwiKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdHN3aXRjaCAocmVzdWx0LnR5cGUpIHtcbiBcdFx0XHRcdFx0Y2FzZSBcInNlbGYtZGVjbGluZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG4gXHRcdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuIFx0XHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBzZWxmIGRlY2xpbmU6IFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcImRlY2xpbmVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcbiBcdFx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2YgZGVjbGluZWQgZGVwZW5kZW5jeTogXCIgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG4gXHRcdFx0XHRcdFx0XHRcdFx0XCIgaW4gXCIgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5wYXJlbnRJZCArXG4gXHRcdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG4gXHRcdFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRjYXNlIFwidW5hY2NlcHRlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uVW5hY2NlcHRlZCkgb3B0aW9ucy5vblVuYWNjZXB0ZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlVW5hY2NlcHRlZClcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG4gXHRcdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIFwiICsgbW9kdWxlSWQgKyBcIiBpcyBub3QgYWNjZXB0ZWRcIiArIGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcImFjY2VwdGVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25BY2NlcHRlZCkgb3B0aW9ucy5vbkFjY2VwdGVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0ZG9BcHBseSA9IHRydWU7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJkaXNwb3NlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGlzcG9zZWQpIG9wdGlvbnMub25EaXNwb3NlZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGRvRGlzcG9zZSA9IHRydWU7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGRlZmF1bHQ6XG4gXHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiVW5leGNlcHRpb24gdHlwZSBcIiArIHJlc3VsdC50eXBlKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChhYm9ydEVycm9yKSB7XG4gXHRcdFx0XHRcdGhvdFNldFN0YXR1cyhcImFib3J0XCIpO1xuIFx0XHRcdFx0XHRyZXR1cm4gUHJvbWlzZS5yZWplY3QoYWJvcnRFcnJvcik7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAoZG9BcHBseSkge1xuIFx0XHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IGhvdFVwZGF0ZVttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgcmVzdWx0Lm91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdFx0XHRcdGZvciAobW9kdWxlSWQgaW4gcmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG4gXHRcdFx0XHRcdFx0aWYgKFxuIFx0XHRcdFx0XHRcdFx0T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKFxuIFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMsXG4gXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkXG4gXHRcdFx0XHRcdFx0XHQpXG4gXHRcdFx0XHRcdFx0KSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSlcbiBcdFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdID0gW107XG4gXHRcdFx0XHRcdFx0XHRhZGRBbGxUb1NldChcbiBcdFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdLFxuIFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdXG4gXHRcdFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKGRvRGlzcG9zZSkge1xuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIFtyZXN1bHQubW9kdWxlSWRdKTtcbiBcdFx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSB3YXJuVW5leHBlY3RlZFJlcXVpcmU7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gU3RvcmUgc2VsZiBhY2NlcHRlZCBvdXRkYXRlZCBtb2R1bGVzIHRvIHJlcXVpcmUgdGhlbSBsYXRlciBieSB0aGUgbW9kdWxlIHN5c3RlbVxuIFx0XHR2YXIgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzID0gW107XG4gXHRcdGZvciAoaSA9IDA7IGkgPCBvdXRkYXRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRtb2R1bGVJZCA9IG91dGRhdGVkTW9kdWxlc1tpXTtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSAmJlxuIFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uaG90Ll9zZWxmQWNjZXB0ZWRcbiBcdFx0XHQpXG4gXHRcdFx0XHRvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMucHVzaCh7XG4gXHRcdFx0XHRcdG1vZHVsZTogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdGVycm9ySGFuZGxlcjogaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uaG90Ll9zZWxmQWNjZXB0ZWRcbiBcdFx0XHRcdH0pO1xuIFx0XHR9XG5cbiBcdFx0Ly8gTm93IGluIFwiZGlzcG9zZVwiIHBoYXNlXG4gXHRcdGhvdFNldFN0YXR1cyhcImRpc3Bvc2VcIik7XG4gXHRcdE9iamVjdC5rZXlzKGhvdEF2YWlsYWJsZUZpbGVzTWFwKS5mb3JFYWNoKGZ1bmN0aW9uKGNodW5rSWQpIHtcbiBcdFx0XHRpZiAoaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0gPT09IGZhbHNlKSB7XG4gXHRcdFx0XHRob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0fVxuIFx0XHR9KTtcblxuIFx0XHR2YXIgaWR4O1xuIFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKTtcbiBcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcbiBcdFx0XHRtb2R1bGVJZCA9IHF1ZXVlLnBvcCgpO1xuIFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdGlmICghbW9kdWxlKSBjb250aW51ZTtcblxuIFx0XHRcdHZhciBkYXRhID0ge307XG5cbiBcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcbiBcdFx0XHR2YXIgZGlzcG9zZUhhbmRsZXJzID0gbW9kdWxlLmhvdC5fZGlzcG9zZUhhbmRsZXJzO1xuIFx0XHRcdGZvciAoaiA9IDA7IGogPCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdGNiID0gZGlzcG9zZUhhbmRsZXJzW2pdO1xuIFx0XHRcdFx0Y2IoZGF0YSk7XG4gXHRcdFx0fVxuIFx0XHRcdGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXSA9IGRhdGE7XG5cbiBcdFx0XHQvLyBkaXNhYmxlIG1vZHVsZSAodGhpcyBkaXNhYmxlcyByZXF1aXJlcyBmcm9tIHRoaXMgbW9kdWxlKVxuIFx0XHRcdG1vZHVsZS5ob3QuYWN0aXZlID0gZmFsc2U7XG5cbiBcdFx0XHQvLyByZW1vdmUgbW9kdWxlIGZyb20gY2FjaGVcbiBcdFx0XHRkZWxldGUgaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG5cbiBcdFx0XHQvLyB3aGVuIGRpc3Bvc2luZyB0aGVyZSBpcyBubyBuZWVkIHRvIGNhbGwgZGlzcG9zZSBoYW5kbGVyXG4gXHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcblxuIFx0XHRcdC8vIHJlbW92ZSBcInBhcmVudHNcIiByZWZlcmVuY2VzIGZyb20gYWxsIGNoaWxkcmVuXG4gXHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGNoaWxkID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGUuY2hpbGRyZW5bal1dO1xuIFx0XHRcdFx0aWYgKCFjaGlsZCkgY29udGludWU7XG4gXHRcdFx0XHRpZHggPSBjaGlsZC5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSB7XG4gXHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gcmVtb3ZlIG91dGRhdGVkIGRlcGVuZGVuY3kgZnJvbSBtb2R1bGUgY2hpbGRyZW5cbiBcdFx0dmFyIGRlcGVuZGVuY3k7XG4gXHRcdHZhciBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcztcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmIChtb2R1bGUpIHtcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcbiBcdFx0XHRcdFx0XHRpZHggPSBtb2R1bGUuY2hpbGRyZW4uaW5kZXhPZihkZXBlbmRlbmN5KTtcbiBcdFx0XHRcdFx0XHRpZiAoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIE5vdCBpbiBcImFwcGx5XCIgcGhhc2VcbiBcdFx0aG90U2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cbiBcdFx0aG90Q3VycmVudEhhc2ggPSBob3RVcGRhdGVOZXdIYXNoO1xuXG4gXHRcdC8vIGluc2VydCBuZXcgY29kZVxuIFx0XHRmb3IgKG1vZHVsZUlkIGluIGFwcGxpZWRVcGRhdGUpIHtcbiBcdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFwcGxpZWRVcGRhdGUsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBhcHBsaWVkVXBkYXRlW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBjYWxsIGFjY2VwdCBoYW5kbGVyc1xuIFx0XHR2YXIgZXJyb3IgPSBudWxsO1xuIFx0XHRmb3IgKG1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZClcbiBcdFx0XHQpIHtcbiBcdFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuIFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9IG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdFx0dmFyIGNhbGxiYWNrcyA9IFtdO1xuIFx0XHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbaV07XG4gXHRcdFx0XHRcdFx0Y2IgPSBtb2R1bGUuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBlbmRlbmN5XTtcbiBcdFx0XHRcdFx0XHRpZiAoY2IpIHtcbiBcdFx0XHRcdFx0XHRcdGlmIChjYWxsYmFja3MuaW5kZXhPZihjYikgIT09IC0xKSBjb250aW51ZTtcbiBcdFx0XHRcdFx0XHRcdGNhbGxiYWNrcy5wdXNoKGNiKTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdFx0XHRcdGNiID0gY2FsbGJhY2tzW2ldO1xuIFx0XHRcdFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRcdFx0XHRjYihtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyk7XG4gXHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuIFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwiYWNjZXB0LWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tpXSxcbiBcdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyXG4gXHRcdFx0XHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gTG9hZCBzZWxmIGFjY2VwdGVkIG1vZHVsZXNcbiBcdFx0Zm9yIChpID0gMDsgaSA8IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdHZhciBpdGVtID0gb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzW2ldO1xuIFx0XHRcdG1vZHVsZUlkID0gaXRlbS5tb2R1bGU7XG4gXHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbbW9kdWxlSWRdO1xuIFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKTtcbiBcdFx0XHR9IGNhdGNoIChlcnIpIHtcbiBcdFx0XHRcdGlmICh0eXBlb2YgaXRlbS5lcnJvckhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuIFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdGl0ZW0uZXJyb3JIYW5kbGVyKGVycik7XG4gXHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcbiBcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG4gXHRcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyMjtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuIFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3JlZFwiLFxuIFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuIFx0XHRpZiAoZXJyb3IpIHtcbiBcdFx0XHRob3RTZXRTdGF0dXMoXCJmYWlsXCIpO1xuIFx0XHRcdHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gXHRcdH1cblxuIFx0XHRob3RTZXRTdGF0dXMoXCJpZGxlXCIpO1xuIFx0XHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuIFx0XHRcdHJlc29sdmUob3V0ZGF0ZWRNb2R1bGVzKTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGhvdDogaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSxcbiBcdFx0XHRwYXJlbnRzOiAoaG90Q3VycmVudFBhcmVudHNUZW1wID0gaG90Q3VycmVudFBhcmVudHMsIGhvdEN1cnJlbnRQYXJlbnRzID0gW10sIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCksXG4gXHRcdFx0Y2hpbGRyZW46IFtdXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIGhvdENyZWF0ZVJlcXVpcmUobW9kdWxlSWQpKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gX193ZWJwYWNrX2hhc2hfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5oID0gZnVuY3Rpb24oKSB7IHJldHVybiBob3RDdXJyZW50SGFzaDsgfTtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBob3RDcmVhdGVSZXF1aXJlKFwiLi9zcmMvaW5kZXguanNcIikoX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL3NyYy9pbmRleC5qc1wiKTtcbiIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTYgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKSk7XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC1zaGFwZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG4gICAgYm9yZGVyLXdpZHRoOiAwLjA4ZW07XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIHBhZGRpbmc6IDAuM2VtO1xcbiAgICB3aWR0aDogMTguNGVtO1xcbiAgICBoZWlnaHQ6IDI1LjZlbTtcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJCb29rIEFudGlxdWFcXFwiLCBzZXJpZjtcXG4gICAgZm9udC1zaXplOiBsYXJnZTtcXG59XFxuXFxuLmxhbmRzY2FwZSB7XFxuICAgIGhlaWdodDogMTguNGVtO1xcbiAgICB3aWR0aDogMjUuNmVtO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJjYXJkLXNoYXBlXCI6IFwiY2FyZC1zaGFwZVwiLFxuXHRcImxhbmRzY2FwZVwiOiBcImxhbmRzY2FwZVwiXG59OyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNhcmQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICAvKlxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJkYXRhOmltYWdlL3BuZztiYXNlNjQsIGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFEQUFBQUF3Q0FZQUFBQlhBdm1IQUFBQUJtSkxSMFFBL3dEL0FQK2d2YWVUQUFBQUNYQklXWE1BQUJjU0FBQVhFZ0ZubjlKU0FBQUFCM1JKVFVVSDRRVUREQlVtSnp2WWxBQUFCeHhKUkVGVWFON3RtWGxzbEhVUWhwK1dMUlNoUUFHeElJZWNIbFNJSEFybHNBaVVXNGduQ2hFRkpCNzRseHFJSVlhRWlJbEhUTlFFUzVCYkVBV3NsRXNCQWFtZ2dPQUIxSUtnS0hMSTBTSzJuTzM2aDg4bUcwTEx0blE1RXI1azAyNjMzKytiZCthZG1YZG1JWHBYREpBQTFQRDNxRndWb25SdUlwQUNqQUVHQXFlQVhLRGdhZ2RRU2NPSEFvOEFzZjQ5RldnTUZBR0hnTFBsR2VieXVscnE3VlpBVGVBSFlLSEdEZ0xhQS84Q1B3RkxnTyt2RmdDVmdSRkFSem1mRDB3RDFnRW53eUxURVJnSlZBZE9DR0FLY1B4S0F1Z0ZQS21CaFVBV01GVURxd0pEZ0J1QTZlWkFQUEFFMEZQNkZnS3pnRVdYRTBBYzBFTERiNWNXZTRIWndNOGEzQUVZYmpJSEJUUWRXTy92ellCaFFGTWpzZ2Y0RU5nQm5Ja21nQmJBZlVDYVhzOEcxZ0NMUGV0dTg2Q2QxTmlxbCs4Q2F2bCtFZkNkdVpFR2RBT1NCZm9WOEtWQXloWEFUVUJmZWR3WStBTllwdkZIVE9DK0ptb2lzQWxZQ253TG5ETWlmZnlaNytmTEJWUUQ2T0w5elQzN1crL2ZkNmtBWW9BQmV1cG02Yk5FTC81bDBnN1h3M1dBdzFKcEU1Q25RWld0UEFuKzN6RFBPbXlsbWdZY0E1S0Eza1l3QmppZ2d4Ym9oRklEYUFvOHA4Y0Q4dlE5WUxlZkR3QWVCcXI0ZnEwSm1TdTlSZ0gzK293TlFMcjhUN0JIOUxaUG5BRStBejZWUm8yQTU2VnJvWTZhREd5TEJFQU1VTTNxMGRmRDh6eDhtVUNhV2c1dmt3NEhmY0FPb0tKTmE0UWc4aldxcXNaTWwrT25UZVJSUUFNVC93L1B5ZGJqM2JRajBlcTFFcGhwdElMRkFXZ0FqSmNPaDRETndGd1Q4aGFwMU44RDlnSmZTS2xZb0Ezd2tJM3NIK0FYNEhON3dZTW1hcUlHenJNUGhCSzVqK2RYTWplbVd0M2lkY2E5VWpGZmViSTNaSERnUEFDMTllSUo0QzJOdUJGNEhPZ0IxTmRUSzMxUW5vYjFBRHJyNlMxV2sxVUNqUVZlMDRqN3JGUmpMS2tyak1oNkk5NWFJK08wcDVGT0xwSU5BYXRac1FDS2ZPZ1pqVzloSGpRMHJMT0IxY0NmUm1zWWNLZkFEcHFRR3d4enNwNFBBQm5teUErVzJFZHNabmNBUHdJZkE1OElLRmNhUDJOVnEyLytWUmRZTU56Z3dFV3FVRTJOTDdKekZtazhncXhyOVZna0xZNGFoUmMxTkY0UE50ZlFTVVptaS9yb2ZxQ3J0RnN1MFA0Q1QvQ1ppNlRVMjdLQjBnQUlYVUdOZjlCZU1BbllEb3dWd0VHOTAwY2xHaSsvTjBpSlRnS2FyTGN6amRZcTRBV2dDZkNZa1FsUjVvRFAyUkZtQTJVQlVGSHY3TFgwSlFHdnk5ME1HMW15aHJjMkwzWUJIeWt0TUdlR1dNRkc2UFZaZnY0eTBOMlNuQ1NGTWl3QUZheFFCWkhPQTBucSthQ0gxRGY1ZnBYL1dYNldhRmR0YjZJTjk5NXRTdWgwNE8rd2M0K2FPN2thZEp2bHRvNE8yR3lrMG9BWkdsL2ZxRlFHZmdQNjJYUFdHZkZTVVNoR3NDZkNnUFR3MVZWakYvdjNveVdjczFyNWtLSkIzYVhieEFzNE05VWNlYjhrdzJKTEllU0tOUFlKTmNvVVlLZkp2Rkt2SFkzZ25EeDF6bElkVXFtWTVsclJQQXFXRndBTWYyaGNKR3cwUEZrR1dWNVFVbkpHZXBVV1FFelk2NnE0WXJuR3Irc0FyZ080U2dBRXluQlBYSGtVZzhBbDNsK2dJUS80L21zNzY4VUVZb3F6d3cxaEpUaDRPUUdFdW1hR2pheWo4cmVUUTA3V0JmUkxhTzJZNXZDVDU4eWJHUmFScUFNSUdQYk9Ua3dMblpPemxBWXBhcVBPQ3NEMTN0ZE9wZHBLdWIxUm1id3BiTDd1WmJjUFJBTkFvU0hlNEdiaEhtQ3djK3RNRGRtaHVCdnBrSk1FN0hjelBVUmdKNTMwc3B5TFc3c2dxNmRRMitoS0pmeVpsd3pnckNGdjZRd3dRYW84NlVBelZvR1dybUZad0J4RldzQlhhUFU0ek1rdUVSaXRvbzFWaVg3b1JCWjBBT3BZMGpybFlnQkMxU0hYR2JnZThLYXo3aHdsN1ViZ0tZMW9COXlxcXN5V0NoY2FpczY1RTVyb2JIdE1LVDNGbktscmN2Y3lRZ2ZDWkhsRUEwMk1Ib2wxSHM0QlhySEtkRkErdDVHL3E0RVBCRFZhd3hJaUZJU1ZqVlJHMk9JZ3ROUktBbjZYbGdzRjJjUjdZczh2dmVjRE9Pd05UWUZ4UGlSVG5uK2pSaytUUGlscTlaMENiUmhoS1R4aTRxL3pmVC9QVFpaS0dUb2x4NUw3bEt2SEpKZGNoMHNDc0YrT3B6bmk5UWZhZXVBOHQzTHIvU3pWemNRdVN2ZE5UNjdHdDFHV043WXliWFVIdFYwS0RwSktkZlg4Zkpkcmgwb0NFQlRoWENreXlnYzk3UFNVN2tKcWdoVXByd3lsdXpyd3RQdWhPQ3ZUTzJGN3BHVGdXV2xWU1lxbE81TVhScHJFUlVaanZKNSt6S1I3MVRJM3c0cFJHamxTcEJOR2FkZ3B6NWhpTTZ6amMxSTE5TGlyeUtXWFdrYlhXSEVHNjdVdU5xVDU1c1hCQ0xrZjV3WWl6eWpPTTM5cTIxY2VGY1ErSzlNY1Y1VGwwc2dLWEM2dGRhUFdWZW1RSXNBcXhaVE9FQzByNlBWTnpzOXJmWFpQbzlMVzNGaHFWTEtqSlNWMnk4VXNrNnlUU1poZlF0T0pNL0htNjlsY3UvbEFtMk0xYWJtZ0xGOHhsVVhNblhQL2syT0NQeU1OQ29vUmZYdUFOOVJPMVlDWGJIeFZwTk83VXZUMDVaYlRaL24vdTY3TmFwM2VGNkJPS0hrTDlQaFFRWjF6anpURFpMNWk4MEJJZE0yMDdCYUdkZlE0RzJLOG03dG1WcFpzMTQ0NTVURkpSV3M5TXM3RURGK0gveXpJRmVYNW9HZ0JxRzdKSFdEMXliU0RIN3ZXWnU1YWR0U29MY0wrQXg0bEI2Y0tsSXdaQUFBQUFFbEZUa1N1UW1DQ1xcXCIpO1xcbiAgLyoqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE5MiwgMTkyLCAxOTIsIDEpO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjMwZW07XFxuICAgIHBhZGRpbmc6IDAuMTVlbTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuXFxuLmNhcmQ+OmZpcnN0LWNoaWxkIHtcXG4gICAgbWFyZ2luLXRvcDogMC4zMGVtO1xcbn1cXG5cXG4uY2FyZD46bGFzdC1jaGlsZCB7XFxuICAgIG1hcmdpbi1ib3R0b206IDAuMzBlbTtcXG59XFxuXFxuLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMwLCAyMzAsIDIzMCwgMC45KTtcXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG4gICAgYm9yZGVyLXJhZGl1czogMC4zMGVtO1xcbiAgICBib3JkZXItd2lkdGg6IDAuMTVlbTtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgbWFyZ2luLXRvcDogLTAuMTVlbTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcXG4gICAgbWFyZ2luLWxlZnQ6IDAuMzBlbTtcXG4gICAgbWFyZ2luLXJpZ2h0OiAwLjMwZW07XFxuICAgIHBhZGRpbmctdG9wOiAwLjE1ZW07XFxuICAgIHBhZGRpbmctYm90dG9tOiAwLjE1ZW07XFxuICAgIHBhZGRpbmctbGVmdDogMC4zMGVtO1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjMwZW07XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImNhcmRcIjogXCJjYXJkXCIsXG5cdFwiY2FyZC1pdGVtXCI6IFwiY2FyZC1pdGVtXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5leHBvcnRzLmkocmVxdWlyZShcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL2NhcmQtaXRlbS1jb250YWluZXIuY3NzXCIpLCB1bmRlZmluZWQpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jYXJkLWZpZWxkLWNvbnRhaW5lciB7XFxuXFxuICAgIG1pbi1oZWlnaHQ6IDEuMmVtO1xcbiAgICBtYXgtaGVpZ2h0OiAxLjJlbTtcXG5cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxufVxcblxcbi5jYXJkLWZpZWxkLWNvbnRhaW5lciA+ICoge1xcbiAgICBmbGV4LWdyb3c6IDE7XFxufVxcblxcbi5jYXJkLWZpZWxkLWhlYWRlciB7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4uY2FyZC1maWVsZC1zZXBhcmF0b3Ige1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5jYXJkLWZpZWxkLXZhbHVlIHtcXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtdmFyaWFudDogc21hbGwtY2FwcztcXG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImNhcmQtZmllbGQtY29udGFpbmVyXCI6IFwiY2FyZC1maWVsZC1jb250YWluZXIgXCIgKyByZXF1aXJlKFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vY2FyZC1pdGVtLWNvbnRhaW5lci5jc3NcIikubG9jYWxzW1wiY2FyZC1pdGVtXCJdICsgXCJcIixcblx0XCJjYXJkLWZpZWxkLWhlYWRlclwiOiBcImNhcmQtZmllbGQtaGVhZGVyXCIsXG5cdFwiY2FyZC1maWVsZC1zZXBhcmF0b3JcIjogXCJjYXJkLWZpZWxkLXNlcGFyYXRvclwiLFxuXHRcImNhcmQtZmllbGQtdmFsdWVcIjogXCJjYXJkLWZpZWxkLXZhbHVlXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5leHBvcnRzLmkocmVxdWlyZShcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL2NhcmQtaXRlbS1jb250YWluZXIuY3NzXCIpLCB1bmRlZmluZWQpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jYXJkLXRleHQge1xcblxcbiAgICBmbGV4LWdyb3c6IDE7XFxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImNhcmQtdGV4dFwiOiBcImNhcmQtdGV4dCBcIiArIHJlcXVpcmUoXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9jYXJkLWl0ZW0tY29udGFpbmVyLmNzc1wiKS5sb2NhbHNbXCJjYXJkLWl0ZW1cIl0gKyBcIlwiXG59OyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuZXhwb3J0cy5pKHJlcXVpcmUoXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9jYXJkLWl0ZW0tY29udGFpbmVyLmNzc1wiKSwgdW5kZWZpbmVkKTtcblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC10aXRsZSB7XFxuXFxuICAgIG1hcmdpbi1sZWZ0OiAwO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XFxuICAgIHotaW5kZXg6IDEwO1xcblxcbiAgICBtaW4taGVpZ2h0OiAxLjJlbTtcXG4gICAgbWF4LWhlaWdodDogMS4yZW07XFxuXFxuICAgIGZvbnQtc2l6ZTogMS4xZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJjYXJkLXRpdGxlXCI6IFwiY2FyZC10aXRsZSBcIiArIHJlcXVpcmUoXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9jYXJkLWl0ZW0tY29udGFpbmVyLmNzc1wiKS5sb2NhbHNbXCJjYXJkLWl0ZW1cIl0gKyBcIlwiXG59OyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNhcmQtY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbn1cXG5cXG4uY2FyZC1jb250YWluZXIgPiAqIHtcXG4gICAgbWFyZ2luOiAwLjA4ZW07XFxufVxcblxcbi5jYXJkLWNvbnRhaW5lci10b29sYmFyIHtcXG5cXG59XFxuLmNhcmQtY29udGFpbmVyLWl0ZW1zICA+ICoge1xcbiAgICBtYXJnaW46IDAuMDhlbTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJjYXJkLWNvbnRhaW5lclwiOiBcImNhcmQtY29udGFpbmVyXCIsXG5cdFwiY2FyZC1jb250YWluZXItdG9vbGJhclwiOiBcImNhcmQtY29udGFpbmVyLXRvb2xiYXJcIixcblx0XCJjYXJkLWNvbnRhaW5lci1pdGVtc1wiOiBcImNhcmQtY29udGFpbmVyLWl0ZW1zXCJcbn07IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiogKioqICoqKiAqKiogKioqICoqKiAqKiogKioqICoqKiAqKiogKioqICoqKiAqKiogKioqICoqKiAqKiogKioqICoqKiAqKiogKioqICoqKiAqKiogKioqXFxuICogQ29sb3JzXFxuICpcXG4gKiAuY2FyZC5iYWNrZ3JvdW5kLWNvbG9yID0gbWFpbmNvbG9yXFxuICogLmNhcmQtaXRlbS5iYWNrZ3JvdW5kLWNvbG9yID0gbWFpbmNvbG9yICs0MCUgbGlnaHRlciwgb3BhY2l0eSAwLjc1XFxuICogLmNhcmQtaXRlbS5ib3JkZXItY29sb3IgPSBtYWluY29sb3IgKzQwJSBsaWdodGVyLCBvcGFjaXR5IDFcXG4gKi9cXG4ud2hpdGUuY2FyZC1zaGFwZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XFxufVxcblxcbi53aGl0ZSAuY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XFxufVxcblxcbi53aGl0ZSAuY2FyZC1pdGVtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xcbn1cXG5cXG4ud2hpdGUgLmNhcmQtZmllbGQge1xcbiAgICBib3JkZXItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XFxufVxcblxcbi5ncmVlbiAuY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMTI4LCAwLCAxKTtcXG59XFxuXFxuLmdyZWVuIC5jYXJkLWl0ZW0ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwMiwgMjMwLCAxMDIsIDAuNzUpO1xcbiAgICBib3JkZXItY29sb3I6IHJnYmEoMTAyLCAyMzAsIDEwMiwgMSk7XFxufVxcblxcbi5ncmVlbiAuY2FyZC1maWVsZCB7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgxMDIsIDIzMCwgMTAyLCAxKTtcXG59XFxuXFxuLmdyZWVuLWxpZ2h0IC5jYXJkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2NCwgMTkyLCA2NCwgMSk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjQsIDEyOCwgNjQsIDEpO1xcbn1cXG5cXG4uZ3JlZW4tbGlnaHQgLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTY2LCAyNTUsIDE2NiwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgxNjYsIDI1NSwgMTY2LCAxKTtcXG59XFxuXFxuLmdyZWVuLWxpZ2h0IC5jYXJkLWZpZWxkIHtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE2NiwgMjU1LCAxNjYsIDEpO1xcbn1cXG5cXG4uZ3JlZW4tbGl6YXJkIC5jYXJkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2NCwgMTI4LCAwLCAxKTtcXG59XFxuXFxuLmdyZWVuLWxpemFyZCAuY2FyZC1pdGVtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjYsIDIzMCwgMTAyLCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE2NiwgMjMwLCAxMDIsIDEpO1xcbn1cXG5cXG4uZ3JlZW4tbGl6YXJkIC5jYXJkLWZpZWxkIHtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE2NiwgMjMwLCAxMDIsIDEpO1xcbn1cXG5cXG4uYmx1ZSAuY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMTI4LCAxKTtcXG4gICAgLypjb2xvcjogcmdiYSgyMzAsIDIzMCwgMjMwLCAxKTsqL1xcbn1cXG5cXG4uYmx1ZSAuY2FyZC1pdGVtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDIsIDEwMiwgMjMwLCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDEwMiwgMTAyLCAyMzAsIDEpO1xcbn1cXG5cXG4uYmx1ZSAuY2FyZC1maWVsZCB7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgxMDIsIDEwMiwgMjMwLCAxKTtcXG59XFxuXFxuLmJsdWUtbGlnaHQgLmNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDY0LCA2NCwgMTkyLCAxKTtcXG59XFxuXFxuLmJsdWUtbGlnaHQgLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTY2LCAxNjYsIDI1NSwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgxNjYsIDE2NiwgMjU1LCAxKTtcXG59XFxuXFxuLmJsdWUtbGlnaHQgLmNhcmQtZmllbGQge1xcbiAgICBib3JkZXItY29sb3I6IHJnYmEoMTY2LCAxNjYsIDI1NSwgMSk7XFxufVxcblxcbi5yZWQgLmNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyOCwgMCwgMCwgMSk7XFxuICAgIC8qY29sb3I6IHJnYmEoMjMwLCAyMzAsIDIzMCwgMSk7Ki9cXG59XFxuXFxuLnJlZCAuY2FyZC1pdGVtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDUsIDEwMiwgMTAyLCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDIwNSwgMTAyLCAxMDIsIDEpO1xcbn1cXG5cXG4ucmVkIC5jYXJkLWZpZWxkIHtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDIwNSwgMTAyLCAxMDIsIDEpO1xcbn1cXG5cXG4ucmVkLWxpZ2h0IC5jYXJkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxOTIsIDY0LCA2NCwgMSk7XFxufVxcblxcbi5yZWQtbGlnaHQgLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMwLCAxOTIsIDE5MiwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMzAsIDE5MiwgMTkyLCAxKTtcXG59XFxuXFxuLnJlZC1saWdodCAuY2FyZC1maWVsZCB7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMzAsIDE5MiwgMTkyLCAxKTtcXG59XFxuXFxuLnJlZC1ncmF5IC5jYXJkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjgsIDAsIDAsIDEpO1xcbn1cXG5cXG4ucmVkLWdyYXkgLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjA1LCAxNjYsIDE2NiwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMDUsIDE2NiwgMTY2LCAxKTtcXG59XFxuXFxuLnJlZC1ncmF5IC5jYXJkLWZpZWxkIHtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDIwNSwgMTY2LCAxNjYsIDEpO1xcbn1cXG5cXG4uY3lhbiAuY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMTI4LCAxMjgsIDEpO1xcbn1cXG5cXG4uY3lhbiAuY2FyZC1pdGVtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjYsIDIzMCwgMjMwLCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDE2NiwgMjMwLCAyMzAsIDEpO1xcbn1cXG5cXG4ubWFnZW50YSAuY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTI4LCAwLCAxMjgsIDEpO1xcbn1cXG5cXG4ubWFnZW50YSAuY2FyZC1pdGVtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDUsIDE2NiwgMjA1LCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDIwNSwgMTY2LCAyMDUsIDEpO1xcbn1cXG5cXG4ueWVsbG93IC5jYXJkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjgsIDEyOCwgMCwgMSk7XFxufVxcblxcbi55ZWxsb3cgLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMwLCAyMzAsIDE2NiwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMzAsIDIzMCwgMTY2LCAxKTtcXG59XFxuXFxuLnllbGxvdy1saWdodCAuY2FyZCB7XFxuICAgIC8qYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxOTIsIDE5MiwgMCwgMSk7Ki9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgNzcsIDEpO1xcbn1cXG5cXG4ueWVsbG93LWxpZ2h0IC5jYXJkLWl0ZW0ge1xcbiAgICAvKmJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDc3LCAwLjc1KTsqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE5MiwgMTkyLCAwLCAwLjc1KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDkwLCA5MCwgMCwgMSk7XFxufVxcblxcblxcbi5hY3Rpb24gLmNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyOCwgMCwgMCwgMSk7XFxufVxcblxcbi5hY3Rpb24gLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjA1LCAxNjYsIDE2NiwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMDUsIDE2NiwgMTY2LCAxKTtcXG59XFxuXFxuLmFjdGlvbiAuY2FyZC1maWVsZCB7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgyMDUsIDE2NiwgMTY2LCAxKTtcXG59XFxuXFxuXFxuLmFiaWxpdHkgLmNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDEyOCwgMTI4LCAxKTtcXG59XFxuXFxuLmFiaWxpdHkgLmNhcmQtaXRlbSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTY2LCAyMzAsIDIzMCwgMC43NSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgxNjYsIDIzMCwgMjMwLCAxKTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwid2hpdGVcIjogXCJ3aGl0ZVwiLFxuXHRcImNhcmQtc2hhcGVcIjogXCJjYXJkLXNoYXBlXCIsXG5cdFwiY2FyZFwiOiBcImNhcmRcIixcblx0XCJjYXJkLWl0ZW1cIjogXCJjYXJkLWl0ZW1cIixcblx0XCJjYXJkLWZpZWxkXCI6IFwiY2FyZC1maWVsZFwiLFxuXHRcImdyZWVuXCI6IFwiZ3JlZW5cIixcblx0XCJncmVlbi1saWdodFwiOiBcImdyZWVuLWxpZ2h0XCIsXG5cdFwiZ3JlZW4tbGl6YXJkXCI6IFwiZ3JlZW4tbGl6YXJkXCIsXG5cdFwiYmx1ZVwiOiBcImJsdWVcIixcblx0XCJibHVlLWxpZ2h0XCI6IFwiYmx1ZS1saWdodFwiLFxuXHRcInJlZFwiOiBcInJlZFwiLFxuXHRcInJlZC1saWdodFwiOiBcInJlZC1saWdodFwiLFxuXHRcInJlZC1ncmF5XCI6IFwicmVkLWdyYXlcIixcblx0XCJjeWFuXCI6IFwiY3lhblwiLFxuXHRcIm1hZ2VudGFcIjogXCJtYWdlbnRhXCIsXG5cdFwieWVsbG93XCI6IFwieWVsbG93XCIsXG5cdFwieWVsbG93LWxpZ2h0XCI6IFwieWVsbG93LWxpZ2h0XCIsXG5cdFwiYWN0aW9uXCI6IFwiYWN0aW9uXCIsXG5cdFwiYWJpbGl0eVwiOiBcImFiaWxpdHlcIlxufTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb2RleC10b29sYmFyIHtcXG5cXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiY29kZXgtdG9vbGJhclwiOiBcImNvZGV4LXRvb2xiYXJcIlxufTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcImJvZHkge1xcblxcdGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmRlY2sge1xcbn1cXG5cXG4uZGVjayA+ICoge1xcbiAgICBtYXJnaW46IDAuMDhlbTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4uZGVjayAucGFnZS1icmVhayB7XFxuICAgIGJyZWFrLWFmdGVyOiBwYWdlO1xcbn1cXG5cXG4uZGVjayAuY2FyZC1zaGFwZSB7XFxuXFx0Zm9udC1zaXplOiBzbWFsbDtcXG59XFxuXFxuLmRlY2sgLmxhbmRzY2FwZSB7XFxuXFx0d3JpdGluZy1tb2RlOiB2ZXJ0aWNhbC1ybDtcXG59XFxuXFxuLmRlY2sgLmxhbmRzY2FwZS5jYXJkLXNoYXBlIHtcXG5cXHR3aWR0aDogMTguNGVtO1xcblxcdGhlaWdodDogMjUuNmVtO1xcbn1cXG5cXG4uZGVjayAubGFuZHNjYXBlIC5jYXJkPjpmaXJzdC1jaGlsZCB7XFxuXFx0bWFyZ2luLXJpZ2h0OiAwLjMwZW07XFxufVxcblxcbi5kZWNrIC5sYW5kc2NhcGUgLmNhcmQ+Omxhc3QtY2hpbGQge1xcblxcdG1hcmdpbi1sZWZ0OiAwLjMwZW07XFxufVxcblxcbi5kZWNrIC5sYW5kc2NhcGUgLmNhcmQtaXRlbSB7XFxuXFx0bWFyZ2luLXJpZ2h0OiAtMC4xNWVtO1xcblxcdG1hcmdpbi1sZWZ0OiAwO1xcblxcdG1hcmdpbi10b3A6IDAuMzBlbTtcXG5cXHRtYXJnaW4tYm90dG9tOiAwLjMwZW07XFxuXFx0cGFkZGluZy1yaWdodDogMC4xNWVtO1xcblxcdHBhZGRpbmctbGVmdDogMC4xNWVtO1xcblxcdHBhZGRpbmctdG9wOiAwLjMwZW07XFxuXFx0cGFkZGluZy1ib3R0b206IDAuMzBlbTtcXG59XFxuXFxuLmRlY2sgLmxhbmRzY2FwZSAuY2FyZC1pdGVtLmVtcGhhc2l6ZWQge1xcblxcdG1hcmdpbi10b3A6IDA7XFxuXFx0bWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLmRlY2sgLmxhbmRzY2FwZSAuY2FyZC1pdGVtLm5vLXBhZGRpbmcge1xcblxcdGJvcmRlci1zdHlsZTogbm9uZTtcXG5cXHRib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XFxuXFx0cGFkZGluZzogMDtcXG59XFxuXFxuLmRlY2sgLmxhbmRzY2FwZSAuY2FyZC1pdGVtLnNob3J0IHtcXG5cXHRtaW4taGVpZ2h0OiBpbml0aWFsO1xcblxcdG1heC1oZWlnaHQ6IGluaXRpYWw7XFxuXFx0bWluLXdpZHRoOiAxLjJlbTtcXG5cXHRtYXgtd2lkdGg6IDEuMmVtO1xcbn1cXG5cXG4uZGVjayAubGFuZHNjYXBlIC5jYXJkLWl0ZW0ubm8tcGFkZGluZy5zaG9ydCB7XFxuXFx0bWluLXdpZHRoOiAxLjhlbTtcXG5cXHRtYXgtd2lkdGg6IDEuOGVtO1xcbn1cXG5cXG4uZGVjayAubGFuZHNjYXBlIC5jYXJkLWhlYWRlciB7XFxuXFx0XFxufVxcblxcbi5kZWNrIC5sYW5kc2NhcGUgLmNhcmQtZmllbGQge1xcblxcdHBhZGRpbmctcmlnaHQ6IDAuMTVlbTtcXG5cXHRwYWRkaW5nLWxlZnQ6IDAuMTVlbTtcXG5cXHRwYWRkaW5nLXRvcDogMC4zMGVtO1xcblxcdHBhZGRpbmctYm90dG9tOiAwLjMwZW07XFxufVxcblxcbi5kZWNrIC5sYW5kc2NhcGUgLmNhcmQtZmllbGQrLmNhcmQtZmllbGQge1xcblxcdG1hcmdpbi1sZWZ0OiBpbmhlcml0O1xcblxcdG1hcmdpbi10b3A6IC0wLjE1ZW07XFxufVxcblxcbi8qLmxhbmRzY2FwZSAuY2FyZC1pY29uIHt9XFxuXFxuLmxhbmRzY2FwZSAuY2FyZC1pY29uOmJlZm9yZSB7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XFxufVxcblxcbi5sYW5kc2NhcGUgLmNhcmQtZmllbGQtcmlnaHQgLmljb24tbGFieSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcXG59Ki9cXG4uZGVjayAubGFuZHNjYXBlIC5jYXJkLWltYWdlIHBpY3R1cmUge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG5cXHR0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XFxuXFx0dHJhbnNmb3JtLW9yaWdpbjogMCAwO1xcblxcdC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xcblxcdC1tb3otdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xcblxcdC1vLXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiZGVja1wiOiBcImRlY2tcIixcblx0XCJwYWdlLWJyZWFrXCI6IFwicGFnZS1icmVha1wiLFxuXHRcImNhcmQtc2hhcGVcIjogXCJjYXJkLXNoYXBlXCIsXG5cdFwibGFuZHNjYXBlXCI6IFwibGFuZHNjYXBlXCIsXG5cdFwiY2FyZFwiOiBcImNhcmRcIixcblx0XCJjYXJkLWl0ZW1cIjogXCJjYXJkLWl0ZW1cIixcblx0XCJlbXBoYXNpemVkXCI6IFwiZW1waGFzaXplZFwiLFxuXHRcIm5vLXBhZGRpbmdcIjogXCJuby1wYWRkaW5nXCIsXG5cdFwic2hvcnRcIjogXCJzaG9ydFwiLFxuXHRcImNhcmQtaGVhZGVyXCI6IFwiY2FyZC1oZWFkZXJcIixcblx0XCJjYXJkLWZpZWxkXCI6IFwiY2FyZC1maWVsZFwiLFxuXHRcImNhcmQtaW1hZ2VcIjogXCJjYXJkLWltYWdlXCJcbn07IiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBVcHN0cmVhbSB2ZXJzaW9uIG9mIGV2ZW50IGxpc3RlbmVyLiBEb2VzIG5vdCB0YWtlIGludG8gYWNjb3VudCBzcGVjaWZpY1xuICogbmF0dXJlIG9mIHBsYXRmb3JtLlxuICovXG52YXIgRXZlbnRMaXN0ZW5lciA9IHtcbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgYnViYmxlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0LmF0dGFjaEV2ZW50KSB7XG4gICAgICB0YXJnZXQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LmRldGFjaEV2ZW50KCdvbicgKyBldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtET01FdmVudFRhcmdldH0gdGFyZ2V0IERPTSBlbGVtZW50IHRvIHJlZ2lzdGVyIGxpc3RlbmVyIG9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIEV2ZW50IHR5cGUsIGUuZy4gJ2NsaWNrJyBvciAnbW91c2VvdmVyJy5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IHdpdGggYSBgcmVtb3ZlYCBtZXRob2QuXG4gICAqL1xuICBjYXB0dXJlOiBmdW5jdGlvbiBjYXB0dXJlKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQXR0ZW1wdGVkIHRvIGxpc3RlbiB0byBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlIG9uIGEgJyArICdicm93c2VyIHRoYXQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgY2FwdHVyZSBwaGFzZS4gWW91ciBhcHBsaWNhdGlvbiAnICsgJ3dpbGwgbm90IHJlY2VpdmUgc29tZSBldmVudHMuJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGVtcHR5RnVuY3Rpb25cbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIHJlZ2lzdGVyRGVmYXVsdDogZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0KCkge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRMaXN0ZW5lcjsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG4vKipcbiAqIFNpbXBsZSwgbGlnaHR3ZWlnaHQgbW9kdWxlIGFzc2lzdGluZyB3aXRoIHRoZSBkZXRlY3Rpb24gYW5kIGNvbnRleHQgb2ZcbiAqIFdvcmtlci4gSGVscHMgYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFuZCBhbGxvd3MgY29kZSB0byByZWFzb24gYWJvdXRcbiAqIHdoZXRoZXIgb3Igbm90IHRoZXkgYXJlIGluIGEgV29ya2VyLCBldmVuIGlmIHRoZXkgbmV2ZXIgaW5jbHVkZSB0aGUgbWFpblxuICogYFJlYWN0V29ya2VyYCBkZXBlbmRlbmN5LlxuICovXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cbiAgY2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cbiAgY2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cbiAgY2FuVXNlRXZlbnRMaXN0ZW5lcnM6IGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG4gIGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuLFxuXG4gIGlzSW5Xb3JrZXI6ICFjYW5Vc2VET00gLy8gRm9yIG5vdywgdGhpcyBpcyB0cnVlIC0gbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbnZhciBpc1RleHROb2RlID0gcmVxdWlyZSgnLi9pc1RleHROb2RlJyk7XG5cbi8qZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIERPTSBub2RlIGNvbnRhaW5zIG9yIGlzIGFub3RoZXIgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZSkge1xuICBpZiAoIW91dGVyTm9kZSB8fCAhaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZSA9PT0gaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShvdXRlck5vZGUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUoaW5uZXJOb2RlKSkge1xuICAgIHJldHVybiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUucGFyZW50Tm9kZSk7XG4gIH0gZWxzZSBpZiAoJ2NvbnRhaW5zJyBpbiBvdXRlck5vZGUpIHtcbiAgICByZXR1cm4gb3V0ZXJOb2RlLmNvbnRhaW5zKGlubmVyTm9kZSk7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSB7XG4gICAgcmV0dXJuICEhKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihpbm5lck5vZGUpICYgMTYpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5zTm9kZTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQHBhcmFtIHtET01FbGVtZW50fSBub2RlIGlucHV0L3RleHRhcmVhIHRvIGZvY3VzXG4gKi9cblxuZnVuY3Rpb24gZm9jdXNOb2RlKG5vZGUpIHtcbiAgLy8gSUU4IGNhbiB0aHJvdyBcIkNhbid0IG1vdmUgZm9jdXMgdG8gdGhlIGNvbnRyb2wgYmVjYXVzZSBpdCBpcyBpbnZpc2libGUsXG4gIC8vIG5vdCBlbmFibGVkLCBvciBvZiBhIHR5cGUgdGhhdCBkb2VzIG5vdCBhY2NlcHQgdGhlIGZvY3VzLlwiIGZvciBhbGwga2luZHMgb2ZcbiAgLy8gcmVhc29ucyB0aGF0IGFyZSB0b28gZXhwZW5zaXZlIGFuZCBmcmFnaWxlIHRvIHRlc3QuXG4gIHRyeSB7XG4gICAgbm9kZS5mb2N1cygpO1xuICB9IGNhdGNoIChlKSB7fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZvY3VzTm9kZTsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmYi13d3cvdHlwZW9mLXVuZGVmaW5lZCAqL1xuXG4vKipcbiAqIFNhbWUgYXMgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBidXQgd3JhcHMgaW4gYSB0cnktY2F0Y2ggYmxvY2suIEluIElFIGl0IGlzXG4gKiBub3Qgc2FmZSB0byBjYWxsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgaWYgdGhlcmUgaXMgbm90aGluZyBmb2N1c2VkLlxuICpcbiAqIFRoZSBhY3RpdmVFbGVtZW50IHdpbGwgYmUgbnVsbCBvbmx5IGlmIHRoZSBkb2N1bWVudCBvciBkb2N1bWVudCBib2R5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKSAvKj9ET01FbGVtZW50Ki97XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcbiAgaWYgKHR5cGVvZiBkb2MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gZG9jLmFjdGl2ZUVsZW1lbnQgfHwgZG9jLmJvZHk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZG9jLmJvZHk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBY3RpdmVFbGVtZW50OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9pc05vZGUnKTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dE5vZGUob2JqZWN0KSB7XG4gIHJldHVybiBpc05vZGUob2JqZWN0KSAmJiBvYmplY3Qubm9kZVR5cGUgPT0gMztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1RleHROb2RlOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqIFxuICovXG5cbi8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAqL1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBTYW1lVmFsdWUgYWxnb3JpdGhtXG4gIGlmICh4ID09PSB5KSB7XG4gICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgLy8gU3RlcHMgNi5iLTYuZTogKzAgIT0gLTBcbiAgICAvLyBBZGRlZCB0aGUgbm9uemVybyB5IGNoZWNrIHRvIG1ha2UgRmxvdyBoYXBweSwgYnV0IGl0IGlzIHJlZHVuZGFudFxuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIC8vIFN0ZXAgNi5hOiBOYU4gPT0gTmFOXG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKi9cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hhbGxvd0VxdWFsOyIsIi8qIEZpbGVTYXZlci5qc1xuICogQSBzYXZlQXMoKSBGaWxlU2F2ZXIgaW1wbGVtZW50YXRpb24uXG4gKiAxLjMuMlxuICogMjAxNi0wNi0xNiAxODoyNToxOVxuICpcbiAqIEJ5IEVsaSBHcmV5LCBodHRwOi8vZWxpZ3JleS5jb21cbiAqIExpY2Vuc2U6IE1JVFxuICogICBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VsaWdyZXkvRmlsZVNhdmVyLmpzL2Jsb2IvbWFzdGVyL0xJQ0VOU0UubWRcbiAqL1xuXG4vKmdsb2JhbCBzZWxmICovXG4vKmpzbGludCBiaXR3aXNlOiB0cnVlLCBpbmRlbnQ6IDQsIGxheGJyZWFrOiB0cnVlLCBsYXhjb21tYTogdHJ1ZSwgc21hcnR0YWJzOiB0cnVlLCBwbHVzcGx1czogdHJ1ZSAqL1xuXG4vKiEgQHNvdXJjZSBodHRwOi8vcHVybC5lbGlncmV5LmNvbS9naXRodWIvRmlsZVNhdmVyLmpzL2Jsb2IvbWFzdGVyL0ZpbGVTYXZlci5qcyAqL1xuXG52YXIgc2F2ZUFzID0gc2F2ZUFzIHx8IChmdW5jdGlvbih2aWV3KSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXHQvLyBJRSA8MTAgaXMgZXhwbGljaXRseSB1bnN1cHBvcnRlZFxuXHRpZiAodHlwZW9mIHZpZXcgPT09IFwidW5kZWZpbmVkXCIgfHwgdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJiAvTVNJRSBbMS05XVxcLi8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkge1xuXHRcdHJldHVybjtcblx0fVxuXHR2YXJcblx0XHQgIGRvYyA9IHZpZXcuZG9jdW1lbnRcblx0XHQgIC8vIG9ubHkgZ2V0IFVSTCB3aGVuIG5lY2Vzc2FyeSBpbiBjYXNlIEJsb2IuanMgaGFzbid0IG92ZXJyaWRkZW4gaXQgeWV0XG5cdFx0LCBnZXRfVVJMID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdmlldy5VUkwgfHwgdmlldy53ZWJraXRVUkwgfHwgdmlldztcblx0XHR9XG5cdFx0LCBzYXZlX2xpbmsgPSBkb2MuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLCBcImFcIilcblx0XHQsIGNhbl91c2Vfc2F2ZV9saW5rID0gXCJkb3dubG9hZFwiIGluIHNhdmVfbGlua1xuXHRcdCwgY2xpY2sgPSBmdW5jdGlvbihub2RlKSB7XG5cdFx0XHR2YXIgZXZlbnQgPSBuZXcgTW91c2VFdmVudChcImNsaWNrXCIpO1xuXHRcdFx0bm9kZS5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcblx0XHR9XG5cdFx0LCBpc19zYWZhcmkgPSAvY29uc3RydWN0b3IvaS50ZXN0KHZpZXcuSFRNTEVsZW1lbnQpIHx8IHZpZXcuc2FmYXJpXG5cdFx0LCBpc19jaHJvbWVfaW9zID0vQ3JpT1NcXC9bXFxkXSsvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudClcblx0XHQsIHRocm93X291dHNpZGUgPSBmdW5jdGlvbihleCkge1xuXHRcdFx0KHZpZXcuc2V0SW1tZWRpYXRlIHx8IHZpZXcuc2V0VGltZW91dCkoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHRocm93IGV4O1xuXHRcdFx0fSwgMCk7XG5cdFx0fVxuXHRcdCwgZm9yY2Vfc2F2ZWFibGVfdHlwZSA9IFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCJcblx0XHQvLyB0aGUgQmxvYiBBUEkgaXMgZnVuZGFtZW50YWxseSBicm9rZW4gYXMgdGhlcmUgaXMgbm8gXCJkb3dubG9hZGZpbmlzaGVkXCIgZXZlbnQgdG8gc3Vic2NyaWJlIHRvXG5cdFx0LCBhcmJpdHJhcnlfcmV2b2tlX3RpbWVvdXQgPSAxMDAwICogNDAgLy8gaW4gbXNcblx0XHQsIHJldm9rZSA9IGZ1bmN0aW9uKGZpbGUpIHtcblx0XHRcdHZhciByZXZva2VyID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICh0eXBlb2YgZmlsZSA9PT0gXCJzdHJpbmdcIikgeyAvLyBmaWxlIGlzIGFuIG9iamVjdCBVUkxcblx0XHRcdFx0XHRnZXRfVVJMKCkucmV2b2tlT2JqZWN0VVJMKGZpbGUpO1xuXHRcdFx0XHR9IGVsc2UgeyAvLyBmaWxlIGlzIGEgRmlsZVxuXHRcdFx0XHRcdGZpbGUucmVtb3ZlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRzZXRUaW1lb3V0KHJldm9rZXIsIGFyYml0cmFyeV9yZXZva2VfdGltZW91dCk7XG5cdFx0fVxuXHRcdCwgZGlzcGF0Y2ggPSBmdW5jdGlvbihmaWxlc2F2ZXIsIGV2ZW50X3R5cGVzLCBldmVudCkge1xuXHRcdFx0ZXZlbnRfdHlwZXMgPSBbXS5jb25jYXQoZXZlbnRfdHlwZXMpO1xuXHRcdFx0dmFyIGkgPSBldmVudF90eXBlcy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoaS0tKSB7XG5cdFx0XHRcdHZhciBsaXN0ZW5lciA9IGZpbGVzYXZlcltcIm9uXCIgKyBldmVudF90eXBlc1tpXV07XG5cdFx0XHRcdGlmICh0eXBlb2YgbGlzdGVuZXIgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRsaXN0ZW5lci5jYWxsKGZpbGVzYXZlciwgZXZlbnQgfHwgZmlsZXNhdmVyKTtcblx0XHRcdFx0XHR9IGNhdGNoIChleCkge1xuXHRcdFx0XHRcdFx0dGhyb3dfb3V0c2lkZShleCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdCwgYXV0b19ib20gPSBmdW5jdGlvbihibG9iKSB7XG5cdFx0XHQvLyBwcmVwZW5kIEJPTSBmb3IgVVRGLTggWE1MIGFuZCB0ZXh0LyogdHlwZXMgKGluY2x1ZGluZyBIVE1MKVxuXHRcdFx0Ly8gbm90ZTogeW91ciBicm93c2VyIHdpbGwgYXV0b21hdGljYWxseSBjb252ZXJ0IFVURi0xNiBVK0ZFRkYgdG8gRUYgQkIgQkZcblx0XHRcdGlmICgvXlxccyooPzp0ZXh0XFwvXFxTKnxhcHBsaWNhdGlvblxcL3htbHxcXFMqXFwvXFxTKlxcK3htbClcXHMqOy4qY2hhcnNldFxccyo9XFxzKnV0Zi04L2kudGVzdChibG9iLnR5cGUpKSB7XG5cdFx0XHRcdHJldHVybiBuZXcgQmxvYihbU3RyaW5nLmZyb21DaGFyQ29kZSgweEZFRkYpLCBibG9iXSwge3R5cGU6IGJsb2IudHlwZX0pO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGJsb2I7XG5cdFx0fVxuXHRcdCwgRmlsZVNhdmVyID0gZnVuY3Rpb24oYmxvYiwgbmFtZSwgbm9fYXV0b19ib20pIHtcblx0XHRcdGlmICghbm9fYXV0b19ib20pIHtcblx0XHRcdFx0YmxvYiA9IGF1dG9fYm9tKGJsb2IpO1xuXHRcdFx0fVxuXHRcdFx0Ly8gRmlyc3QgdHJ5IGEuZG93bmxvYWQsIHRoZW4gd2ViIGZpbGVzeXN0ZW0sIHRoZW4gb2JqZWN0IFVSTHNcblx0XHRcdHZhclxuXHRcdFx0XHQgIGZpbGVzYXZlciA9IHRoaXNcblx0XHRcdFx0LCB0eXBlID0gYmxvYi50eXBlXG5cdFx0XHRcdCwgZm9yY2UgPSB0eXBlID09PSBmb3JjZV9zYXZlYWJsZV90eXBlXG5cdFx0XHRcdCwgb2JqZWN0X3VybFxuXHRcdFx0XHQsIGRpc3BhdGNoX2FsbCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGRpc3BhdGNoKGZpbGVzYXZlciwgXCJ3cml0ZXN0YXJ0IHByb2dyZXNzIHdyaXRlIHdyaXRlZW5kXCIuc3BsaXQoXCIgXCIpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBvbiBhbnkgZmlsZXN5cyBlcnJvcnMgcmV2ZXJ0IHRvIHNhdmluZyB3aXRoIG9iamVjdCBVUkxzXG5cdFx0XHRcdCwgZnNfZXJyb3IgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoKGlzX2Nocm9tZV9pb3MgfHwgKGZvcmNlICYmIGlzX3NhZmFyaSkpICYmIHZpZXcuRmlsZVJlYWRlcikge1xuXHRcdFx0XHRcdFx0Ly8gU2FmYXJpIGRvZXNuJ3QgYWxsb3cgZG93bmxvYWRpbmcgb2YgYmxvYiB1cmxzXG5cdFx0XHRcdFx0XHR2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblx0XHRcdFx0XHRcdHJlYWRlci5vbmxvYWRlbmQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0dmFyIHVybCA9IGlzX2Nocm9tZV9pb3MgPyByZWFkZXIucmVzdWx0IDogcmVhZGVyLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLCAnZGF0YTphdHRhY2htZW50L2ZpbGU7Jyk7XG5cdFx0XHRcdFx0XHRcdHZhciBwb3B1cCA9IHZpZXcub3Blbih1cmwsICdfYmxhbmsnKTtcblx0XHRcdFx0XHRcdFx0aWYoIXBvcHVwKSB2aWV3LmxvY2F0aW9uLmhyZWYgPSB1cmw7XG5cdFx0XHRcdFx0XHRcdHVybD11bmRlZmluZWQ7IC8vIHJlbGVhc2UgcmVmZXJlbmNlIGJlZm9yZSBkaXNwYXRjaGluZ1xuXHRcdFx0XHRcdFx0XHRmaWxlc2F2ZXIucmVhZHlTdGF0ZSA9IGZpbGVzYXZlci5ET05FO1xuXHRcdFx0XHRcdFx0XHRkaXNwYXRjaF9hbGwoKTtcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHRyZWFkZXIucmVhZEFzRGF0YVVSTChibG9iKTtcblx0XHRcdFx0XHRcdGZpbGVzYXZlci5yZWFkeVN0YXRlID0gZmlsZXNhdmVyLklOSVQ7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8vIGRvbid0IGNyZWF0ZSBtb3JlIG9iamVjdCBVUkxzIHRoYW4gbmVlZGVkXG5cdFx0XHRcdFx0aWYgKCFvYmplY3RfdXJsKSB7XG5cdFx0XHRcdFx0XHRvYmplY3RfdXJsID0gZ2V0X1VSTCgpLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGZvcmNlKSB7XG5cdFx0XHRcdFx0XHR2aWV3LmxvY2F0aW9uLmhyZWYgPSBvYmplY3RfdXJsO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR2YXIgb3BlbmVkID0gdmlldy5vcGVuKG9iamVjdF91cmwsIFwiX2JsYW5rXCIpO1xuXHRcdFx0XHRcdFx0aWYgKCFvcGVuZWQpIHtcblx0XHRcdFx0XHRcdFx0Ly8gQXBwbGUgZG9lcyBub3QgYWxsb3cgd2luZG93Lm9wZW4sIHNlZSBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vbGlicmFyeS9zYWZhcmkvZG9jdW1lbnRhdGlvbi9Ub29scy9Db25jZXB0dWFsL1NhZmFyaUV4dGVuc2lvbkd1aWRlL1dvcmtpbmd3aXRoV2luZG93c2FuZFRhYnMvV29ya2luZ3dpdGhXaW5kb3dzYW5kVGFicy5odG1sXG5cdFx0XHRcdFx0XHRcdHZpZXcubG9jYXRpb24uaHJlZiA9IG9iamVjdF91cmw7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGZpbGVzYXZlci5yZWFkeVN0YXRlID0gZmlsZXNhdmVyLkRPTkU7XG5cdFx0XHRcdFx0ZGlzcGF0Y2hfYWxsKCk7XG5cdFx0XHRcdFx0cmV2b2tlKG9iamVjdF91cmwpO1xuXHRcdFx0XHR9XG5cdFx0XHQ7XG5cdFx0XHRmaWxlc2F2ZXIucmVhZHlTdGF0ZSA9IGZpbGVzYXZlci5JTklUO1xuXG5cdFx0XHRpZiAoY2FuX3VzZV9zYXZlX2xpbmspIHtcblx0XHRcdFx0b2JqZWN0X3VybCA9IGdldF9VUkwoKS5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0c2F2ZV9saW5rLmhyZWYgPSBvYmplY3RfdXJsO1xuXHRcdFx0XHRcdHNhdmVfbGluay5kb3dubG9hZCA9IG5hbWU7XG5cdFx0XHRcdFx0Y2xpY2soc2F2ZV9saW5rKTtcblx0XHRcdFx0XHRkaXNwYXRjaF9hbGwoKTtcblx0XHRcdFx0XHRyZXZva2Uob2JqZWN0X3VybCk7XG5cdFx0XHRcdFx0ZmlsZXNhdmVyLnJlYWR5U3RhdGUgPSBmaWxlc2F2ZXIuRE9ORTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0ZnNfZXJyb3IoKTtcblx0XHR9XG5cdFx0LCBGU19wcm90byA9IEZpbGVTYXZlci5wcm90b3R5cGVcblx0XHQsIHNhdmVBcyA9IGZ1bmN0aW9uKGJsb2IsIG5hbWUsIG5vX2F1dG9fYm9tKSB7XG5cdFx0XHRyZXR1cm4gbmV3IEZpbGVTYXZlcihibG9iLCBuYW1lIHx8IGJsb2IubmFtZSB8fCBcImRvd25sb2FkXCIsIG5vX2F1dG9fYm9tKTtcblx0XHR9XG5cdDtcblx0Ly8gSUUgMTArIChuYXRpdmUgc2F2ZUFzKVxuXHRpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJiBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYikge1xuXHRcdHJldHVybiBmdW5jdGlvbihibG9iLCBuYW1lLCBub19hdXRvX2JvbSkge1xuXHRcdFx0bmFtZSA9IG5hbWUgfHwgYmxvYi5uYW1lIHx8IFwiZG93bmxvYWRcIjtcblxuXHRcdFx0aWYgKCFub19hdXRvX2JvbSkge1xuXHRcdFx0XHRibG9iID0gYXV0b19ib20oYmxvYik7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IoYmxvYiwgbmFtZSk7XG5cdFx0fTtcblx0fVxuXG5cdEZTX3Byb3RvLmFib3J0ID0gZnVuY3Rpb24oKXt9O1xuXHRGU19wcm90by5yZWFkeVN0YXRlID0gRlNfcHJvdG8uSU5JVCA9IDA7XG5cdEZTX3Byb3RvLldSSVRJTkcgPSAxO1xuXHRGU19wcm90by5ET05FID0gMjtcblxuXHRGU19wcm90by5lcnJvciA9XG5cdEZTX3Byb3RvLm9ud3JpdGVzdGFydCA9XG5cdEZTX3Byb3RvLm9ucHJvZ3Jlc3MgPVxuXHRGU19wcm90by5vbndyaXRlID1cblx0RlNfcHJvdG8ub25hYm9ydCA9XG5cdEZTX3Byb3RvLm9uZXJyb3IgPVxuXHRGU19wcm90by5vbndyaXRlZW5kID1cblx0XHRudWxsO1xuXG5cdHJldHVybiBzYXZlQXM7XG59KFxuXHQgICB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmXG5cdHx8IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93XG5cdHx8IHRoaXMuY29udGVudFxuKSk7XG4vLyBgc2VsZmAgaXMgdW5kZWZpbmVkIGluIEZpcmVmb3ggZm9yIEFuZHJvaWQgY29udGVudCBzY3JpcHQgY29udGV4dFxuLy8gd2hpbGUgYHRoaXNgIGlzIG5zSUNvbnRlbnRGcmFtZU1lc3NhZ2VNYW5hZ2VyXG4vLyB3aXRoIGFuIGF0dHJpYnV0ZSBgY29udGVudGAgdGhhdCBjb3JyZXNwb25kcyB0byB0aGUgd2luZG93XG5cbmlmICh0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gIG1vZHVsZS5leHBvcnRzLnNhdmVBcyA9IHNhdmVBcztcbn0gZWxzZSBpZiAoKHR5cGVvZiBkZWZpbmUgIT09IFwidW5kZWZpbmVkXCIgJiYgZGVmaW5lICE9PSBudWxsKSAmJiAoZGVmaW5lLmFtZCAhPT0gbnVsbCkpIHtcbiAgZGVmaW5lKFwiRmlsZVNhdmVyLmpzXCIsIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBzYXZlQXM7XG4gIH0pO1xufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjIuMFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxsPXJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKSxCPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLEM9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIiksYmE9cmVxdWlyZShcImZianMvbGliL0V2ZW50TGlzdGVuZXJcIiksZGE9cmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIiksZWE9cmVxdWlyZShcImZianMvbGliL3NoYWxsb3dFcXVhbFwiKSxmYT1yZXF1aXJlKFwiZmJqcy9saWIvY29udGFpbnNOb2RlXCIpLGlhPXJlcXVpcmUoXCJmYmpzL2xpYi9mb2N1c05vZGVcIiksRD1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlPYmplY3RcIik7XG5mdW5jdGlvbiBFKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudFxceDNkXCIrYSxkPTA7ZDxiO2QrKyljKz1cIlxceDI2YXJnc1tdXFx4M2RcIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2I9RXJyb3IoYytcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2IubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIjtiLmZyYW1lc1RvUG9wPTE7dGhyb3cgYjt9YWE/dm9pZCAwOkUoXCIyMjdcIik7XG52YXIgb2E9e2NoaWxkcmVuOiEwLGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiEwLGRlZmF1bHRWYWx1ZTohMCxkZWZhdWx0Q2hlY2tlZDohMCxpbm5lckhUTUw6ITAsc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nOiEwLHN1cHByZXNzSHlkcmF0aW9uV2FybmluZzohMCxzdHlsZTohMH07ZnVuY3Rpb24gcGEoYSxiKXtyZXR1cm4oYSZiKT09PWJ9XG52YXIgdGE9e01VU1RfVVNFX1BST1BFUlRZOjEsSEFTX0JPT0xFQU5fVkFMVUU6NCxIQVNfTlVNRVJJQ19WQUxVRTo4LEhBU19QT1NJVElWRV9OVU1FUklDX1ZBTFVFOjI0LEhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUU6MzIsSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFOjY0LGluamVjdERPTVByb3BlcnR5Q29uZmlnOmZ1bmN0aW9uKGEpe3ZhciBiPXRhLGM9YS5Qcm9wZXJ0aWVzfHx7fSxkPWEuRE9NQXR0cmlidXRlTmFtZXNwYWNlc3x8e30sZT1hLkRPTUF0dHJpYnV0ZU5hbWVzfHx7fTthPWEuRE9NTXV0YXRpb25NZXRob2RzfHx7fTtmb3IodmFyIGYgaW4gYyl7dWEuaGFzT3duUHJvcGVydHkoZik/RShcIjQ4XCIsZik6dm9pZCAwO3ZhciBnPWYudG9Mb3dlckNhc2UoKSxoPWNbZl07Zz17YXR0cmlidXRlTmFtZTpnLGF0dHJpYnV0ZU5hbWVzcGFjZTpudWxsLHByb3BlcnR5TmFtZTpmLG11dGF0aW9uTWV0aG9kOm51bGwsbXVzdFVzZVByb3BlcnR5OnBhKGgsYi5NVVNUX1VTRV9QUk9QRVJUWSksXG5oYXNCb29sZWFuVmFsdWU6cGEoaCxiLkhBU19CT09MRUFOX1ZBTFVFKSxoYXNOdW1lcmljVmFsdWU6cGEoaCxiLkhBU19OVU1FUklDX1ZBTFVFKSxoYXNQb3NpdGl2ZU51bWVyaWNWYWx1ZTpwYShoLGIuSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUpLGhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWU6cGEoaCxiLkhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUUpLGhhc1N0cmluZ0Jvb2xlYW5WYWx1ZTpwYShoLGIuSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFKX07MT49Zy5oYXNCb29sZWFuVmFsdWUrZy5oYXNOdW1lcmljVmFsdWUrZy5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlP3ZvaWQgMDpFKFwiNTBcIixmKTtlLmhhc093blByb3BlcnR5KGYpJiYoZy5hdHRyaWJ1dGVOYW1lPWVbZl0pO2QuaGFzT3duUHJvcGVydHkoZikmJihnLmF0dHJpYnV0ZU5hbWVzcGFjZT1kW2ZdKTthLmhhc093blByb3BlcnR5KGYpJiYoZy5tdXRhdGlvbk1ldGhvZD1hW2ZdKTt1YVtmXT1nfX19LHVhPXt9O1xuZnVuY3Rpb24gdmEoYSxiKXtpZihvYS5oYXNPd25Qcm9wZXJ0eShhKXx8MjxhLmxlbmd0aCYmKFwib1wiPT09YVswXXx8XCJPXCI9PT1hWzBdKSYmKFwiblwiPT09YVsxXXx8XCJOXCI9PT1hWzFdKSlyZXR1cm4hMTtpZihudWxsPT09YilyZXR1cm4hMDtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJib29sZWFuXCI6cmV0dXJuIG9hLmhhc093blByb3BlcnR5KGEpP2E9ITA6KGI9d2EoYSkpP2E9Yi5oYXNCb29sZWFuVmFsdWV8fGIuaGFzU3RyaW5nQm9vbGVhblZhbHVlfHxiLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWU6KGE9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSksYT1cImRhdGEtXCI9PT1hfHxcImFyaWEtXCI9PT1hKSxhO2Nhc2UgXCJ1bmRlZmluZWRcIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJvYmplY3RcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB3YShhKXtyZXR1cm4gdWEuaGFzT3duUHJvcGVydHkoYSk/dWFbYV06bnVsbH1cbnZhciB4YT10YSx5YT14YS5NVVNUX1VTRV9QUk9QRVJUWSxLPXhhLkhBU19CT09MRUFOX1ZBTFVFLHphPXhhLkhBU19OVU1FUklDX1ZBTFVFLEFhPXhhLkhBU19QT1NJVElWRV9OVU1FUklDX1ZBTFVFLEJhPXhhLkhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUUsQ2E9eGEuSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFLERhPXtQcm9wZXJ0aWVzOnthbGxvd0Z1bGxTY3JlZW46Syxhc3luYzpLLGF1dG9Gb2N1czpLLGF1dG9QbGF5OkssY2FwdHVyZTpCYSxjaGVja2VkOnlhfEssY29sczpBYSxjb250ZW50RWRpdGFibGU6Q2EsY29udHJvbHM6SyxcImRlZmF1bHRcIjpLLGRlZmVyOkssZGlzYWJsZWQ6Syxkb3dubG9hZDpCYSxkcmFnZ2FibGU6Q2EsZm9ybU5vVmFsaWRhdGU6SyxoaWRkZW46Syxsb29wOkssbXVsdGlwbGU6eWF8SyxtdXRlZDp5YXxLLG5vVmFsaWRhdGU6SyxvcGVuOksscGxheXNJbmxpbmU6SyxyZWFkT25seTpLLHJlcXVpcmVkOksscmV2ZXJzZWQ6Syxyb3dzOkFhLHJvd1NwYW46emEsXG5zY29wZWQ6SyxzZWFtbGVzczpLLHNlbGVjdGVkOnlhfEssc2l6ZTpBYSxzdGFydDp6YSxzcGFuOkFhLHNwZWxsQ2hlY2s6Q2Esc3R5bGU6MCx0YWJJbmRleDowLGl0ZW1TY29wZTpLLGFjY2VwdENoYXJzZXQ6MCxjbGFzc05hbWU6MCxodG1sRm9yOjAsaHR0cEVxdWl2OjAsdmFsdWU6Q2F9LERPTUF0dHJpYnV0ZU5hbWVzOnthY2NlcHRDaGFyc2V0OlwiYWNjZXB0LWNoYXJzZXRcIixjbGFzc05hbWU6XCJjbGFzc1wiLGh0bWxGb3I6XCJmb3JcIixodHRwRXF1aXY6XCJodHRwLWVxdWl2XCJ9LERPTU11dGF0aW9uTWV0aG9kczp7dmFsdWU6ZnVuY3Rpb24oYSxiKXtpZihudWxsPT1iKXJldHVybiBhLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO1wibnVtYmVyXCIhPT1hLnR5cGV8fCExPT09YS5oYXNBdHRyaWJ1dGUoXCJ2YWx1ZVwiKT9hLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitiKTphLnZhbGlkaXR5JiYhYS52YWxpZGl0eS5iYWRJbnB1dCYmYS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hJiZcbmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK2IpfX19LEVhPXhhLkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSxNPXt4bGluazpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIix4bWw6XCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIn0sR2E9e1Byb3BlcnRpZXM6e2F1dG9SZXZlcnNlOkVhLGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWQ6RWEscHJlc2VydmVBbHBoYTpFYX0sRE9NQXR0cmlidXRlTmFtZXM6e2F1dG9SZXZlcnNlOlwiYXV0b1JldmVyc2VcIixleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkOlwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLHByZXNlcnZlQWxwaGE6XCJwcmVzZXJ2ZUFscGhhXCJ9LERPTUF0dHJpYnV0ZU5hbWVzcGFjZXM6e3hsaW5rQWN0dWF0ZTpNLnhsaW5rLHhsaW5rQXJjcm9sZTpNLnhsaW5rLHhsaW5rSHJlZjpNLnhsaW5rLHhsaW5rUm9sZTpNLnhsaW5rLHhsaW5rU2hvdzpNLnhsaW5rLHhsaW5rVGl0bGU6TS54bGluayx4bGlua1R5cGU6TS54bGluayxcbnhtbEJhc2U6TS54bWwseG1sTGFuZzpNLnhtbCx4bWxTcGFjZTpNLnhtbH19LEhhPS9bXFwtXFw6XShbYS16XSkvZztmdW5jdGlvbiBJYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4LWhlaWdodCB4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZSB4bWw6YmFzZSB4bWxuczp4bGluayB4bWw6bGFuZyB4bWw6c3BhY2VcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoSGEsXG5JYSk7R2EuUHJvcGVydGllc1tiXT0wO0dhLkRPTUF0dHJpYnV0ZU5hbWVzW2JdPWF9KTt4YS5pbmplY3RET01Qcm9wZXJ0eUNvbmZpZyhEYSk7eGEuaW5qZWN0RE9NUHJvcGVydHlDb25maWcoR2EpO1xudmFyIFA9e19jYXVnaHRFcnJvcjpudWxsLF9oYXNDYXVnaHRFcnJvcjohMSxfcmV0aHJvd0Vycm9yOm51bGwsX2hhc1JldGhyb3dFcnJvcjohMSxpbmplY3Rpb246e2luamVjdEVycm9yVXRpbHM6ZnVuY3Rpb24oYSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGEuaW52b2tlR3VhcmRlZENhbGxiYWNrP0UoXCIxOTdcIik6dm9pZCAwO0phPWEuaW52b2tlR3VhcmRlZENhbGxiYWNrfX0saW52b2tlR3VhcmRlZENhbGxiYWNrOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrKXtKYS5hcHBseShQLGFyZ3VtZW50cyl9LGludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcjpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7UC5pbnZva2VHdWFyZGVkQ2FsbGJhY2suYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKFAuaGFzQ2F1Z2h0RXJyb3IoKSl7dmFyIHE9UC5jbGVhckNhdWdodEVycm9yKCk7UC5faGFzUmV0aHJvd0Vycm9yfHwoUC5faGFzUmV0aHJvd0Vycm9yPSEwLFAuX3JldGhyb3dFcnJvcj1cbnEpfX0scmV0aHJvd0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIEthLmFwcGx5KFAsYXJndW1lbnRzKX0saGFzQ2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4gUC5faGFzQ2F1Z2h0RXJyb3J9LGNsZWFyQ2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtpZihQLl9oYXNDYXVnaHRFcnJvcil7dmFyIGE9UC5fY2F1Z2h0RXJyb3I7UC5fY2F1Z2h0RXJyb3I9bnVsbDtQLl9oYXNDYXVnaHRFcnJvcj0hMTtyZXR1cm4gYX1FKFwiMTk4XCIpfX07ZnVuY3Rpb24gSmEoYSxiLGMsZCxlLGYsZyxoLGspe1AuX2hhc0NhdWdodEVycm9yPSExO1AuX2NhdWdodEVycm9yPW51bGw7dmFyIHE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMscSl9Y2F0Y2godil7UC5fY2F1Z2h0RXJyb3I9dixQLl9oYXNDYXVnaHRFcnJvcj0hMH19XG5mdW5jdGlvbiBLYSgpe2lmKFAuX2hhc1JldGhyb3dFcnJvcil7dmFyIGE9UC5fcmV0aHJvd0Vycm9yO1AuX3JldGhyb3dFcnJvcj1udWxsO1AuX2hhc1JldGhyb3dFcnJvcj0hMTt0aHJvdyBhO319dmFyIExhPW51bGwsTWE9e307XG5mdW5jdGlvbiBOYSgpe2lmKExhKWZvcih2YXIgYSBpbiBNYSl7dmFyIGI9TWFbYV0sYz1MYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOkUoXCI5NlwiLGEpO2lmKCFPYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDpFKFwiOTdcIixhKTtPYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO1BhLmhhc093blByb3BlcnR5KGgpP0UoXCI5OVwiLGgpOnZvaWQgMDtQYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZRYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oUWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDpFKFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gUWEoYSxiLGMpe1JhW2FdP0UoXCIxMDBcIixhKTp2b2lkIDA7UmFbYV09YjtTYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBPYT1bXSxQYT17fSxSYT17fSxTYT17fTtmdW5jdGlvbiBUYShhKXtMYT9FKFwiMTAxXCIpOnZvaWQgMDtMYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtOYSgpfWZ1bmN0aW9uIFVhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO01hLmhhc093blByb3BlcnR5KGMpJiZNYVtjXT09PWR8fChNYVtjXT9FKFwiMTAyXCIsYyk6dm9pZCAwLE1hW2NdPWQsYj0hMCl9YiYmTmEoKX1cbnZhciBWYT1PYmplY3QuZnJlZXplKHtwbHVnaW5zOk9hLGV2ZW50TmFtZURpc3BhdGNoQ29uZmlnczpQYSxyZWdpc3RyYXRpb25OYW1lTW9kdWxlczpSYSxyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzOlNhLHBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXM6bnVsbCxpbmplY3RFdmVudFBsdWdpbk9yZGVyOlRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpVYX0pLFdhPW51bGwsWGE9bnVsbCxZYT1udWxsO2Z1bmN0aW9uIFphKGEsYixjLGQpe2I9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9WWEoZCk7UC5pbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IoYixjLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uICRhKGEsYil7bnVsbD09Yj9FKFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBhYihhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgYmI9bnVsbDtcbmZ1bmN0aW9uIGNiKGEsYil7aWYoYSl7dmFyIGM9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsZD1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGMpKWZvcih2YXIgZT0wO2U8Yy5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZSsrKVphKGEsYixjW2VdLGRbZV0pO2Vsc2UgYyYmWmEoYSxiLGMsZCk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gZGIoYSl7cmV0dXJuIGNiKGEsITApfWZ1bmN0aW9uIGdiKGEpe3JldHVybiBjYihhLCExKX12YXIgaGI9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6VGEsaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOlVhfTtcbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9V2EoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/RShcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIGpiKGEsYixjLGQpe2Zvcih2YXIgZSxmPTA7ZjxPYS5sZW5ndGg7ZisrKXt2YXIgZz1PYVtmXTtnJiYoZz1nLmV4dHJhY3RFdmVudHMoYSxiLGMsZCkpJiYoZT0kYShlLGcpKX1yZXR1cm4gZX1mdW5jdGlvbiBrYihhKXthJiYoYmI9JGEoYmIsYSkpfWZ1bmN0aW9uIGxiKGEpe3ZhciBiPWJiO2JiPW51bGw7YiYmKGE/YWIoYixkYik6YWIoYixnYiksYmI/RShcIjk1XCIpOnZvaWQgMCxQLnJldGhyb3dDYXVnaHRFcnJvcigpKX12YXIgbWI9T2JqZWN0LmZyZWV6ZSh7aW5qZWN0aW9uOmhiLGdldExpc3RlbmVyOmliLGV4dHJhY3RFdmVudHM6amIsZW5xdWV1ZUV2ZW50czprYixwcm9jZXNzRXZlbnRRdWV1ZTpsYn0pLG5iPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLFE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIituYixvYj1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK25iO1xuZnVuY3Rpb24gcGIoYSl7aWYoYVtRXSlyZXR1cm4gYVtRXTtmb3IodmFyIGI9W107IWFbUV07KWlmKGIucHVzaChhKSxhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDt2YXIgYz12b2lkIDAsZD1hW1FdO2lmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXJldHVybiBkO2Zvcig7YSYmKGQ9YVtRXSk7YT1iLnBvcCgpKWM9ZDtyZXR1cm4gY31mdW5jdGlvbiBxYihhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7RShcIjMzXCIpfWZ1bmN0aW9uIHJiKGEpe3JldHVybiBhW29iXXx8bnVsbH1cbnZhciBzYj1PYmplY3QuZnJlZXplKHtwcmVjYWNoZUZpYmVyTm9kZTpmdW5jdGlvbihhLGIpe2JbUV09YX0sZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGU6cGIsZ2V0SW5zdGFuY2VGcm9tTm9kZTpmdW5jdGlvbihhKXthPWFbUV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX0sZ2V0Tm9kZUZyb21JbnN0YW5jZTpxYixnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlOnJiLHVwZGF0ZUZpYmVyUHJvcHM6ZnVuY3Rpb24oYSxiKXthW29iXT1ifX0pO2Z1bmN0aW9uIHRiKGEpe2RvIGE9YVtcInJldHVyblwiXTt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiB1YihhLGIsYyl7Zm9yKHZhciBkPVtdO2E7KWQucHVzaChhKSxhPXRiKGEpO2ZvcihhPWQubGVuZ3RoOzA8YS0tOyliKGRbYV0sXCJjYXB0dXJlZFwiLGMpO2ZvcihhPTA7YTxkLmxlbmd0aDthKyspYihkW2FdLFwiYnViYmxlZFwiLGMpfVxuZnVuY3Rpb24gdmIoYSxiLGMpe2lmKGI9aWIoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz0kYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz0kYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiB3YihhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzJiZ1YihhLl90YXJnZXRJbnN0LHZiLGEpfWZ1bmN0aW9uIHhiKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe3ZhciBiPWEuX3RhcmdldEluc3Q7Yj1iP3RiKGIpOm51bGw7dWIoYix2YixhKX19XG5mdW5jdGlvbiB5YihhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1pYihhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9JGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9JGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIHpiKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmeWIoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIEFiKGEpe2FiKGEsd2IpfVxuZnVuY3Rpb24gQmIoYSxiLGMsZCl7aWYoYyYmZClhOnt2YXIgZT1jO2Zvcih2YXIgZj1kLGc9MCxoPWU7aDtoPXRiKGgpKWcrKztoPTA7Zm9yKHZhciBrPWY7aztrPXRiKGspKWgrKztmb3IoOzA8Zy1oOyllPXRiKGUpLGctLTtmb3IoOzA8aC1nOylmPXRiKGYpLGgtLTtmb3IoO2ctLTspe2lmKGU9PT1mfHxlPT09Zi5hbHRlcm5hdGUpYnJlYWsgYTtlPXRiKGUpO2Y9dGIoZil9ZT1udWxsfWVsc2UgZT1udWxsO2Y9ZTtmb3IoZT1bXTtjJiZjIT09Zjspe2c9Yy5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1mKWJyZWFrO2UucHVzaChjKTtjPXRiKGMpfWZvcihjPVtdO2QmJmQhPT1mOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7Yy5wdXNoKGQpO2Q9dGIoZCl9Zm9yKGQ9MDtkPGUubGVuZ3RoO2QrKyl5YihlW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihhPWMubGVuZ3RoOzA8YS0tOyl5YihjW2FdLFwiY2FwdHVyZWRcIixiKX1cbnZhciBDYj1PYmplY3QuZnJlZXplKHthY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzOkFiLGFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0OmZ1bmN0aW9uKGEpe2FiKGEseGIpfSxhY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXM6QmIsYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXM6ZnVuY3Rpb24oYSl7YWIoYSx6Yil9fSksRGI9bnVsbDtmdW5jdGlvbiBFYigpeyFEYiYmbC5jYW5Vc2VET00mJihEYj1cInRleHRDb250ZW50XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ/XCJ0ZXh0Q29udGVudFwiOlwiaW5uZXJUZXh0XCIpO3JldHVybiBEYn12YXIgUz17X3Jvb3Q6bnVsbCxfc3RhcnRUZXh0Om51bGwsX2ZhbGxiYWNrVGV4dDpudWxsfTtcbmZ1bmN0aW9uIEZiKCl7aWYoUy5fZmFsbGJhY2tUZXh0KXJldHVybiBTLl9mYWxsYmFja1RleHQ7dmFyIGEsYj1TLl9zdGFydFRleHQsYz1iLmxlbmd0aCxkLGU9R2IoKSxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO1MuX2ZhbGxiYWNrVGV4dD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApO3JldHVybiBTLl9mYWxsYmFja1RleHR9ZnVuY3Rpb24gR2IoKXtyZXR1cm5cInZhbHVlXCJpbiBTLl9yb290P1MuX3Jvb3QudmFsdWU6Uy5fcm9vdFtFYigpXX1cbnZhciBIYj1cImRpc3BhdGNoQ29uZmlnIF90YXJnZXRJbnN0IG5hdGl2ZUV2ZW50IGlzRGVmYXVsdFByZXZlbnRlZCBpc1Byb3BhZ2F0aW9uU3RvcHBlZCBfZGlzcGF0Y2hMaXN0ZW5lcnMgX2Rpc3BhdGNoSW5zdGFuY2VzXCIuc3BsaXQoXCIgXCIpLEliPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpDLnRoYXRSZXR1cm5zTnVsbCxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuZnVuY3Rpb24gVChhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/Qy50aGF0UmV0dXJuc1RydWU6Qy50aGF0UmV0dXJuc0ZhbHNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Qy50aGF0UmV0dXJuc0ZhbHNlO3JldHVybiB0aGlzfVxuQihULnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPUMudGhhdFJldHVybnNUcnVlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPUMudGhhdFJldHVybnNUcnVlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PUMudGhhdFJldHVybnNUcnVlfSxpc1BlcnNpc3RlbnQ6Qy50aGF0UmV0dXJuc0ZhbHNlLFxuZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLGI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7Zm9yKGE9MDthPEhiLmxlbmd0aDthKyspdGhpc1tIYlthXV09bnVsbH19KTtULkludGVyZmFjZT1JYjtULmF1Z21lbnRDbGFzcz1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXt9Yy5wcm90b3R5cGU9dGhpcy5wcm90b3R5cGU7dmFyIGQ9bmV3IGM7QihkLGEucHJvdG90eXBlKTthLnByb3RvdHlwZT1kO2EucHJvdG90eXBlLmNvbnN0cnVjdG9yPWE7YS5JbnRlcmZhY2U9Qih7fSx0aGlzLkludGVyZmFjZSxiKTthLmF1Z21lbnRDbGFzcz10aGlzLmF1Z21lbnRDbGFzcztKYihhKX07SmIoVCk7ZnVuY3Rpb24gS2IoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBMYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6RShcIjIyM1wiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gSmIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9S2I7YS5yZWxlYXNlPUxifWZ1bmN0aW9uIE1iKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhNYix7ZGF0YTpudWxsfSk7ZnVuY3Rpb24gTmIoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKE5iLHtkYXRhOm51bGx9KTt2YXIgUGI9WzksMTMsMjcsMzJdLFZiPWwuY2FuVXNlRE9NJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxXYj1udWxsO2wuY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihXYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBYYjtcbmlmKFhiPWwuY2FuVXNlRE9NJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhV2Ipe3ZhciBZYj13aW5kb3cub3BlcmE7WGI9IShcIm9iamVjdFwiPT09dHlwZW9mIFliJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgWWIudmVyc2lvbiYmMTI+PXBhcnNlSW50KFliLnZlcnNpb24oKSwxMCkpfVxudmFyIFpiPVhiLCRiPWwuY2FuVXNlRE9NJiYoIVZifHxXYiYmODxXYiYmMTE+PVdiKSxhYz1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxiYz17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcInRvcENvbXBvc2l0aW9uRW5kXCIsXCJ0b3BLZXlQcmVzc1wiLFwidG9wVGV4dElucHV0XCIsXCJ0b3BQYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvbkVuZCB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uU3RhcnQgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25VcGRhdGUgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9fSxjYz0hMTtcbmZ1bmN0aW9uIGRjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BLZXlVcFwiOnJldHVybi0xIT09UGIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJ0b3BLZXlEb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwidG9wS2V5UHJlc3NcIjpjYXNlIFwidG9wTW91c2VEb3duXCI6Y2FzZSBcInRvcEJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBlYyhhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBmYz0hMTtmdW5jdGlvbiBnYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpyZXR1cm4gZWMoYik7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2NjPSEwO3JldHVybiBhYztjYXNlIFwidG9wVGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1hYyYmY2M/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gaGMoYSxiKXtpZihmYylyZXR1cm5cInRvcENvbXBvc2l0aW9uRW5kXCI9PT1hfHwhVmImJmRjKGEsYik/KGE9RmIoKSxTLl9yb290PW51bGwsUy5fc3RhcnRUZXh0PW51bGwsUy5fZmFsbGJhY2tUZXh0PW51bGwsZmM9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInRvcFBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6cmV0dXJuICRiP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGljPXtldmVudFR5cGVzOmJjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoVmIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BDb21wb3NpdGlvblN0YXJ0XCI6dmFyIGY9YmMuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOmY9YmMuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwidG9wQ29tcG9zaXRpb25VcGRhdGVcIjpmPWJjLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBmYz9kYyhhLGMpJiYoZj1iYy5jb21wb3NpdGlvbkVuZCk6XCJ0b3BLZXlEb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPWJjLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KCRiJiYoZmN8fGYhPT1iYy5jb21wb3NpdGlvblN0YXJ0P2Y9PT1iYy5jb21wb3NpdGlvbkVuZCYmZmMmJihlPUZiKCkpOihTLl9yb290PWQsUy5fc3RhcnRUZXh0PUdiKCksZmM9ITApKSxmPU1iLmdldFBvb2xlZChmLGIsYyxkKSxlP2YuZGF0YT1cbmU6KGU9ZWMoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLEFiKGYpLGU9Zik6ZT1udWxsOyhhPVpiP2djKGEsYyk6aGMoYSxjKSk/KGI9TmIuZ2V0UG9vbGVkKGJjLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxBYihiKSk6Yj1udWxsO3JldHVybltlLGJdfX0samM9bnVsbCxrYz1udWxsLGxjPW51bGw7ZnVuY3Rpb24gbWMoYSl7aWYoYT1YYShhKSl7amMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBqYy5yZXN0b3JlQ29udHJvbGxlZFN0YXRlP3ZvaWQgMDpFKFwiMTk0XCIpO3ZhciBiPVdhKGEuc3RhdGVOb2RlKTtqYy5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19dmFyIG5jPXtpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50OmZ1bmN0aW9uKGEpe2pjPWF9fTtmdW5jdGlvbiBvYyhhKXtrYz9sYz9sYy5wdXNoKGEpOmxjPVthXTprYz1hfVxuZnVuY3Rpb24gcGMoKXtpZihrYyl7dmFyIGE9a2MsYj1sYztsYz1rYz1udWxsO21jKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKyltYyhiW2FdKX19dmFyIHFjPU9iamVjdC5mcmVlemUoe2luamVjdGlvbjpuYyxlbnF1ZXVlU3RhdGVSZXN0b3JlOm9jLHJlc3RvcmVTdGF0ZUlmTmVlZGVkOnBjfSk7ZnVuY3Rpb24gcmMoYSxiKXtyZXR1cm4gYShiKX12YXIgc2M9ITE7ZnVuY3Rpb24gdGMoYSxiKXtpZihzYylyZXR1cm4gcmMoYSxiKTtzYz0hMDt0cnl7cmV0dXJuIHJjKGEsYil9ZmluYWxseXtzYz0hMSxwYygpfX12YXIgdWM9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07XG5mdW5jdGlvbiB2YyhhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXVjW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiB3YyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHhjO2wuY2FuVXNlRE9NJiYoeGM9ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24mJmRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUmJiEwIT09ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZShcIlwiLFwiXCIpKTtcbmZ1bmN0aW9uIHljKGEsYil7aWYoIWwuY2FuVXNlRE9NfHxiJiYhKFwiYWRkRXZlbnRMaXN0ZW5lclwiaW4gZG9jdW1lbnQpKXJldHVybiExO2I9XCJvblwiK2E7dmFyIGM9YiBpbiBkb2N1bWVudDtjfHwoYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGMuc2V0QXR0cmlidXRlKGIsXCJyZXR1cm47XCIpLGM9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNbYl0pOyFjJiZ4YyYmXCJ3aGVlbFwiPT09YSYmKGM9ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZShcIkV2ZW50cy53aGVlbFwiLFwiMy4wXCIpKTtyZXR1cm4gY31mdW5jdGlvbiB6YyhhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gQWMoYSl7dmFyIGI9emMoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYy5nZXQuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2Muc2V0LmNhbGwodGhpcyxhKX19KSx7Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1udWxsO2RlbGV0ZSBhW2JdfX19XG5mdW5jdGlvbiBCYyhhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9QWMoYSkpfWZ1bmN0aW9uIENjKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD16YyhhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBEYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDaGFuZ2UgdG9wQ2xpY2sgdG9wRm9jdXMgdG9wSW5wdXQgdG9wS2V5RG93biB0b3BLZXlVcCB0b3BTZWxlY3Rpb25DaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtcbmZ1bmN0aW9uIEVjKGEsYixjKXthPVQuZ2V0UG9vbGVkKERjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7b2MoYyk7QWIoYSk7cmV0dXJuIGF9dmFyIEZjPW51bGwsR2M9bnVsbDtmdW5jdGlvbiBIYyhhKXtrYihhKTtsYighMSl9ZnVuY3Rpb24gSWMoYSl7dmFyIGI9cWIoYSk7aWYoQ2MoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSmMoYSxiKXtpZihcInRvcENoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgS2M9ITE7bC5jYW5Vc2VET00mJihLYz15YyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBMYygpe0ZjJiYoRmMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsTWMpLEdjPUZjPW51bGwpfWZ1bmN0aW9uIE1jKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZJYyhHYykmJihhPUVjKEdjLGEsd2MoYSkpLHRjKEhjLGEpKX1cbmZ1bmN0aW9uIE5jKGEsYixjKXtcInRvcEZvY3VzXCI9PT1hPyhMYygpLEZjPWIsR2M9YyxGYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixNYykpOlwidG9wQmx1clwiPT09YSYmTGMoKX1mdW5jdGlvbiBPYyhhKXtpZihcInRvcFNlbGVjdGlvbkNoYW5nZVwiPT09YXx8XCJ0b3BLZXlVcFwiPT09YXx8XCJ0b3BLZXlEb3duXCI9PT1hKXJldHVybiBJYyhHYyl9ZnVuY3Rpb24gUGMoYSxiKXtpZihcInRvcENsaWNrXCI9PT1hKXJldHVybiBJYyhiKX1mdW5jdGlvbiAkYyhhLGIpe2lmKFwidG9wSW5wdXRcIj09PWF8fFwidG9wQ2hhbmdlXCI9PT1hKXJldHVybiBJYyhiKX1cbnZhciBhZD17ZXZlbnRUeXBlczpEYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOktjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9xYihiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUpjO2Vsc2UgaWYodmMoZSkpaWYoS2MpZz0kYztlbHNle2c9T2M7dmFyIGg9TmN9ZWxzZSBmPWUubm9kZU5hbWUsIWZ8fFwiaW5wdXRcIiE9PWYudG9Mb3dlckNhc2UoKXx8XCJjaGVja2JveFwiIT09ZS50eXBlJiZcInJhZGlvXCIhPT1lLnR5cGV8fChnPVBjKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiBFYyhnLGMsZCk7aCYmaChhLGUsYik7XCJ0b3BCbHVyXCI9PT1hJiZudWxsIT1iJiYoYT1iLl93cmFwcGVyU3RhdGV8fGUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmKGE9XCJcIitlLnZhbHVlLGUuZ2V0QXR0cmlidXRlKFwidmFsdWVcIikhPT1cbmEmJmUuc2V0QXR0cmlidXRlKFwidmFsdWVcIixhKSl9fTtmdW5jdGlvbiBiZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoYmQse3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pO3ZhciBjZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gZGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1jZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIGVkKCl7cmV0dXJuIGRkfWZ1bmN0aW9uIGZkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1cbmJkLmF1Z21lbnRDbGFzcyhmZCx7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZCxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX19KTtcbnZhciBnZD17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJ0b3BNb3VzZU91dFwiLFwidG9wTW91c2VPdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcInRvcE1vdXNlT3V0XCIsXCJ0b3BNb3VzZU92ZXJcIl19fSxoZD17ZXZlbnRUeXBlczpnZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe2lmKFwidG9wTW91c2VPdmVyXCI9PT1hJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8XCJ0b3BNb3VzZU91dFwiIT09YSYmXCJ0b3BNb3VzZU92ZXJcIiE9PWEpcmV0dXJuIG51bGw7dmFyIGU9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7XCJ0b3BNb3VzZU91dFwiPT09YT8oYT1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/cGIoYik6bnVsbCk6YT1udWxsO2lmKGE9PT1cbmIpcmV0dXJuIG51bGw7dmFyIGY9bnVsbD09YT9lOnFiKGEpO2U9bnVsbD09Yj9lOnFiKGIpO3ZhciBnPWZkLmdldFBvb2xlZChnZC5tb3VzZUxlYXZlLGEsYyxkKTtnLnR5cGU9XCJtb3VzZWxlYXZlXCI7Zy50YXJnZXQ9ZjtnLnJlbGF0ZWRUYXJnZXQ9ZTtjPWZkLmdldFBvb2xlZChnZC5tb3VzZUVudGVyLGIsYyxkKTtjLnR5cGU9XCJtb3VzZWVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9ZjtCYihnLGMsYSxiKTtyZXR1cm5bZyxjXX19LGlkPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELlJlYWN0Q3VycmVudE93bmVyO2Z1bmN0aW9uIGpkKGEpe2E9YS50eXBlO3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuZGlzcGxheU5hbWV8fGEubmFtZTpudWxsfVxuZnVuY3Rpb24ga2QoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2JbXCJyZXR1cm5cIl07KWI9YltcInJldHVyblwiXTtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiW1wicmV0dXJuXCJdOylpZihiPWJbXCJyZXR1cm5cIl0sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBsZChhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1rZChhKTohMX1mdW5jdGlvbiBtZChhKXsyIT09a2QoYSk/RShcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBuZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1rZChhKSwzPT09Yj9FKFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWNbXCJyZXR1cm5cIl0sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIG1kKGUpLGE7aWYoZz09PWQpcmV0dXJuIG1kKGUpLGI7Zz1nLnNpYmxpbmd9RShcIjE4OFwiKX1pZihjW1wicmV0dXJuXCJdIT09ZFtcInJldHVyblwiXSljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDpFKFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/RShcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP0UoXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gb2QoYSl7YT1uZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGRbXCJyZXR1cm5cIl09YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuIG51bGw7Yj1iW1wicmV0dXJuXCJdfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHBkKGEpe2E9bmQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCYmNCE9PWIudGFnKWIuY2hpbGRbXCJyZXR1cm5cIl09YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuIG51bGw7Yj1iW1wicmV0dXJuXCJdfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH12YXIgcWQ9W107XG5mdW5jdGlvbiByZChhKXt2YXIgYj1hLnRhcmdldEluc3Q7ZG97aWYoIWIpe2EuYW5jZXN0b3JzLnB1c2goYik7YnJlYWt9dmFyIGM7Zm9yKGM9YjtjW1wicmV0dXJuXCJdOyljPWNbXCJyZXR1cm5cIl07Yz0zIT09Yy50YWc/bnVsbDpjLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFjKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYik7Yj1wYihjKX13aGlsZShiKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyliPWEuYW5jZXN0b3JzW2NdLHNkKGEudG9wTGV2ZWxUeXBlLGIsYS5uYXRpdmVFdmVudCx3YyhhLm5hdGl2ZUV2ZW50KSl9dmFyIHRkPSEwLHNkPXZvaWQgMDtmdW5jdGlvbiB1ZChhKXt0ZD0hIWF9ZnVuY3Rpb24gVShhLGIsYyl7cmV0dXJuIGM/YmEubGlzdGVuKGMsYix2ZC5iaW5kKG51bGwsYSkpOm51bGx9ZnVuY3Rpb24gd2QoYSxiLGMpe3JldHVybiBjP2JhLmNhcHR1cmUoYyxiLHZkLmJpbmQobnVsbCxhKSk6bnVsbH1cbmZ1bmN0aW9uIHZkKGEsYil7aWYodGQpe3ZhciBjPXdjKGIpO2M9cGIoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1rZChjKXx8KGM9bnVsbCk7aWYocWQubGVuZ3RoKXt2YXIgZD1xZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXt0YyhyZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPnFkLmxlbmd0aCYmcWQucHVzaChhKX19fVxudmFyIHhkPU9iamVjdC5mcmVlemUoe2dldCBfZW5hYmxlZCgpe3JldHVybiB0ZH0sZ2V0IF9oYW5kbGVUb3BMZXZlbCgpe3JldHVybiBzZH0sc2V0SGFuZGxlVG9wTGV2ZWw6ZnVuY3Rpb24oYSl7c2Q9YX0sc2V0RW5hYmxlZDp1ZCxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGR9LHRyYXBCdWJibGVkRXZlbnQ6VSx0cmFwQ2FwdHVyZWRFdmVudDp3ZCxkaXNwYXRjaEV2ZW50OnZkfSk7ZnVuY3Rpb24geWQoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtjW1wibXNcIithXT1cIk1TXCIrYjtjW1wiT1wiK2FdPVwib1wiK2IudG9Mb3dlckNhc2UoKTtyZXR1cm4gY31cbnZhciB6ZD17YW5pbWF0aW9uZW5kOnlkKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOnlkKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6eWQoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6eWQoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxBZD17fSxCZD17fTtsLmNhblVzZURPTSYmKEJkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIHpkLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIHpkLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIHpkLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIHpkLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7XG5mdW5jdGlvbiBDZChhKXtpZihBZFthXSlyZXR1cm4gQWRbYV07aWYoIXpkW2FdKXJldHVybiBhO3ZhciBiPXpkW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEJkKXJldHVybiBBZFthXT1iW2NdO3JldHVyblwiXCJ9XG52YXIgRGQ9e3RvcEFib3J0OlwiYWJvcnRcIix0b3BBbmltYXRpb25FbmQ6Q2QoXCJhbmltYXRpb25lbmRcIil8fFwiYW5pbWF0aW9uZW5kXCIsdG9wQW5pbWF0aW9uSXRlcmF0aW9uOkNkKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpfHxcImFuaW1hdGlvbml0ZXJhdGlvblwiLHRvcEFuaW1hdGlvblN0YXJ0OkNkKFwiYW5pbWF0aW9uc3RhcnRcIil8fFwiYW5pbWF0aW9uc3RhcnRcIix0b3BCbHVyOlwiYmx1clwiLHRvcENhbmNlbDpcImNhbmNlbFwiLHRvcENhblBsYXk6XCJjYW5wbGF5XCIsdG9wQ2FuUGxheVRocm91Z2g6XCJjYW5wbGF5dGhyb3VnaFwiLHRvcENoYW5nZTpcImNoYW5nZVwiLHRvcENsaWNrOlwiY2xpY2tcIix0b3BDbG9zZTpcImNsb3NlXCIsdG9wQ29tcG9zaXRpb25FbmQ6XCJjb21wb3NpdGlvbmVuZFwiLHRvcENvbXBvc2l0aW9uU3RhcnQ6XCJjb21wb3NpdGlvbnN0YXJ0XCIsdG9wQ29tcG9zaXRpb25VcGRhdGU6XCJjb21wb3NpdGlvbnVwZGF0ZVwiLHRvcENvbnRleHRNZW51OlwiY29udGV4dG1lbnVcIix0b3BDb3B5OlwiY29weVwiLFxudG9wQ3V0OlwiY3V0XCIsdG9wRG91YmxlQ2xpY2s6XCJkYmxjbGlja1wiLHRvcERyYWc6XCJkcmFnXCIsdG9wRHJhZ0VuZDpcImRyYWdlbmRcIix0b3BEcmFnRW50ZXI6XCJkcmFnZW50ZXJcIix0b3BEcmFnRXhpdDpcImRyYWdleGl0XCIsdG9wRHJhZ0xlYXZlOlwiZHJhZ2xlYXZlXCIsdG9wRHJhZ092ZXI6XCJkcmFnb3ZlclwiLHRvcERyYWdTdGFydDpcImRyYWdzdGFydFwiLHRvcERyb3A6XCJkcm9wXCIsdG9wRHVyYXRpb25DaGFuZ2U6XCJkdXJhdGlvbmNoYW5nZVwiLHRvcEVtcHRpZWQ6XCJlbXB0aWVkXCIsdG9wRW5jcnlwdGVkOlwiZW5jcnlwdGVkXCIsdG9wRW5kZWQ6XCJlbmRlZFwiLHRvcEVycm9yOlwiZXJyb3JcIix0b3BGb2N1czpcImZvY3VzXCIsdG9wSW5wdXQ6XCJpbnB1dFwiLHRvcEtleURvd246XCJrZXlkb3duXCIsdG9wS2V5UHJlc3M6XCJrZXlwcmVzc1wiLHRvcEtleVVwOlwia2V5dXBcIix0b3BMb2FkZWREYXRhOlwibG9hZGVkZGF0YVwiLHRvcExvYWQ6XCJsb2FkXCIsdG9wTG9hZGVkTWV0YWRhdGE6XCJsb2FkZWRtZXRhZGF0YVwiLHRvcExvYWRTdGFydDpcImxvYWRzdGFydFwiLFxudG9wTW91c2VEb3duOlwibW91c2Vkb3duXCIsdG9wTW91c2VNb3ZlOlwibW91c2Vtb3ZlXCIsdG9wTW91c2VPdXQ6XCJtb3VzZW91dFwiLHRvcE1vdXNlT3ZlcjpcIm1vdXNlb3ZlclwiLHRvcE1vdXNlVXA6XCJtb3VzZXVwXCIsdG9wUGFzdGU6XCJwYXN0ZVwiLHRvcFBhdXNlOlwicGF1c2VcIix0b3BQbGF5OlwicGxheVwiLHRvcFBsYXlpbmc6XCJwbGF5aW5nXCIsdG9wUHJvZ3Jlc3M6XCJwcm9ncmVzc1wiLHRvcFJhdGVDaGFuZ2U6XCJyYXRlY2hhbmdlXCIsdG9wU2Nyb2xsOlwic2Nyb2xsXCIsdG9wU2Vla2VkOlwic2Vla2VkXCIsdG9wU2Vla2luZzpcInNlZWtpbmdcIix0b3BTZWxlY3Rpb25DaGFuZ2U6XCJzZWxlY3Rpb25jaGFuZ2VcIix0b3BTdGFsbGVkOlwic3RhbGxlZFwiLHRvcFN1c3BlbmQ6XCJzdXNwZW5kXCIsdG9wVGV4dElucHV0OlwidGV4dElucHV0XCIsdG9wVGltZVVwZGF0ZTpcInRpbWV1cGRhdGVcIix0b3BUb2dnbGU6XCJ0b2dnbGVcIix0b3BUb3VjaENhbmNlbDpcInRvdWNoY2FuY2VsXCIsdG9wVG91Y2hFbmQ6XCJ0b3VjaGVuZFwiLHRvcFRvdWNoTW92ZTpcInRvdWNobW92ZVwiLFxudG9wVG91Y2hTdGFydDpcInRvdWNoc3RhcnRcIix0b3BUcmFuc2l0aW9uRW5kOkNkKFwidHJhbnNpdGlvbmVuZFwiKXx8XCJ0cmFuc2l0aW9uZW5kXCIsdG9wVm9sdW1lQ2hhbmdlOlwidm9sdW1lY2hhbmdlXCIsdG9wV2FpdGluZzpcIndhaXRpbmdcIix0b3BXaGVlbDpcIndoZWVsXCJ9LEVkPXt9LEZkPTAsR2Q9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO2Z1bmN0aW9uIEhkKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLEdkKXx8KGFbR2RdPUZkKyssRWRbYVtHZF1dPXt9KTtyZXR1cm4gRWRbYVtHZF1dfWZ1bmN0aW9uIElkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpkKGEsYil7dmFyIGM9SWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9SWQoYyl9fWZ1bmN0aW9uIEtkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJlwidGV4dFwiPT09YS50eXBlfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBMZD1sLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLE1kPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbnRleHRNZW51IHRvcEZvY3VzIHRvcEtleURvd24gdG9wS2V5VXAgdG9wTW91c2VEb3duIHRvcE1vdXNlVXAgdG9wU2VsZWN0aW9uQ2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sTmQ9bnVsbCxPZD1udWxsLFBkPW51bGwsUWQ9ITE7XG5mdW5jdGlvbiBSZChhLGIpe2lmKFFkfHxudWxsPT1OZHx8TmQhPT1kYSgpKXJldHVybiBudWxsO3ZhciBjPU5kO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJktkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTp3aW5kb3cuZ2V0U2VsZWN0aW9uPyhjPXdpbmRvdy5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTpjPXZvaWQgMDtyZXR1cm4gUGQmJmVhKFBkLGMpP251bGw6KFBkPWMsYT1ULmdldFBvb2xlZChNZC5zZWxlY3QsT2QsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1OZCxBYihhKSxhKX1cbnZhciBTZD17ZXZlbnRUeXBlczpNZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1IZChlKTtmPVNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/cWIoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwidG9wRm9jdXNcIjppZih2YyhlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlOZD1lLE9kPWIsUGQ9bnVsbDticmVhaztjYXNlIFwidG9wQmx1clwiOlBkPU9kPU5kPW51bGw7YnJlYWs7Y2FzZSBcInRvcE1vdXNlRG93blwiOlFkPSEwO2JyZWFrO2Nhc2UgXCJ0b3BDb250ZXh0TWVudVwiOmNhc2UgXCJ0b3BNb3VzZVVwXCI6cmV0dXJuIFFkPSExLFJkKGMsZCk7Y2FzZSBcInRvcFNlbGVjdGlvbkNoYW5nZVwiOmlmKExkKWJyZWFrO1xuY2FzZSBcInRvcEtleURvd25cIjpjYXNlIFwidG9wS2V5VXBcIjpyZXR1cm4gUmQoYyxkKX1yZXR1cm4gbnVsbH19O2Z1bmN0aW9uIFRkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhUZCx7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSk7ZnVuY3Rpb24gVWQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKFVkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSk7ZnVuY3Rpb24gVmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfWJkLmF1Z21lbnRDbGFzcyhWZCx7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBXZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBYZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sWWQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9O2Z1bmN0aW9uIFpkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1cbmJkLmF1Z21lbnRDbGFzcyhaZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1YZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1XZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/WWRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOmVkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9XZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP1dkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSk7ZnVuY3Rpb24gJGQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfWZkLmF1Z21lbnRDbGFzcygkZCx7ZGF0YVRyYW5zZmVyOm51bGx9KTtmdW5jdGlvbiBhZShhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9YmQuYXVnbWVudENsYXNzKGFlLHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6ZWR9KTtmdW5jdGlvbiBiZShhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoYmUse3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSk7XG5mdW5jdGlvbiBjZShhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9ZmQuYXVnbWVudENsYXNzKGNlLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pO3ZhciBkZT17fSxlZT17fTtcblwiYWJvcnQgYW5pbWF0aW9uRW5kIGFuaW1hdGlvbkl0ZXJhdGlvbiBhbmltYXRpb25TdGFydCBibHVyIGNhbmNlbCBjYW5QbGF5IGNhblBsYXlUaHJvdWdoIGNsaWNrIGNsb3NlIGNvbnRleHRNZW51IGNvcHkgY3V0IGRvdWJsZUNsaWNrIGRyYWcgZHJhZ0VuZCBkcmFnRW50ZXIgZHJhZ0V4aXQgZHJhZ0xlYXZlIGRyYWdPdmVyIGRyYWdTdGFydCBkcm9wIGR1cmF0aW9uQ2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGZvY3VzIGlucHV0IGludmFsaWQga2V5RG93biBrZXlQcmVzcyBrZXlVcCBsb2FkIGxvYWRlZERhdGEgbG9hZGVkTWV0YWRhdGEgbG9hZFN0YXJ0IG1vdXNlRG93biBtb3VzZU1vdmUgbW91c2VPdXQgbW91c2VPdmVyIG1vdXNlVXAgcGFzdGUgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVDaGFuZ2UgcmVzZXQgc2Nyb2xsIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VibWl0IHN1c3BlbmQgdGltZVVwZGF0ZSB0b2dnbGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hNb3ZlIHRvdWNoU3RhcnQgdHJhbnNpdGlvbkVuZCB2b2x1bWVDaGFuZ2Ugd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF0udG9VcHBlckNhc2UoKStcbmEuc2xpY2UoMSksYz1cIm9uXCIrYjtiPVwidG9wXCIrYjtjPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpjLGNhcHR1cmVkOmMrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbYl19O2RlW2FdPWM7ZWVbYl09Y30pO1xudmFyIGZlPXtldmVudFR5cGVzOmRlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZWVbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKDA9PT1XZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwidG9wS2V5RG93blwiOmNhc2UgXCJ0b3BLZXlVcFwiOmE9WmQ7YnJlYWs7Y2FzZSBcInRvcEJsdXJcIjpjYXNlIFwidG9wRm9jdXNcIjphPVZkO2JyZWFrO2Nhc2UgXCJ0b3BDbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwidG9wRG91YmxlQ2xpY2tcIjpjYXNlIFwidG9wTW91c2VEb3duXCI6Y2FzZSBcInRvcE1vdXNlTW92ZVwiOmNhc2UgXCJ0b3BNb3VzZVVwXCI6Y2FzZSBcInRvcE1vdXNlT3V0XCI6Y2FzZSBcInRvcE1vdXNlT3ZlclwiOmNhc2UgXCJ0b3BDb250ZXh0TWVudVwiOmE9ZmQ7YnJlYWs7Y2FzZSBcInRvcERyYWdcIjpjYXNlIFwidG9wRHJhZ0VuZFwiOmNhc2UgXCJ0b3BEcmFnRW50ZXJcIjpjYXNlIFwidG9wRHJhZ0V4aXRcIjpjYXNlIFwidG9wRHJhZ0xlYXZlXCI6Y2FzZSBcInRvcERyYWdPdmVyXCI6Y2FzZSBcInRvcERyYWdTdGFydFwiOmNhc2UgXCJ0b3BEcm9wXCI6YT1cbiRkO2JyZWFrO2Nhc2UgXCJ0b3BUb3VjaENhbmNlbFwiOmNhc2UgXCJ0b3BUb3VjaEVuZFwiOmNhc2UgXCJ0b3BUb3VjaE1vdmVcIjpjYXNlIFwidG9wVG91Y2hTdGFydFwiOmE9YWU7YnJlYWs7Y2FzZSBcInRvcEFuaW1hdGlvbkVuZFwiOmNhc2UgXCJ0b3BBbmltYXRpb25JdGVyYXRpb25cIjpjYXNlIFwidG9wQW5pbWF0aW9uU3RhcnRcIjphPVRkO2JyZWFrO2Nhc2UgXCJ0b3BUcmFuc2l0aW9uRW5kXCI6YT1iZTticmVhaztjYXNlIFwidG9wU2Nyb2xsXCI6YT1iZDticmVhaztjYXNlIFwidG9wV2hlZWxcIjphPWNlO2JyZWFrO2Nhc2UgXCJ0b3BDb3B5XCI6Y2FzZSBcInRvcEN1dFwiOmNhc2UgXCJ0b3BQYXN0ZVwiOmE9VWQ7YnJlYWs7ZGVmYXVsdDphPVR9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtBYihiKTtyZXR1cm4gYn19O3NkPWZ1bmN0aW9uKGEsYixjLGQpe2E9amIoYSxiLGMsZCk7a2IoYSk7bGIoITEpfTtoYi5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gVGFwRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO1xuV2E9c2IuZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTtYYT1zYi5nZXRJbnN0YW5jZUZyb21Ob2RlO1lhPXNiLmdldE5vZGVGcm9tSW5zdGFuY2U7aGIuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpmZSxFbnRlckxlYXZlRXZlbnRQbHVnaW46aGQsQ2hhbmdlRXZlbnRQbHVnaW46YWQsU2VsZWN0RXZlbnRQbHVnaW46U2QsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjppY30pO3ZhciBnZT1bXSxoZT0tMTtmdW5jdGlvbiBWKGEpezA+aGV8fChhLmN1cnJlbnQ9Z2VbaGVdLGdlW2hlXT1udWxsLGhlLS0pfWZ1bmN0aW9uIFcoYSxiKXtoZSsrO2dlW2hlXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9bmV3IFNldDt2YXIgaWU9e2N1cnJlbnQ6RH0sWD17Y3VycmVudDohMX0samU9RDtmdW5jdGlvbiBrZShhKXtyZXR1cm4gbGUoYSk/amU6aWUuY3VycmVudH1cbmZ1bmN0aW9uIG1lKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gRDt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBsZShhKXtyZXR1cm4gMj09PWEudGFnJiZudWxsIT1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXN9ZnVuY3Rpb24gbmUoYSl7bGUoYSkmJihWKFgsYSksVihpZSxhKSl9XG5mdW5jdGlvbiBvZShhLGIsYyl7bnVsbCE9aWUuY3Vyc29yP0UoXCIxNjhcIik6dm9pZCAwO1coaWUsYixhKTtXKFgsYyxhKX1mdW5jdGlvbiBwZShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlLGQ9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldENoaWxkQ29udGV4dClyZXR1cm4gYjtjPWMuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGMpZSBpbiBkP3ZvaWQgMDpFKFwiMTA4XCIsamQoYSl8fFwiVW5rbm93blwiLGUpO3JldHVybiBCKHt9LGIsYyl9ZnVuY3Rpb24gcWUoYSl7aWYoIWxlKGEpKXJldHVybiExO3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8RDtqZT1pZS5jdXJyZW50O1coaWUsYixhKTtXKFgsWC5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gcmUoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtjP3ZvaWQgMDpFKFwiMTY5XCIpO2lmKGIpe3ZhciBkPXBlKGEsamUpO2MuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9ZDtWKFgsYSk7VihpZSxhKTtXKGllLGQsYSl9ZWxzZSBWKFgsYSk7VyhYLGIsYSl9XG5mdW5jdGlvbiBZKGEsYixjKXt0aGlzLnRhZz1hO3RoaXMua2V5PWI7dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPW51bGw7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpc1tcInJldHVyblwiXT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9dGhpcy5wZW5kaW5nUHJvcHM9dGhpcy5yZWY9bnVsbDt0aGlzLmludGVybmFsQ29udGV4dFRhZz1jO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9XG5mdW5jdGlvbiBzZShhLGIsYyl7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbD09PWQ/KGQ9bmV3IFkoYS50YWcsYS5rZXksYS5pbnRlcm5hbENvbnRleHRUYWcpLGQudHlwZT1hLnR5cGUsZC5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsZC5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1kKTooZC5lZmZlY3RUYWc9MCxkLm5leHRFZmZlY3Q9bnVsbCxkLmZpcnN0RWZmZWN0PW51bGwsZC5sYXN0RWZmZWN0PW51bGwpO2QuZXhwaXJhdGlvblRpbWU9YztkLnBlbmRpbmdQcm9wcz1iO2QuY2hpbGQ9YS5jaGlsZDtkLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2QubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZC51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2Quc2libGluZz1hLnNpYmxpbmc7ZC5pbmRleD1hLmluZGV4O2QucmVmPWEucmVmO3JldHVybiBkfVxuZnVuY3Rpb24gdGUoYSxiLGMpe3ZhciBkPXZvaWQgMCxlPWEudHlwZSxmPWEua2V5O1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlPyhkPWUucHJvdG90eXBlJiZlLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50P25ldyBZKDIsZixiKTpuZXcgWSgwLGYsYiksZC50eXBlPWUsZC5wZW5kaW5nUHJvcHM9YS5wcm9wcyk6XCJzdHJpbmdcIj09PXR5cGVvZiBlPyhkPW5ldyBZKDUsZixiKSxkLnR5cGU9ZSxkLnBlbmRpbmdQcm9wcz1hLnByb3BzKTpcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcIm51bWJlclwiPT09dHlwZW9mIGUudGFnPyhkPWUsZC5wZW5kaW5nUHJvcHM9YS5wcm9wcyk6RShcIjEzMFwiLG51bGw9PWU/ZTp0eXBlb2YgZSxcIlwiKTtkLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGR9ZnVuY3Rpb24gdWUoYSxiLGMsZCl7Yj1uZXcgWSgxMCxkLGIpO2IucGVuZGluZ1Byb3BzPWE7Yi5leHBpcmF0aW9uVGltZT1jO3JldHVybiBifVxuZnVuY3Rpb24gdmUoYSxiLGMpe2I9bmV3IFkoNixudWxsLGIpO2IucGVuZGluZ1Byb3BzPWE7Yi5leHBpcmF0aW9uVGltZT1jO3JldHVybiBifWZ1bmN0aW9uIHdlKGEsYixjKXtiPW5ldyBZKDcsYS5rZXksYik7Yi50eXBlPWEuaGFuZGxlcjtiLnBlbmRpbmdQcm9wcz1hO2IuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYn1mdW5jdGlvbiB4ZShhLGIsYyl7YT1uZXcgWSg5LG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIHllKGEsYixjKXtiPW5ldyBZKDQsYS5rZXksYik7Yi5wZW5kaW5nUHJvcHM9YS5jaGlsZHJlbnx8W107Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn12YXIgemU9bnVsbCxBZT1udWxsO1xuZnVuY3Rpb24gQmUoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1mdW5jdGlvbiBDZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTt6ZT1CZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7QWU9QmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1mdW5jdGlvbiBEZShhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgemUmJnplKGEpfWZ1bmN0aW9uIEVlKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBBZSYmQWUoYSl9XG5mdW5jdGlvbiBGZShhKXtyZXR1cm57YmFzZVN0YXRlOmEsZXhwaXJhdGlvblRpbWU6MCxmaXJzdDpudWxsLGxhc3Q6bnVsbCxjYWxsYmFja0xpc3Q6bnVsbCxoYXNGb3JjZVVwZGF0ZTohMSxpc0luaXRpYWxpemVkOiExfX1mdW5jdGlvbiBHZShhLGIpe251bGw9PT1hLmxhc3Q/YS5maXJzdD1hLmxhc3Q9YjooYS5sYXN0Lm5leHQ9YixhLmxhc3Q9Yik7aWYoMD09PWEuZXhwaXJhdGlvblRpbWV8fGEuZXhwaXJhdGlvblRpbWU+Yi5leHBpcmF0aW9uVGltZSlhLmV4cGlyYXRpb25UaW1lPWIuZXhwaXJhdGlvblRpbWV9XG5mdW5jdGlvbiBIZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS51cGRhdGVRdWV1ZTtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1GZShudWxsKSk7bnVsbCE9PWM/KGE9Yy51cGRhdGVRdWV1ZSxudWxsPT09YSYmKGE9Yy51cGRhdGVRdWV1ZT1GZShudWxsKSkpOmE9bnVsbDthPWEhPT1kP2E6bnVsbDtudWxsPT09YT9HZShkLGIpOm51bGw9PT1kLmxhc3R8fG51bGw9PT1hLmxhc3Q/KEdlKGQsYiksR2UoYSxiKSk6KEdlKGQsYiksYS5sYXN0PWIpfWZ1bmN0aW9uIEllKGEsYixjLGQpe2E9YS5wYXJ0aWFsU3RhdGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGIsYyxkKTphfVxuZnVuY3Rpb24gSmUoYSxiLGMsZCxlLGYpe251bGwhPT1hJiZhLnVwZGF0ZVF1ZXVlPT09YyYmKGM9Yi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmMuYmFzZVN0YXRlLGV4cGlyYXRpb25UaW1lOmMuZXhwaXJhdGlvblRpbWUsZmlyc3Q6Yy5maXJzdCxsYXN0OmMubGFzdCxpc0luaXRpYWxpemVkOmMuaXNJbml0aWFsaXplZCxjYWxsYmFja0xpc3Q6bnVsbCxoYXNGb3JjZVVwZGF0ZTohMX0pO2MuZXhwaXJhdGlvblRpbWU9MDtjLmlzSW5pdGlhbGl6ZWQ/YT1jLmJhc2VTdGF0ZTooYT1jLmJhc2VTdGF0ZT1iLm1lbW9pemVkU3RhdGUsYy5pc0luaXRpYWxpemVkPSEwKTtmb3IodmFyIGc9ITAsaD1jLmZpcnN0LGs9ITE7bnVsbCE9PWg7KXt2YXIgcT1oLmV4cGlyYXRpb25UaW1lO2lmKHE+Zil7dmFyIHY9Yy5leHBpcmF0aW9uVGltZTtpZigwPT09dnx8dj5xKWMuZXhwaXJhdGlvblRpbWU9cTtrfHwoaz0hMCxjLmJhc2VTdGF0ZT1hKX1lbHNle2t8fChjLmZpcnN0PWgubmV4dCxudWxsPT09XG5jLmZpcnN0JiYoYy5sYXN0PW51bGwpKTtpZihoLmlzUmVwbGFjZSlhPUllKGgsZCxhLGUpLGc9ITA7ZWxzZSBpZihxPUllKGgsZCxhLGUpKWE9Zz9CKHt9LGEscSk6QihhLHEpLGc9ITE7aC5pc0ZvcmNlZCYmKGMuaGFzRm9yY2VVcGRhdGU9ITApO251bGwhPT1oLmNhbGxiYWNrJiYocT1jLmNhbGxiYWNrTGlzdCxudWxsPT09cSYmKHE9Yy5jYWxsYmFja0xpc3Q9W10pLHEucHVzaChoKSl9aD1oLm5leHR9bnVsbCE9PWMuY2FsbGJhY2tMaXN0P2IuZWZmZWN0VGFnfD0zMjpudWxsIT09Yy5maXJzdHx8Yy5oYXNGb3JjZVVwZGF0ZXx8KGIudXBkYXRlUXVldWU9bnVsbCk7a3x8KGMuYmFzZVN0YXRlPWEpO3JldHVybiBhfVxuZnVuY3Rpb24gS2UoYSxiKXt2YXIgYz1hLmNhbGxiYWNrTGlzdDtpZihudWxsIT09Yylmb3IoYS5jYWxsYmFja0xpc3Q9bnVsbCxhPTA7YTxjLmxlbmd0aDthKyspe3ZhciBkPWNbYV0sZT1kLmNhbGxiYWNrO2QuY2FsbGJhY2s9bnVsbDtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZT9FKFwiMTkxXCIsZSk6dm9pZCAwO2UuY2FsbChiKX19XG5mdW5jdGlvbiBMZShhLGIsYyxkKXtmdW5jdGlvbiBlKGEsYil7Yi51cGRhdGVyPWY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YX12YXIgZj17aXNNb3VudGVkOmxkLGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihjLGQsZSl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7ZT12b2lkIDA9PT1lP251bGw6ZTt2YXIgZz1iKGMpO0hlKGMse2V4cGlyYXRpb25UaW1lOmcscGFydGlhbFN0YXRlOmQsY2FsbGJhY2s6ZSxpc1JlcGxhY2U6ITEsaXNGb3JjZWQ6ITEsbmV4dENhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7YShjLGcpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGMsZCxlKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtlPXZvaWQgMD09PWU/bnVsbDplO3ZhciBnPWIoYyk7SGUoYyx7ZXhwaXJhdGlvblRpbWU6ZyxwYXJ0aWFsU3RhdGU6ZCxjYWxsYmFjazplLGlzUmVwbGFjZTohMCxpc0ZvcmNlZDohMSxuZXh0Q2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9KTtcbmEoYyxnKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGMsZCl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZT1iKGMpO0hlKGMse2V4cGlyYXRpb25UaW1lOmUscGFydGlhbFN0YXRlOm51bGwsY2FsbGJhY2s6ZCxpc1JlcGxhY2U6ITEsaXNGb3JjZWQ6ITAsbmV4dENhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7YShjLGUpfX07cmV0dXJue2Fkb3B0Q2xhc3NJbnN0YW5jZTplLGNvbnN0cnVjdENsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnR5cGUsZD1rZShhKSxmPTI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNvbnRleHRUeXBlcyxnPWY/bWUoYSxkKTpEO2I9bmV3IGMoYixnKTtlKGEsYik7ZiYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWQsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1nKTtyZXR1cm4gYn0sbW91bnRDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsXG5iKXt2YXIgYz1hLmFsdGVybmF0ZSxkPWEuc3RhdGVOb2RlLGU9ZC5zdGF0ZXx8bnVsbCxnPWEucGVuZGluZ1Byb3BzO2c/dm9pZCAwOkUoXCIxNThcIik7dmFyIGg9a2UoYSk7ZC5wcm9wcz1nO2Quc3RhdGU9YS5tZW1vaXplZFN0YXRlPWU7ZC5yZWZzPUQ7ZC5jb250ZXh0PW1lKGEsaCk7bnVsbCE9YS50eXBlJiZudWxsIT1hLnR5cGUucHJvdG90eXBlJiYhMD09PWEudHlwZS5wcm90b3R5cGUudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50JiYoYS5pbnRlcm5hbENvbnRleHRUYWd8PTEpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudCYmKGU9ZC5zdGF0ZSxkLmNvbXBvbmVudFdpbGxNb3VudCgpLGUhPT1kLnN0YXRlJiZmLmVucXVldWVSZXBsYWNlU3RhdGUoZCxkLnN0YXRlLG51bGwpLGU9YS51cGRhdGVRdWV1ZSxudWxsIT09ZSYmKGQuc3RhdGU9SmUoYyxhLGUsZCxnLGIpKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9XG40KX0sdXBkYXRlQ2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLGIsZSl7dmFyIGc9Yi5zdGF0ZU5vZGU7Zy5wcm9wcz1iLm1lbW9pemVkUHJvcHM7Zy5zdGF0ZT1iLm1lbW9pemVkU3RhdGU7dmFyIGg9Yi5tZW1vaXplZFByb3BzLGs9Yi5wZW5kaW5nUHJvcHM7a3x8KGs9aCxudWxsPT1rP0UoXCIxNTlcIik6dm9pZCAwKTt2YXIgdT1nLmNvbnRleHQsej1rZShiKTt6PW1lKGIseik7XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8aD09PWsmJnU9PT16fHwodT1nLnN0YXRlLGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhrLHopLGcuc3RhdGUhPT11JiZmLmVucXVldWVSZXBsYWNlU3RhdGUoZyxnLnN0YXRlLG51bGwpKTt1PWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1iLnVwZGF0ZVF1ZXVlP0plKGEsYixiLnVwZGF0ZVF1ZXVlLGcsayxlKTp1O2lmKCEoaCE9PWt8fHUhPT1lfHxYLmN1cnJlbnR8fG51bGwhPT1iLnVwZGF0ZVF1ZXVlJiZiLnVwZGF0ZVF1ZXVlLmhhc0ZvcmNlVXBkYXRlKSlyZXR1cm5cImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmdT09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSwhMTt2YXIgRz1rO2lmKG51bGw9PT1ofHxudWxsIT09Yi51cGRhdGVRdWV1ZSYmYi51cGRhdGVRdWV1ZS5oYXNGb3JjZVVwZGF0ZSlHPSEwO2Vsc2V7dmFyIEk9Yi5zdGF0ZU5vZGUsTD1iLnR5cGU7Rz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgSS5zaG91bGRDb21wb25lbnRVcGRhdGU/SS5zaG91bGRDb21wb25lbnRVcGRhdGUoRyxlLHopOkwucHJvdG90eXBlJiZMLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZWEoaCxHKXx8IWVhKHUsZSk6ITB9Rz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGssZSx6KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fFxuaD09PWEubWVtb2l6ZWRQcm9wcyYmdT09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxjKGIsayksZChiLGUpKTtnLnByb3BzPWs7Zy5zdGF0ZT1lO2cuY29udGV4dD16O3JldHVybiBHfX19dmFyIFFlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXSxSZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFNlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmNhbGxcIik6NjAxMDQsVGU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucmV0dXJuXCIpOjYwMTA1LFVlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixWZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxXZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiBYZShhKXtpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO2E9V2UmJmFbV2VdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIFllPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBaZShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGwhPT1jJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl7aWYoYi5fb3duZXIpe2I9Yi5fb3duZXI7dmFyIGQ9dm9pZCAwO2ImJigyIT09Yi50YWc/RShcIjExMFwiKTp2b2lkIDAsZD1iLnN0YXRlTm9kZSk7ZD92b2lkIDA6RShcIjE0N1wiLGMpO3ZhciBlPVwiXCIrYztpZihudWxsIT09YSYmbnVsbCE9PWEucmVmJiZhLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYS5yZWY7YT1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM9PT1EP2QucmVmcz17fTpkLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTthLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYX1cInN0cmluZ1wiIT09dHlwZW9mIGM/RShcIjE0OFwiKTp2b2lkIDA7Yi5fb3duZXI/dm9pZCAwOkUoXCIxNDlcIixjKX1yZXR1cm4gY31cbmZ1bmN0aW9uICRlKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZFKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBhZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPXNlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9dmUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLGQpO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLnR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9WmUoYixjKSxkW1wicmV0dXJuXCJdPWEsZDtkPXRlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCk7ZC5yZWY9WmUoYixjKTtkW1wicmV0dXJuXCJdPWE7cmV0dXJuIGR9ZnVuY3Rpb24gcShhLGIsYyxkKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPXdlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYyxkKTtcbmJbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiB2KGEsYixjLGQpe2lmKG51bGw9PT1ifHw5IT09Yi50YWcpcmV0dXJuIGI9eGUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxiLnR5cGU9Yy52YWx1ZSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixudWxsLGQpO2IudHlwZT1jLnZhbHVlO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiB5KGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj15ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiB1KGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDEwIT09Yi50YWcpcmV0dXJuIGI9dWUoYyxhLmludGVybmFsQ29udGV4dFRhZyxcbmQsZiksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYyxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24geihhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9dmUoXCJcIitiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFJlOmlmKGIudHlwZT09PVZlKXJldHVybiBiPXVlKGIucHJvcHMuY2hpbGRyZW4sYS5pbnRlcm5hbENvbnRleHRUYWcsYyxiLmtleSksYltcInJldHVyblwiXT1hLGI7Yz10ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpO2MucmVmPVplKG51bGwsYik7Y1tcInJldHVyblwiXT1hO3JldHVybiBjO2Nhc2UgU2U6cmV0dXJuIGI9d2UoYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxiW1wicmV0dXJuXCJdPWEsYjtjYXNlIFRlOnJldHVybiBjPXhlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsXG5jKSxjLnR5cGU9Yi52YWx1ZSxjW1wicmV0dXJuXCJdPWEsYztjYXNlIFVlOnJldHVybiBiPXllKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGJ9aWYoWWUoYil8fFhlKGIpKXJldHVybiBiPXVlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyxudWxsKSxiW1wicmV0dXJuXCJdPWEsYjskZShhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIEcoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgUmU6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1WZT91KGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgU2U6cmV0dXJuIGMua2V5PT09ZT9xKGEsYixjLGQpOm51bGw7Y2FzZSBUZTpyZXR1cm4gbnVsbD09PVxuZT92KGEsYixjLGQpOm51bGw7Y2FzZSBVZTpyZXR1cm4gYy5rZXk9PT1lP3koYSxiLGMsZCk6bnVsbH1pZihZZShjKXx8WGUoYykpcmV0dXJuIG51bGwhPT1lP251bGw6dShhLGIsYyxkLG51bGwpOyRlKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBSZTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09VmU/dShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgU2U6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLHEoYixhLGQsZSk7Y2FzZSBUZTpyZXR1cm4gYT1hLmdldChjKXx8bnVsbCx2KGIsYSxkLGUpO2Nhc2UgVWU6cmV0dXJuIGE9XG5hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwseShiLGEsZCxlKX1pZihZZShkKXx8WGUoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsdShiLGEsZCxlLG51bGwpOyRlKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTChlLGcsbSxBKXtmb3IodmFyIGg9bnVsbCxyPW51bGwsbj1nLHc9Zz0wLGs9bnVsbDtudWxsIT09biYmdzxtLmxlbmd0aDt3Kyspe24uaW5kZXg+dz8oaz1uLG49bnVsbCk6az1uLnNpYmxpbmc7dmFyIHg9RyhlLG4sbVt3XSxBKTtpZihudWxsPT09eCl7bnVsbD09PW4mJihuPWspO2JyZWFrfWEmJm4mJm51bGw9PT14LmFsdGVybmF0ZSYmYihlLG4pO2c9Zih4LGcsdyk7bnVsbD09PXI/aD14OnIuc2libGluZz14O3I9eDtuPWt9aWYodz09PW0ubGVuZ3RoKXJldHVybiBjKGUsbiksaDtpZihudWxsPT09bil7Zm9yKDt3PG0ubGVuZ3RoO3crKylpZihuPXooZSxtW3ddLEEpKWc9ZihuLGcsdyksbnVsbD09PXI/aD1uOnIuc2libGluZz1uLHI9bjtyZXR1cm4gaH1mb3Iobj1cbmQoZSxuKTt3PG0ubGVuZ3RoO3crKylpZihrPUkobixlLHcsbVt3XSxBKSl7aWYoYSYmbnVsbCE9PWsuYWx0ZXJuYXRlKW5bXCJkZWxldGVcIl0obnVsbD09PWsua2V5P3c6ay5rZXkpO2c9ZihrLGcsdyk7bnVsbD09PXI/aD1rOnIuc2libGluZz1rO3I9a31hJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBofWZ1bmN0aW9uIE4oZSxnLG0sQSl7dmFyIGg9WGUobSk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGg/RShcIjE1MFwiKTp2b2lkIDA7bT1oLmNhbGwobSk7bnVsbD09bT9FKFwiMTUxXCIpOnZvaWQgMDtmb3IodmFyIHI9aD1udWxsLG49Zyx3PWc9MCxrPW51bGwseD1tLm5leHQoKTtudWxsIT09biYmIXguZG9uZTt3KysseD1tLm5leHQoKSl7bi5pbmRleD53PyhrPW4sbj1udWxsKTprPW4uc2libGluZzt2YXIgSj1HKGUsbix4LnZhbHVlLEEpO2lmKG51bGw9PT1KKXtufHwobj1rKTticmVha31hJiZuJiZudWxsPT09Si5hbHRlcm5hdGUmJmIoZSxuKTtnPWYoSixcbmcsdyk7bnVsbD09PXI/aD1KOnIuc2libGluZz1KO3I9SjtuPWt9aWYoeC5kb25lKXJldHVybiBjKGUsbiksaDtpZihudWxsPT09bil7Zm9yKDsheC5kb25lO3crKyx4PW0ubmV4dCgpKXg9eihlLHgudmFsdWUsQSksbnVsbCE9PXgmJihnPWYoeCxnLHcpLG51bGw9PT1yP2g9eDpyLnNpYmxpbmc9eCxyPXgpO3JldHVybiBofWZvcihuPWQoZSxuKTsheC5kb25lO3crKyx4PW0ubmV4dCgpKWlmKHg9SShuLGUsdyx4LnZhbHVlLEEpLG51bGwhPT14KXtpZihhJiZudWxsIT09eC5hbHRlcm5hdGUpbltcImRlbGV0ZVwiXShudWxsPT09eC5rZXk/dzp4LmtleSk7Zz1mKHgsZyx3KTtudWxsPT09cj9oPXg6ci5zaWJsaW5nPXg7cj14fWEmJm4uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGh9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PVZlJiZudWxsPT09Zi5rZXkmJihmPWYucHJvcHMuY2hpbGRyZW4pO1xudmFyIG09XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihtKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFJlOmE6e3ZhciByPWYua2V5O2ZvcihtPWQ7bnVsbCE9PW07KXtpZihtLmtleT09PXIpaWYoMTA9PT1tLnRhZz9mLnR5cGU9PT1WZTptLnR5cGU9PT1mLnR5cGUpe2MoYSxtLnNpYmxpbmcpO2Q9ZShtLGYudHlwZT09PVZlP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1aZShtLGYpO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxtKTticmVha31lbHNlIGIoYSxtKTttPW0uc2libGluZ31mLnR5cGU9PT1WZT8oZD11ZShmLnByb3BzLmNoaWxkcmVuLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgsZi5rZXkpLGRbXCJyZXR1cm5cIl09YSxhPWQpOihoPXRlKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCksaC5yZWY9WmUoZCxmKSxoW1wicmV0dXJuXCJdPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIFNlOmE6e2ZvcihtPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1cbm0paWYoNz09PWQudGFnKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLGgpO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPXdlKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCk7ZFtcInJldHVyblwiXT1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIFRlOmE6e2lmKG51bGwhPT1kKWlmKDk9PT1kLnRhZyl7YyhhLGQuc2libGluZyk7ZD1lKGQsbnVsbCxoKTtkLnR5cGU9Zi52YWx1ZTtkW1wicmV0dXJuXCJdPWE7YT1kO2JyZWFrIGF9ZWxzZSBjKGEsZCk7ZD14ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpO2QudHlwZT1mLnZhbHVlO2RbXCJyZXR1cm5cIl09YTthPWR9cmV0dXJuIGcoYSk7Y2FzZSBVZTphOntmb3IobT1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09bSlpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09XG5mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkW1wicmV0dXJuXCJdPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD15ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpO2RbXCJyZXR1cm5cIl09YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCkpOihjKGEsZCksZD12ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpKSxkW1wicmV0dXJuXCJdPWEsYT1kLGcoYSk7aWYoWWUoZikpcmV0dXJuIEwoYSxkLGYsaCk7aWYoWGUoZikpcmV0dXJuIE4oYSxkLGYsaCk7bSYmJGUoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYpc3dpdGNoKGEudGFnKXtjYXNlIDI6Y2FzZSAxOmg9YS50eXBlLEUoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxcbmgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIGJmPWFmKCEwKSxjZj1hZighMSk7XG5mdW5jdGlvbiBkZihhLGIsYyxkLGUpe2Z1bmN0aW9uIGYoYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7Yi5jaGlsZD1udWxsPT09YT9jZihiLG51bGwsYyxkKTpiZihiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBnKGEsYil7dmFyIGM9Yi5yZWY7bnVsbD09PWN8fGEmJmEucmVmPT09Y3x8KGIuZWZmZWN0VGFnfD0xMjgpfWZ1bmN0aW9uIGgoYSxiLGMsZCl7ZyhhLGIpO2lmKCFjKXJldHVybiBkJiZyZShiLCExKSxxKGEsYik7Yz1iLnN0YXRlTm9kZTtpZC5jdXJyZW50PWI7dmFyIGU9Yy5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtmKGEsYixlKTtiLm1lbW9pemVkU3RhdGU9Yy5zdGF0ZTtiLm1lbW9pemVkUHJvcHM9Yy5wcm9wcztkJiZyZShiLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBrKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/b2UoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmb2UoYSxcbmIuY29udGV4dCwhMSk7SShhLGIuY29udGFpbmVySW5mbyl9ZnVuY3Rpb24gcShhLGIpe251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD9FKFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO3ZhciBjPXNlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjW1wicmV0dXJuXCJdPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9c2UoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjW1wicmV0dXJuXCJdPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gdihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOmsoYik7YnJlYWs7Y2FzZSAyOnFlKGIpO2JyZWFrO2Nhc2UgNDpJKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyl9cmV0dXJuIG51bGx9dmFyIHk9YS5zaG91bGRTZXRUZXh0Q29udGVudCx1PWEudXNlU3luY1NjaGVkdWxpbmcsej1hLnNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWUsXG5HPWIucHVzaEhvc3RDb250ZXh0LEk9Yi5wdXNoSG9zdENvbnRhaW5lcixMPWMuZW50ZXJIeWRyYXRpb25TdGF0ZSxOPWMucmVzZXRIeWRyYXRpb25TdGF0ZSxKPWMudHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U7YT1MZShkLGUsZnVuY3Rpb24oYSxiKXthLm1lbW9pemVkUHJvcHM9Yn0sZnVuY3Rpb24oYSxiKXthLm1lbW9pemVkU3RhdGU9Yn0pO3ZhciB3PWEuYWRvcHRDbGFzc0luc3RhbmNlLG09YS5jb25zdHJ1Y3RDbGFzc0luc3RhbmNlLEE9YS5tb3VudENsYXNzSW5zdGFuY2UsT2I9YS51cGRhdGVDbGFzc0luc3RhbmNlO3JldHVybntiZWdpbldvcms6ZnVuY3Rpb24oYSxiLGMpe2lmKDA9PT1iLmV4cGlyYXRpb25UaW1lfHxiLmV4cGlyYXRpb25UaW1lPmMpcmV0dXJuIHYoYSxiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpudWxsIT09YT9FKFwiMTU1XCIpOnZvaWQgMDt2YXIgZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxyPWtlKGIpO3I9bWUoYixyKTtkPWQoZSxyKTtiLmVmZmVjdFRhZ3w9XG4xO1wib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnJlbmRlcj8oYi50YWc9MixlPXFlKGIpLHcoYixkKSxBKGIsYyksYj1oKGEsYiwhMCxlKSk6KGIudGFnPTEsZihhLGIsZCksYi5tZW1vaXplZFByb3BzPWUsYj1iLmNoaWxkKTtyZXR1cm4gYjtjYXNlIDE6YTp7ZT1iLnR5cGU7Yz1iLnBlbmRpbmdQcm9wcztkPWIubWVtb2l6ZWRQcm9wcztpZihYLmN1cnJlbnQpbnVsbD09PWMmJihjPWQpO2Vsc2UgaWYobnVsbD09PWN8fGQ9PT1jKXtiPXEoYSxiKTticmVhayBhfWQ9a2UoYik7ZD1tZShiLGQpO2U9ZShjLGQpO2IuZWZmZWN0VGFnfD0xO2YoYSxiLGUpO2IubWVtb2l6ZWRQcm9wcz1jO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDI6cmV0dXJuIGU9cWUoYiksZD12b2lkIDAsbnVsbD09PWE/Yi5zdGF0ZU5vZGU/RShcIjE1M1wiKToobShiLGIucGVuZGluZ1Byb3BzKSxBKGIsYyksZD0hMCk6ZD1PYihhLGIsYyksaChhLGIsZCxlKTtjYXNlIDM6cmV0dXJuIGsoYiksXG5lPWIudXBkYXRlUXVldWUsbnVsbCE9PWU/KGQ9Yi5tZW1vaXplZFN0YXRlLGU9SmUoYSxiLGUsbnVsbCxudWxsLGMpLGQ9PT1lPyhOKCksYj1xKGEsYikpOihkPWUuZWxlbWVudCxyPWIuc3RhdGVOb2RlLChudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpJiZyLmh5ZHJhdGUmJkwoYik/KGIuZWZmZWN0VGFnfD0yLGIuY2hpbGQ9Y2YoYixudWxsLGQsYykpOihOKCksZihhLGIsZCkpLGIubWVtb2l6ZWRTdGF0ZT1lLGI9Yi5jaGlsZCkpOihOKCksYj1xKGEsYikpLGI7Y2FzZSA1OkcoYik7bnVsbD09PWEmJkooYik7ZT1iLnR5cGU7dmFyIG49Yi5tZW1vaXplZFByb3BzO2Q9Yi5wZW5kaW5nUHJvcHM7bnVsbD09PWQmJihkPW4sbnVsbD09PWQ/RShcIjE1NFwiKTp2b2lkIDApO3I9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGw7WC5jdXJyZW50fHxudWxsIT09ZCYmbiE9PWQ/KG49ZC5jaGlsZHJlbix5KGUsZCk/bj1udWxsOnImJnkoZSxyKSYmKGIuZWZmZWN0VGFnfD0xNiksZyhhLGIpLFxuMjE0NzQ4MzY0NyE9PWMmJiF1JiZ6KGUsZCk/KGIuZXhwaXJhdGlvblRpbWU9MjE0NzQ4MzY0NyxiPW51bGwpOihmKGEsYixuKSxiLm1lbW9pemVkUHJvcHM9ZCxiPWIuY2hpbGQpKTpiPXEoYSxiKTtyZXR1cm4gYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZKKGIpLGE9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWEmJihhPWIubWVtb2l6ZWRQcm9wcyksYi5tZW1vaXplZFByb3BzPWEsbnVsbDtjYXNlIDg6Yi50YWc9NztjYXNlIDc6ZT1iLnBlbmRpbmdQcm9wcztpZihYLmN1cnJlbnQpbnVsbD09PWUmJihlPWEmJmEubWVtb2l6ZWRQcm9wcyxudWxsPT09ZT9FKFwiMTU0XCIpOnZvaWQgMCk7ZWxzZSBpZihudWxsPT09ZXx8Yi5tZW1vaXplZFByb3BzPT09ZSllPWIubWVtb2l6ZWRQcm9wcztkPWUuY2hpbGRyZW47Yi5zdGF0ZU5vZGU9bnVsbD09PWE/Y2YoYixiLnN0YXRlTm9kZSxkLGMpOmJmKGIsYi5zdGF0ZU5vZGUsZCxjKTtiLm1lbW9pemVkUHJvcHM9ZTtyZXR1cm4gYi5zdGF0ZU5vZGU7XG5jYXNlIDk6cmV0dXJuIG51bGw7Y2FzZSA0OmE6e0koYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtlPWIucGVuZGluZ1Byb3BzO2lmKFguY3VycmVudCludWxsPT09ZSYmKGU9YSYmYS5tZW1vaXplZFByb3BzLG51bGw9PWU/RShcIjE1NFwiKTp2b2lkIDApO2Vsc2UgaWYobnVsbD09PWV8fGIubWVtb2l6ZWRQcm9wcz09PWUpe2I9cShhLGIpO2JyZWFrIGF9bnVsbD09PWE/Yi5jaGlsZD1iZihiLG51bGwsZSxjKTpmKGEsYixlKTtiLm1lbW9pemVkUHJvcHM9ZTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSAxMDphOntjPWIucGVuZGluZ1Byb3BzO2lmKFguY3VycmVudCludWxsPT09YyYmKGM9Yi5tZW1vaXplZFByb3BzKTtlbHNlIGlmKG51bGw9PT1jfHxiLm1lbW9pemVkUHJvcHM9PT1jKXtiPXEoYSxiKTticmVhayBhfWYoYSxiLGMpO2IubWVtb2l6ZWRQcm9wcz1jO2I9Yi5jaGlsZH1yZXR1cm4gYjtkZWZhdWx0OkUoXCIxNTZcIil9fSxiZWdpbkZhaWxlZFdvcms6ZnVuY3Rpb24oYSxiLFxuYyl7c3dpdGNoKGIudGFnKXtjYXNlIDI6cWUoYik7YnJlYWs7Y2FzZSAzOmsoYik7YnJlYWs7ZGVmYXVsdDpFKFwiMTU3XCIpfWIuZWZmZWN0VGFnfD02NDtudWxsPT09YT9iLmNoaWxkPW51bGw6Yi5jaGlsZCE9PWEuY2hpbGQmJihiLmNoaWxkPWEuY2hpbGQpO2lmKDA9PT1iLmV4cGlyYXRpb25UaW1lfHxiLmV4cGlyYXRpb25UaW1lPmMpcmV0dXJuIHYoYSxiKTtiLmZpcnN0RWZmZWN0PW51bGw7Yi5sYXN0RWZmZWN0PW51bGw7Yi5jaGlsZD1udWxsPT09YT9jZihiLG51bGwsbnVsbCxjKTpiZihiLGEuY2hpbGQsbnVsbCxjKTsyPT09Yi50YWcmJihhPWIuc3RhdGVOb2RlLGIubWVtb2l6ZWRQcm9wcz1hLnByb3BzLGIubWVtb2l6ZWRTdGF0ZT1hLnN0YXRlKTtyZXR1cm4gYi5jaGlsZH19fVxuZnVuY3Rpb24gZWYoYSxiLGMpe2Z1bmN0aW9uIGQoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIGU9YS5jcmVhdGVJbnN0YW5jZSxmPWEuY3JlYXRlVGV4dEluc3RhbmNlLGc9YS5hcHBlbmRJbml0aWFsQ2hpbGQsaD1hLmZpbmFsaXplSW5pdGlhbENoaWxkcmVuLGs9YS5wcmVwYXJlVXBkYXRlLHE9YS5wZXJzaXN0ZW5jZSx2PWIuZ2V0Um9vdEhvc3RDb250YWluZXIseT1iLnBvcEhvc3RDb250ZXh0LHU9Yi5nZXRIb3N0Q29udGV4dCx6PWIucG9wSG9zdENvbnRhaW5lcixHPWMucHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZSxJPWMucHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2UsTD1jLnBvcEh5ZHJhdGlvblN0YXRlLE49dm9pZCAwLEo9dm9pZCAwLHc9dm9pZCAwO2EubXV0YXRpb24/KE49ZnVuY3Rpb24oKXt9LEo9ZnVuY3Rpb24oYSxiLGMpeyhiLnVwZGF0ZVF1ZXVlPWMpJiZkKGIpfSx3PWZ1bmN0aW9uKGEsYixjLGUpe2MhPT1lJiZkKGIpfSk6cT9FKFwiMjM1XCIpOkUoXCIyMzZcIik7XG5yZXR1cm57Y29tcGxldGVXb3JrOmZ1bmN0aW9uKGEsYixjKXt2YXIgbT1iLnBlbmRpbmdQcm9wcztpZihudWxsPT09bSltPWIubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDIxNDc0ODM2NDchPT1iLmV4cGlyYXRpb25UaW1lfHwyMTQ3NDgzNjQ3PT09YyliLnBlbmRpbmdQcm9wcz1udWxsO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBudWxsO2Nhc2UgMjpyZXR1cm4gbmUoYiksbnVsbDtjYXNlIDM6eihiKTtWKFgsYik7VihpZSxiKTttPWIuc3RhdGVOb2RlO20ucGVuZGluZ0NvbnRleHQmJihtLmNvbnRleHQ9bS5wZW5kaW5nQ29udGV4dCxtLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClMKGIpLGIuZWZmZWN0VGFnJj0tMztOKGIpO3JldHVybiBudWxsO2Nhc2UgNTp5KGIpO2M9digpO3ZhciBBPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpe3ZhciBwPWEubWVtb2l6ZWRQcm9wcyxxPWIuc3RhdGVOb2RlLHg9dSgpO3E9XG5rKHEsQSxwLG0sYyx4KTtKKGEsYixxLEEscCxtLGMpO2EucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNle2lmKCFtKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/RShcIjE2NlwiKTp2b2lkIDAsbnVsbDthPXUoKTtpZihMKGIpKUcoYixjLGEpJiZkKGIpO2Vsc2V7YT1lKEEsbSxjLGEsYik7YTpmb3IocD1iLmNoaWxkO251bGwhPT1wOyl7aWYoNT09PXAudGFnfHw2PT09cC50YWcpZyhhLHAuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1wLnRhZyYmbnVsbCE9PXAuY2hpbGQpe3AuY2hpbGRbXCJyZXR1cm5cIl09cDtwPXAuY2hpbGQ7Y29udGludWV9aWYocD09PWIpYnJlYWs7Zm9yKDtudWxsPT09cC5zaWJsaW5nOyl7aWYobnVsbD09PXBbXCJyZXR1cm5cIl18fHBbXCJyZXR1cm5cIl09PT1iKWJyZWFrIGE7cD1wW1wicmV0dXJuXCJdfXAuc2libGluZ1tcInJldHVyblwiXT1wW1wicmV0dXJuXCJdO3A9cC5zaWJsaW5nfWgoYSxBLG0sYykmJmQoYik7Yi5zdGF0ZU5vZGU9YX1udWxsIT09Yi5yZWYmJlxuKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSl3KGEsYixhLm1lbW9pemVkUHJvcHMsbSk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIG0pcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT9FKFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9digpO2M9dSgpO0woYik/SShiKSYmZChiKTpiLnN0YXRlTm9kZT1mKG0sYSxjLGIpfXJldHVybiBudWxsO2Nhc2UgNzoobT1iLm1lbW9pemVkUHJvcHMpP3ZvaWQgMDpFKFwiMTY1XCIpO2IudGFnPTg7QT1bXTthOmZvcigocD1iLnN0YXRlTm9kZSkmJihwW1wicmV0dXJuXCJdPWIpO251bGwhPT1wOyl7aWYoNT09PXAudGFnfHw2PT09cC50YWd8fDQ9PT1wLnRhZylFKFwiMjQ3XCIpO2Vsc2UgaWYoOT09PXAudGFnKUEucHVzaChwLnR5cGUpO2Vsc2UgaWYobnVsbCE9PXAuY2hpbGQpe3AuY2hpbGRbXCJyZXR1cm5cIl09cDtwPXAuY2hpbGQ7Y29udGludWV9Zm9yKDtudWxsPT09cC5zaWJsaW5nOyl7aWYobnVsbD09PVxucFtcInJldHVyblwiXXx8cFtcInJldHVyblwiXT09PWIpYnJlYWsgYTtwPXBbXCJyZXR1cm5cIl19cC5zaWJsaW5nW1wicmV0dXJuXCJdPXBbXCJyZXR1cm5cIl07cD1wLnNpYmxpbmd9cD1tLmhhbmRsZXI7bT1wKG0ucHJvcHMsQSk7Yi5jaGlsZD1iZihiLG51bGwhPT1hP2EuY2hpbGQ6bnVsbCxtLGMpO3JldHVybiBiLmNoaWxkO2Nhc2UgODpyZXR1cm4gYi50YWc9NyxudWxsO2Nhc2UgOTpyZXR1cm4gbnVsbDtjYXNlIDEwOnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4geihiKSxOKGIpLG51bGw7Y2FzZSAwOkUoXCIxNjdcIik7ZGVmYXVsdDpFKFwiMTU2XCIpfX19fVxuZnVuY3Rpb24gZmYoYSxiKXtmdW5jdGlvbiBjKGEpe3ZhciBjPWEucmVmO2lmKG51bGwhPT1jKXRyeXtjKG51bGwpfWNhdGNoKEEpe2IoYSxBKX19ZnVuY3Rpb24gZChhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgRWUmJkVlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAyOmMoYSk7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2QucHJvcHM9YS5tZW1vaXplZFByb3BzLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChBKXtiKGEsQSl9YnJlYWs7Y2FzZSA1OmMoYSk7YnJlYWs7Y2FzZSA3OmUoYS5zdGF0ZU5vZGUpO2JyZWFrO2Nhc2UgNDprJiZnKGEpfX1mdW5jdGlvbiBlKGEpe2Zvcih2YXIgYj1hOzspaWYoZChiKSxudWxsPT09Yi5jaGlsZHx8ayYmND09PWIudGFnKXtpZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09YltcInJldHVyblwiXXx8XG5iW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Yj1iW1wicmV0dXJuXCJdfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfWVsc2UgYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZH1mdW5jdGlvbiBmKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfWZ1bmN0aW9uIGcoYSl7Zm9yKHZhciBiPWEsYz0hMSxmPXZvaWQgMCxnPXZvaWQgMDs7KXtpZighYyl7Yz1iW1wicmV0dXJuXCJdO2E6Zm9yKDs7KXtudWxsPT09Yz9FKFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpmPWMuc3RhdGVOb2RlO2c9ITE7YnJlYWsgYTtjYXNlIDM6Zj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1jPWNbXCJyZXR1cm5cIl19Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyllKGIpLGc/SihmLGIuc3RhdGVOb2RlKTpOKGYsYi5zdGF0ZU5vZGUpO1xuZWxzZSBpZig0PT09Yi50YWc/Zj1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOmQoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGRbXCJyZXR1cm5cIl09YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybjtiPWJbXCJyZXR1cm5cIl07ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXZhciBoPWEuZ2V0UHVibGljSW5zdGFuY2Usaz1hLm11dGF0aW9uO2E9YS5wZXJzaXN0ZW5jZTtrfHwoYT9FKFwiMjM1XCIpOkUoXCIyMzZcIikpO3ZhciBxPWsuY29tbWl0TW91bnQsdj1rLmNvbW1pdFVwZGF0ZSx5PWsucmVzZXRUZXh0Q29udGVudCx1PWsuY29tbWl0VGV4dFVwZGF0ZSx6PWsuYXBwZW5kQ2hpbGQsRz1rLmFwcGVuZENoaWxkVG9Db250YWluZXIsST1rLmluc2VydEJlZm9yZSxMPWsuaW5zZXJ0SW5Db250YWluZXJCZWZvcmUsXG5OPWsucmVtb3ZlQ2hpbGQsSj1rLnJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lcjtyZXR1cm57Y29tbWl0UmVzZXRUZXh0Q29udGVudDpmdW5jdGlvbihhKXt5KGEuc3RhdGVOb2RlKX0sY29tbWl0UGxhY2VtZW50OmZ1bmN0aW9uKGEpe2E6e2Zvcih2YXIgYj1hW1wicmV0dXJuXCJdO251bGwhPT1iOyl7aWYoZihiKSl7dmFyIGM9YjticmVhayBhfWI9YltcInJldHVyblwiXX1FKFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6RShcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKHkoYiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWNbXCJyZXR1cm5cIl18fGYoY1tcInJldHVyblwiXSkpe2M9XG5udWxsO2JyZWFrIGF9Yz1jW1wicmV0dXJuXCJdfWMuc2libGluZ1tcInJldHVyblwiXT1jW1wicmV0dXJuXCJdO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkW1wicmV0dXJuXCJdPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpYz9kP0woYixlLnN0YXRlTm9kZSxjKTpJKGIsZS5zdGF0ZU5vZGUsYyk6ZD9HKGIsZS5zdGF0ZU5vZGUpOnooYixlLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkW1wicmV0dXJuXCJdPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lW1wicmV0dXJuXCJdfHxlW1wicmV0dXJuXCJdPT09XG5hKXJldHVybjtlPWVbXCJyZXR1cm5cIl19ZS5zaWJsaW5nW1wicmV0dXJuXCJdPWVbXCJyZXR1cm5cIl07ZT1lLnNpYmxpbmd9fSxjb21taXREZWxldGlvbjpmdW5jdGlvbihhKXtnKGEpO2FbXCJyZXR1cm5cIl09bnVsbDthLmNoaWxkPW51bGw7YS5hbHRlcm5hdGUmJihhLmFsdGVybmF0ZS5jaGlsZD1udWxsLGEuYWx0ZXJuYXRlW1wicmV0dXJuXCJdPW51bGwpfSxjb21taXRXb3JrOmZ1bmN0aW9uKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZ2KGMsZixlLGEsZCxiKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP0UoXCIxNjJcIik6dm9pZCAwO2M9Yi5tZW1vaXplZFByb3BzO3UoYi5zdGF0ZU5vZGUsbnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxuYyxjKTticmVhaztjYXNlIDM6YnJlYWs7ZGVmYXVsdDpFKFwiMTYzXCIpfX0sY29tbWl0TGlmZUN5Y2xlczpmdW5jdGlvbihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAyOnZhciBjPWIuc3RhdGVOb2RlO2lmKGIuZWZmZWN0VGFnJjQpaWYobnVsbD09PWEpYy5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYy5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYy5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9YS5tZW1vaXplZFByb3BzO2E9YS5tZW1vaXplZFN0YXRlO2MucHJvcHM9Yi5tZW1vaXplZFByb3BzO2Muc3RhdGU9Yi5tZW1vaXplZFN0YXRlO2MuY29tcG9uZW50RGlkVXBkYXRlKGQsYSl9Yj1iLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZLZShiLGMpO2JyZWFrO2Nhc2UgMzpjPWIudXBkYXRlUXVldWU7bnVsbCE9PWMmJktlKGMsbnVsbCE9PWIuY2hpbGQ/Yi5jaGlsZC5zdGF0ZU5vZGU6bnVsbCk7YnJlYWs7Y2FzZSA1OmM9Yi5zdGF0ZU5vZGU7bnVsbD09PWEmJmIuZWZmZWN0VGFnJjQmJnEoYyxcbmIudHlwZSxiLm1lbW9pemVkUHJvcHMsYik7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztkZWZhdWx0OkUoXCIxNjNcIil9fSxjb21taXRBdHRhY2hSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpe3ZhciBjPWEuc3RhdGVOb2RlO3N3aXRjaChhLnRhZyl7Y2FzZSA1OmIoaChjKSk7YnJlYWs7ZGVmYXVsdDpiKGMpfX19LGNvbW1pdERldGFjaFJlZjpmdW5jdGlvbihhKXthPWEucmVmO251bGwhPT1hJiZhKG51bGwpfX19dmFyIGdmPXt9O1xuZnVuY3Rpb24gaGYoYSl7ZnVuY3Rpb24gYihhKXthPT09Z2Y/RShcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9dmFyIGM9YS5nZXRDaGlsZEhvc3RDb250ZXh0LGQ9YS5nZXRSb290SG9zdENvbnRleHQsZT17Y3VycmVudDpnZn0sZj17Y3VycmVudDpnZn0sZz17Y3VycmVudDpnZn07cmV0dXJue2dldEhvc3RDb250ZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIGIoZS5jdXJyZW50KX0sZ2V0Um9vdEhvc3RDb250YWluZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYihnLmN1cnJlbnQpfSxwb3BIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKGEpe1YoZSxhKTtWKGYsYSk7VihnLGEpfSxwb3BIb3N0Q29udGV4dDpmdW5jdGlvbihhKXtmLmN1cnJlbnQ9PT1hJiYoVihlLGEpLFYoZixhKSl9LHB1c2hIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKGEsYil7VyhnLGIsYSk7Yj1kKGIpO1coZixhLGEpO1coZSxiLGEpfSxwdXNoSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7dmFyIGQ9YihnLmN1cnJlbnQpLGg9YihlLmN1cnJlbnQpO1xuZD1jKGgsYS50eXBlLGQpO2ghPT1kJiYoVyhmLGEsYSksVyhlLGQsYSkpfSxyZXNldEhvc3RDb250YWluZXI6ZnVuY3Rpb24oKXtlLmN1cnJlbnQ9Z2Y7Zy5jdXJyZW50PWdmfX19XG5mdW5jdGlvbiBqZihhKXtmdW5jdGlvbiBiKGEsYil7dmFyIGM9bmV3IFkoNSxudWxsLDApO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2NbXCJyZXR1cm5cIl09YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gYyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBiPWYoYixhLnR5cGUsYS5wZW5kaW5nUHJvcHMpLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9ZyhiLGEucGVuZGluZ1Byb3BzKSxudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gZChhKXtmb3IoYT1hW1wicmV0dXJuXCJdO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZzspYT1hW1wicmV0dXJuXCJdO3k9YX12YXIgZT1hLnNob3VsZFNldFRleHRDb250ZW50O1xuYT1hLmh5ZHJhdGlvbjtpZighYSlyZXR1cm57ZW50ZXJIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3JldHVybiExfSxyZXNldEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7fSx0cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbigpe30scHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZTpmdW5jdGlvbigpe0UoXCIxNzVcIil9LHByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7RShcIjE3NlwiKX0scG9wSHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4hMX19O3ZhciBmPWEuY2FuSHlkcmF0ZUluc3RhbmNlLGc9YS5jYW5IeWRyYXRlVGV4dEluc3RhbmNlLGg9YS5nZXROZXh0SHlkcmF0YWJsZVNpYmxpbmcsaz1hLmdldEZpcnN0SHlkcmF0YWJsZUNoaWxkLHE9YS5oeWRyYXRlSW5zdGFuY2Usdj1hLmh5ZHJhdGVUZXh0SW5zdGFuY2UseT1udWxsLHU9bnVsbCx6PSExO3JldHVybntlbnRlckh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKGEpe3U9XG5rKGEuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3k9YTtyZXR1cm4gej0hMH0scmVzZXRIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3U9eT1udWxsO3o9ITF9LHRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKGEpe2lmKHope3ZhciBkPXU7aWYoZCl7aWYoIWMoYSxkKSl7ZD1oKGQpO2lmKCFkfHwhYyhhLGQpKXthLmVmZmVjdFRhZ3w9Mjt6PSExO3k9YTtyZXR1cm59Yih5LHUpfXk9YTt1PWsoZCl9ZWxzZSBhLmVmZmVjdFRhZ3w9Mix6PSExLHk9YX19LHByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMpe2I9cShhLnN0YXRlTm9kZSxhLnR5cGUsYS5tZW1vaXplZFByb3BzLGIsYyxhKTthLnVwZGF0ZVF1ZXVlPWI7cmV0dXJuIG51bGwhPT1iPyEwOiExfSxwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gdihhLnN0YXRlTm9kZSxhLm1lbW9pemVkUHJvcHMsYSl9LHBvcEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKGEpe2lmKGEhPT1cbnkpcmV0dXJuITE7aWYoIXopcmV0dXJuIGQoYSksej0hMCwhMTt2YXIgYz1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWMmJlwiYm9keVwiIT09YyYmIWUoYyxhLm1lbW9pemVkUHJvcHMpKWZvcihjPXU7YzspYihhLGMpLGM9aChjKTtkKGEpO3U9eT9oKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfX19XG5mdW5jdGlvbiBrZihhKXtmdW5jdGlvbiBiKGEpe1FiPWphPSEwO3ZhciBiPWEuc3RhdGVOb2RlO2IuY3VycmVudD09PWE/RShcIjE3N1wiKTp2b2lkIDA7Yi5pc1JlYWR5Rm9yQ29tbWl0PSExO2lkLmN1cnJlbnQ9bnVsbDtpZigxPGEuZWZmZWN0VGFnKWlmKG51bGwhPT1hLmxhc3RFZmZlY3Qpe2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE7dmFyIGM9YS5maXJzdEVmZmVjdH1lbHNlIGM9YTtlbHNlIGM9YS5maXJzdEVmZmVjdDt5ZygpO2Zvcih0PWM7bnVsbCE9PXQ7KXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09dDspe3ZhciBmPXQuZWZmZWN0VGFnO2YmMTYmJnpnKHQpO2lmKGYmMTI4KXt2YXIgZz10LmFsdGVybmF0ZTtudWxsIT09ZyYmQWcoZyl9c3dpdGNoKGYmLTI0Mil7Y2FzZSAyOk5lKHQpO3QuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6TmUodCk7dC5lZmZlY3RUYWcmPS0zO09lKHQuYWx0ZXJuYXRlLHQpO2JyZWFrO2Nhc2UgNDpPZSh0LmFsdGVybmF0ZSxcbnQpO2JyZWFrO2Nhc2UgODpTYz0hMCxCZyh0KSxTYz0hMX10PXQubmV4dEVmZmVjdH19Y2F0Y2goVGMpe2Q9ITAsZT1UY31kJiYobnVsbD09PXQ/RShcIjE3OFwiKTp2b2lkIDAsaCh0LGUpLG51bGwhPT10JiYodD10Lm5leHRFZmZlY3QpKX1DZygpO2IuY3VycmVudD1hO2Zvcih0PWM7bnVsbCE9PXQ7KXtjPSExO2Q9dm9pZCAwO3RyeXtmb3IoO251bGwhPT10Oyl7dmFyIGs9dC5lZmZlY3RUYWc7ayYzNiYmRGcodC5hbHRlcm5hdGUsdCk7ayYxMjgmJkVnKHQpO2lmKGsmNjQpc3dpdGNoKGU9dCxmPXZvaWQgMCxudWxsIT09UiYmKGY9Ui5nZXQoZSksUltcImRlbGV0ZVwiXShlKSxudWxsPT1mJiZudWxsIT09ZS5hbHRlcm5hdGUmJihlPWUuYWx0ZXJuYXRlLGY9Ui5nZXQoZSksUltcImRlbGV0ZVwiXShlKSkpLG51bGw9PWY/RShcIjE4NFwiKTp2b2lkIDAsZS50YWcpe2Nhc2UgMjplLnN0YXRlTm9kZS5jb21wb25lbnREaWRDYXRjaChmLmVycm9yLHtjb21wb25lbnRTdGFjazpmLmNvbXBvbmVudFN0YWNrfSk7XG5icmVhaztjYXNlIDM6bnVsbD09PWNhJiYoY2E9Zi5lcnJvcik7YnJlYWs7ZGVmYXVsdDpFKFwiMTU3XCIpfXZhciBRYz10Lm5leHRFZmZlY3Q7dC5uZXh0RWZmZWN0PW51bGw7dD1RY319Y2F0Y2goVGMpe2M9ITAsZD1UY31jJiYobnVsbD09PXQ/RShcIjE3OFwiKTp2b2lkIDAsaCh0LGQpLG51bGwhPT10JiYodD10Lm5leHRFZmZlY3QpKX1qYT1RYj0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgRGUmJkRlKGEuc3RhdGVOb2RlKTtoYSYmKGhhLmZvckVhY2goRyksaGE9bnVsbCk7bnVsbCE9PWNhJiYoYT1jYSxjYT1udWxsLE9iKGEpKTtiPWIuY3VycmVudC5leHBpcmF0aW9uVGltZTswPT09YiYmKHFhPVI9bnVsbCk7cmV0dXJuIGJ9ZnVuY3Rpb24gYyhhKXtmb3IoOzspe3ZhciBiPUZnKGEuYWx0ZXJuYXRlLGEsSCksYz1hW1wicmV0dXJuXCJdLGQ9YS5zaWJsaW5nO3ZhciBlPWE7aWYoMjE0NzQ4MzY0Nz09PUh8fDIxNDc0ODM2NDchPT1lLmV4cGlyYXRpb25UaW1lKXtpZigyIT09ZS50YWcmJjMhPT1cbmUudGFnKXZhciBmPTA7ZWxzZSBmPWUudXBkYXRlUXVldWUsZj1udWxsPT09Zj8wOmYuZXhwaXJhdGlvblRpbWU7Zm9yKHZhciBnPWUuY2hpbGQ7bnVsbCE9PWc7KTAhPT1nLmV4cGlyYXRpb25UaW1lJiYoMD09PWZ8fGY+Zy5leHBpcmF0aW9uVGltZSkmJihmPWcuZXhwaXJhdGlvblRpbWUpLGc9Zy5zaWJsaW5nO2UuZXhwaXJhdGlvblRpbWU9Zn1pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YyYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSk7aWYobnVsbCE9PWQpcmV0dXJuIGQ7XG5pZihudWxsIT09YylhPWM7ZWxzZXthLnN0YXRlTm9kZS5pc1JlYWR5Rm9yQ29tbWl0PSEwO2JyZWFrfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEpe3ZhciBiPXJnKGEuYWx0ZXJuYXRlLGEsSCk7bnVsbD09PWImJihiPWMoYSkpO2lkLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1mdW5jdGlvbiBlKGEpe3ZhciBiPUdnKGEuYWx0ZXJuYXRlLGEsSCk7bnVsbD09PWImJihiPWMoYSkpO2lkLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1mdW5jdGlvbiBmKGEpe2lmKG51bGwhPT1SKXtpZighKDA9PT1IfHxIPmEpKWlmKEg8PVVjKWZvcig7bnVsbCE9PUY7KUY9ayhGKT9lKEYpOmQoRik7ZWxzZSBmb3IoO251bGwhPT1GJiYhQSgpOylGPWsoRik/ZShGKTpkKEYpfWVsc2UgaWYoISgwPT09SHx8SD5hKSlpZihIPD1VYylmb3IoO251bGwhPT1GOylGPWQoRik7ZWxzZSBmb3IoO251bGwhPT1GJiYhQSgpOylGPWQoRil9ZnVuY3Rpb24gZyhhLGIpe2phP0UoXCIyNDNcIik6dm9pZCAwO2phPSEwO2EuaXNSZWFkeUZvckNvbW1pdD1cbiExO2lmKGEhPT1yYXx8YiE9PUh8fG51bGw9PT1GKXtmb3IoOy0xPGhlOylnZVtoZV09bnVsbCxoZS0tO2plPUQ7aWUuY3VycmVudD1EO1guY3VycmVudD0hMTt4KCk7cmE9YTtIPWI7Rj1zZShyYS5jdXJyZW50LG51bGwsYil9dmFyIGM9ITEsZD1udWxsO3RyeXtmKGIpfWNhdGNoKFJjKXtjPSEwLGQ9UmN9Zm9yKDtjOyl7aWYoZWIpe2NhPWQ7YnJlYWt9dmFyIGc9RjtpZihudWxsPT09ZyllYj0hMDtlbHNle3ZhciBrPWgoZyxkKTtudWxsPT09az9FKFwiMTgzXCIpOnZvaWQgMDtpZighZWIpe3RyeXtjPWs7ZD1iO2ZvcihrPWM7bnVsbCE9PWc7KXtzd2l0Y2goZy50YWcpe2Nhc2UgMjpuZShnKTticmVhaztjYXNlIDU6cWcoZyk7YnJlYWs7Y2FzZSAzOnAoZyk7YnJlYWs7Y2FzZSA0OnAoZyl9aWYoZz09PWt8fGcuYWx0ZXJuYXRlPT09aylicmVhaztnPWdbXCJyZXR1cm5cIl19Rj1lKGMpO2YoZCl9Y2F0Y2goUmMpe2M9ITA7ZD1SYztjb250aW51ZX1icmVha319fWI9Y2E7ZWI9amE9ITE7Y2E9XG5udWxsO251bGwhPT1iJiZPYihiKTtyZXR1cm4gYS5pc1JlYWR5Rm9yQ29tbWl0P2EuY3VycmVudC5hbHRlcm5hdGU6bnVsbH1mdW5jdGlvbiBoKGEsYil7dmFyIGM9aWQuY3VycmVudD1udWxsLGQ9ITEsZT0hMSxmPW51bGw7aWYoMz09PWEudGFnKWM9YSxxKGEpJiYoZWI9ITApO2Vsc2UgZm9yKHZhciBnPWFbXCJyZXR1cm5cIl07bnVsbCE9PWcmJm51bGw9PT1jOyl7Mj09PWcudGFnP1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnLnN0YXRlTm9kZS5jb21wb25lbnREaWRDYXRjaCYmKGQ9ITAsZj1qZChnKSxjPWcsZT0hMCk6Mz09PWcudGFnJiYoYz1nKTtpZihxKGcpKXtpZihTY3x8bnVsbCE9PWhhJiYoaGEuaGFzKGcpfHxudWxsIT09Zy5hbHRlcm5hdGUmJmhhLmhhcyhnLmFsdGVybmF0ZSkpKXJldHVybiBudWxsO2M9bnVsbDtlPSExfWc9Z1tcInJldHVyblwiXX1pZihudWxsIT09Yyl7bnVsbD09PXFhJiYocWE9bmV3IFNldCk7cWEuYWRkKGMpO3ZhciBoPVwiXCI7Zz1hO2Rve2E6c3dpdGNoKGcudGFnKXtjYXNlIDA6Y2FzZSAxOmNhc2UgMjpjYXNlIDU6dmFyIGs9XG5nLl9kZWJ1Z093bmVyLFFjPWcuX2RlYnVnU291cmNlO3ZhciBtPWpkKGcpO3ZhciBuPW51bGw7ayYmKG49amQoaykpO2s9UWM7bT1cIlxcbiAgICBpbiBcIisobXx8XCJVbmtub3duXCIpKyhrP1wiIChhdCBcIitrLmZpbGVOYW1lLnJlcGxhY2UoL14uKltcXFxcXFwvXS8sXCJcIikrXCI6XCIray5saW5lTnVtYmVyK1wiKVwiOm4/XCIgKGNyZWF0ZWQgYnkgXCIrbitcIilcIjpcIlwiKTticmVhayBhO2RlZmF1bHQ6bT1cIlwifWgrPW07Zz1nW1wicmV0dXJuXCJdfXdoaWxlKGcpO2c9aDthPWpkKGEpO251bGw9PT1SJiYoUj1uZXcgTWFwKTtiPXtjb21wb25lbnROYW1lOmEsY29tcG9uZW50U3RhY2s6ZyxlcnJvcjpiLGVycm9yQm91bmRhcnk6ZD9jLnN0YXRlTm9kZTpudWxsLGVycm9yQm91bmRhcnlGb3VuZDpkLGVycm9yQm91bmRhcnlOYW1lOmYsd2lsbFJldHJ5OmV9O1Iuc2V0KGMsYik7dHJ5e3ZhciBwPWIuZXJyb3I7cCYmcC5zdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nfHxjb25zb2xlLmVycm9yKHApfWNhdGNoKFZjKXtWYyYmXG5WYy5zdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nfHxjb25zb2xlLmVycm9yKFZjKX1RYj8obnVsbD09PWhhJiYoaGE9bmV3IFNldCksaGEuYWRkKGMpKTpHKGMpO3JldHVybiBjfW51bGw9PT1jYSYmKGNhPWIpO3JldHVybiBudWxsfWZ1bmN0aW9uIGsoYSl7cmV0dXJuIG51bGwhPT1SJiYoUi5oYXMoYSl8fG51bGwhPT1hLmFsdGVybmF0ZSYmUi5oYXMoYS5hbHRlcm5hdGUpKX1mdW5jdGlvbiBxKGEpe3JldHVybiBudWxsIT09cWEmJihxYS5oYXMoYSl8fG51bGwhPT1hLmFsdGVybmF0ZSYmcWEuaGFzKGEuYWx0ZXJuYXRlKSl9ZnVuY3Rpb24gdigpe3JldHVybiAyMCooKChJKCkrMTAwKS8yMHwwKSsxKX1mdW5jdGlvbiB5KGEpe3JldHVybiAwIT09a2E/a2E6amE/UWI/MTpIOiFIZ3x8YS5pbnRlcm5hbENvbnRleHRUYWcmMT92KCk6MX1mdW5jdGlvbiB1KGEsYil7cmV0dXJuIHooYSxiLCExKX1mdW5jdGlvbiB6KGEsYil7Zm9yKDtudWxsIT09YTspe2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxcbmEuZXhwaXJhdGlvblRpbWU+YilhLmV4cGlyYXRpb25UaW1lPWI7bnVsbCE9PWEuYWx0ZXJuYXRlJiYoMD09PWEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lfHxhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT5iKSYmKGEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1hW1wicmV0dXJuXCJdKWlmKDM9PT1hLnRhZyl7dmFyIGM9YS5zdGF0ZU5vZGU7IWphJiZjPT09cmEmJmI8SCYmKEY9cmE9bnVsbCxIPTApO3ZhciBkPWMsZT1iO1JiPklnJiZFKFwiMTg1XCIpO2lmKG51bGw9PT1kLm5leHRTY2hlZHVsZWRSb290KWQucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9ZSxudWxsPT09Tz8oc2E9Tz1kLGQubmV4dFNjaGVkdWxlZFJvb3Q9ZCk6KE89Ty5uZXh0U2NoZWR1bGVkUm9vdD1kLE8ubmV4dFNjaGVkdWxlZFJvb3Q9c2EpO2Vsc2V7dmFyIGY9ZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09Znx8ZTxmKWQucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9ZX1GYXx8KGxhP1xuU2ImJihtYT1kLG5hPTEsbShtYSxuYSkpOjE9PT1lP3coMSxudWxsKTpMKGUpKTshamEmJmM9PT1yYSYmYjxIJiYoRj1yYT1udWxsLEg9MCl9ZWxzZSBicmVhazthPWFbXCJyZXR1cm5cIl19fWZ1bmN0aW9uIEcoYSl7eihhLDEsITApfWZ1bmN0aW9uIEkoKXtyZXR1cm4gVWM9KChXYygpLVBlKS8xMHwwKSsyfWZ1bmN0aW9uIEwoYSl7aWYoMCE9PVRiKXtpZihhPlRiKXJldHVybjtKZyhYYyl9dmFyIGI9V2MoKS1QZTtUYj1hO1hjPUtnKEose3RpbWVvdXQ6MTAqKGEtMiktYn0pfWZ1bmN0aW9uIE4oKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Tylmb3IodmFyIGM9TyxkPXNhO251bGwhPT1kOyl7dmFyIGU9ZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1PP0UoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtzYT1PPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1zYSlzYT1lPWQubmV4dFNjaGVkdWxlZFJvb3QsXG5PLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PU8pe089YztPLm5leHRTY2hlZHVsZWRSb290PXNhO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7aWYoMD09PWF8fGU8YSlhPWUsYj1kO2lmKGQ9PT1PKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fWM9bWE7bnVsbCE9PWMmJmM9PT1iP1JiKys6UmI9MDttYT1iO25hPWF9ZnVuY3Rpb24gSihhKXt3KDAsYSl9ZnVuY3Rpb24gdyhhLGIpe2ZiPWI7Zm9yKE4oKTtudWxsIT09bWEmJjAhPT1uYSYmKDA9PT1hfHxuYTw9YSkmJiFZYzspbShtYSxuYSksTigpO251bGwhPT1mYiYmKFRiPTAsWGM9LTEpOzAhPT1uYSYmTChuYSk7ZmI9bnVsbDtZYz0hMTtSYj0wO2lmKFViKXRocm93IGE9WmMsWmM9XG5udWxsLFViPSExLGE7fWZ1bmN0aW9uIG0oYSxjKXtGYT9FKFwiMjQ1XCIpOnZvaWQgMDtGYT0hMDtpZihjPD1JKCkpe3ZhciBkPWEuZmluaXNoZWRXb3JrO251bGwhPT1kPyhhLmZpbmlzaGVkV29yaz1udWxsLGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YihkKSk6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1nKGEsYyksbnVsbCE9PWQmJihhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpKX1lbHNlIGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQ/KGEuZmluaXNoZWRXb3JrPW51bGwsYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWcoYSxjKSxudWxsIT09ZCYmKEEoKT9hLmZpbmlzaGVkV29yaz1kOmEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YihkKSkpO0ZhPSExfWZ1bmN0aW9uIEEoKXtyZXR1cm4gbnVsbD09PWZifHxmYi50aW1lUmVtYWluaW5nKCk+TGc/ITE6WWM9ITB9ZnVuY3Rpb24gT2IoYSl7bnVsbD09PW1hP0UoXCIyNDZcIik6XG52b2lkIDA7bWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9MDtVYnx8KFViPSEwLFpjPWEpfXZhciByPWhmKGEpLG49amYoYSkscD1yLnBvcEhvc3RDb250YWluZXIscWc9ci5wb3BIb3N0Q29udGV4dCx4PXIucmVzZXRIb3N0Q29udGFpbmVyLE1lPWRmKGEscixuLHUseSkscmc9TWUuYmVnaW5Xb3JrLEdnPU1lLmJlZ2luRmFpbGVkV29yayxGZz1lZihhLHIsbikuY29tcGxldGVXb3JrO3I9ZmYoYSxoKTt2YXIgemc9ci5jb21taXRSZXNldFRleHRDb250ZW50LE5lPXIuY29tbWl0UGxhY2VtZW50LEJnPXIuY29tbWl0RGVsZXRpb24sT2U9ci5jb21taXRXb3JrLERnPXIuY29tbWl0TGlmZUN5Y2xlcyxFZz1yLmNvbW1pdEF0dGFjaFJlZixBZz1yLmNvbW1pdERldGFjaFJlZixXYz1hLm5vdyxLZz1hLnNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjayxKZz1hLmNhbmNlbERlZmVycmVkQ2FsbGJhY2ssSGc9YS51c2VTeW5jU2NoZWR1bGluZyx5Zz1hLnByZXBhcmVGb3JDb21taXQsQ2c9YS5yZXNldEFmdGVyQ29tbWl0LFxuUGU9V2MoKSxVYz0yLGthPTAsamE9ITEsRj1udWxsLHJhPW51bGwsSD0wLHQ9bnVsbCxSPW51bGwscWE9bnVsbCxoYT1udWxsLGNhPW51bGwsZWI9ITEsUWI9ITEsU2M9ITEsc2E9bnVsbCxPPW51bGwsVGI9MCxYYz0tMSxGYT0hMSxtYT1udWxsLG5hPTAsWWM9ITEsVWI9ITEsWmM9bnVsbCxmYj1udWxsLGxhPSExLFNiPSExLElnPTFFMyxSYj0wLExnPTE7cmV0dXJue2NvbXB1dGVBc3luY0V4cGlyYXRpb246dixjb21wdXRlRXhwaXJhdGlvbkZvckZpYmVyOnksc2NoZWR1bGVXb3JrOnUsYmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1sYTtsYT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsobGE9Yyl8fEZhfHx3KDEsbnVsbCl9fSx1bmJhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEpe2lmKGxhJiYhU2Ipe1NiPSEwO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7U2I9ITF9fXJldHVybiBhKCl9LGZsdXNoU3luYzpmdW5jdGlvbihhKXt2YXIgYj1sYTtsYT0hMDt0cnl7YTp7dmFyIGM9XG5rYTtrYT0xO3RyeXt2YXIgZD1hKCk7YnJlYWsgYX1maW5hbGx5e2thPWN9ZD12b2lkIDB9cmV0dXJuIGR9ZmluYWxseXtsYT1iLEZhP0UoXCIxODdcIik6dm9pZCAwLHcoMSxudWxsKX19LGRlZmVycmVkVXBkYXRlczpmdW5jdGlvbihhKXt2YXIgYj1rYTtrYT12KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtrYT1ifX19fVxuZnVuY3Rpb24gbGYoYSl7ZnVuY3Rpb24gYihhKXthPW9kKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfXZhciBjPWEuZ2V0UHVibGljSW5zdGFuY2U7YT1rZihhKTt2YXIgZD1hLmNvbXB1dGVBc3luY0V4cGlyYXRpb24sZT1hLmNvbXB1dGVFeHBpcmF0aW9uRm9yRmliZXIsZj1hLnNjaGVkdWxlV29yaztyZXR1cm57Y3JlYXRlQ29udGFpbmVyOmZ1bmN0aW9uKGEsYil7dmFyIGM9bmV3IFkoMyxudWxsLDApO2E9e2N1cnJlbnQ6Yyxjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscmVtYWluaW5nRXhwaXJhdGlvblRpbWU6MCxpc1JlYWR5Rm9yQ29tbWl0OiExLGZpbmlzaGVkV29yazpudWxsLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YixuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTtyZXR1cm4gYy5zdGF0ZU5vZGU9YX0sdXBkYXRlQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLHEpe3ZhciBnPWIuY3VycmVudDtpZihjKXtjPVxuYy5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBoO2I6ezI9PT1rZChjKSYmMj09PWMudGFnP3ZvaWQgMDpFKFwiMTcwXCIpO2ZvcihoPWM7MyE9PWgudGFnOyl7aWYobGUoaCkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn0oaD1oW1wicmV0dXJuXCJdKT92b2lkIDA6RShcIjE3MVwiKX1oPWguc3RhdGVOb2RlLmNvbnRleHR9Yz1sZShjKT9wZShjLGgpOmh9ZWxzZSBjPUQ7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1xO2I9dm9pZCAwPT09Yj9udWxsOmI7cT1udWxsIT1hJiZudWxsIT1hLnR5cGUmJm51bGwhPWEudHlwZS5wcm90b3R5cGUmJiEwPT09YS50eXBlLnByb3RvdHlwZS51bnN0YWJsZV9pc0FzeW5jUmVhY3RDb21wb25lbnQ/ZCgpOmUoZyk7SGUoZyx7ZXhwaXJhdGlvblRpbWU6cSxwYXJ0aWFsU3RhdGU6e2VsZW1lbnQ6YX0sY2FsbGJhY2s6Yixpc1JlcGxhY2U6ITEsaXNGb3JjZWQ6ITEsXG5uZXh0Q2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9KTtmKGcscSl9LGJhdGNoZWRVcGRhdGVzOmEuYmF0Y2hlZFVwZGF0ZXMsdW5iYXRjaGVkVXBkYXRlczphLnVuYmF0Y2hlZFVwZGF0ZXMsZGVmZXJyZWRVcGRhdGVzOmEuZGVmZXJyZWRVcGRhdGVzLGZsdXNoU3luYzphLmZsdXNoU3luYyxnZXRQdWJsaWNSb290SW5zdGFuY2U6ZnVuY3Rpb24oYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGMoYS5jaGlsZC5zdGF0ZU5vZGUpO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX0sZmluZEhvc3RJbnN0YW5jZTpiLGZpbmRIb3N0SW5zdGFuY2VXaXRoTm9Qb3J0YWxzOmZ1bmN0aW9uKGEpe2E9cGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGluamVjdEludG9EZXZUb29sczpmdW5jdGlvbihhKXt2YXIgYz1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBDZShCKHt9LFxuYSx7ZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIGIoYSl9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBjP2MoYSk6bnVsbH19KSl9fX12YXIgbWY9T2JqZWN0LmZyZWV6ZSh7ZGVmYXVsdDpsZn0pLG5mPW1mJiZsZnx8bWYsb2Y9bmZbXCJkZWZhdWx0XCJdP25mW1wiZGVmYXVsdFwiXTpuZjtmdW5jdGlvbiBwZihhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOlVlLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fXZhciBxZj1cIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93LHJmPXZvaWQgMDtyZj1xZj9mdW5jdGlvbigpe3JldHVybiBwZXJmb3JtYW5jZS5ub3coKX06ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKX07XG52YXIgc2Y9dm9pZCAwLHRmPXZvaWQgMDtcbmlmKGwuY2FuVXNlRE9NKWlmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiByZXF1ZXN0SWRsZUNhbGxiYWNrfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgY2FuY2VsSWRsZUNhbGxiYWNrKXt2YXIgdWY9bnVsbCx2Zj0hMSx3Zj0tMSx4Zj0hMSx5Zj0wLHpmPTMzLEFmPTMzLEJmO0JmPXFmP3tkaWRUaW1lb3V0OiExLHRpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXt2YXIgYT15Zi1wZXJmb3JtYW5jZS5ub3coKTtyZXR1cm4gMDxhP2E6MH19OntkaWRUaW1lb3V0OiExLHRpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXt2YXIgYT15Zi1EYXRlLm5vdygpO3JldHVybiAwPGE/YTowfX07dmFyIENmPVwiX19yZWFjdElkbGVDYWxsYmFjayRcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixmdW5jdGlvbihhKXtpZihhLnNvdXJjZT09PXdpbmRvdyYmYS5kYXRhPT09Q2Ype3ZmPSExO2E9cmYoKTtpZigwPj15Zi1hKWlmKC0xIT09d2YmJndmPD1cbmEpQmYuZGlkVGltZW91dD0hMDtlbHNle3hmfHwoeGY9ITAscmVxdWVzdEFuaW1hdGlvbkZyYW1lKERmKSk7cmV0dXJufWVsc2UgQmYuZGlkVGltZW91dD0hMTt3Zj0tMTthPXVmO3VmPW51bGw7bnVsbCE9PWEmJmEoQmYpfX0sITEpO3ZhciBEZj1mdW5jdGlvbihhKXt4Zj0hMTt2YXIgYj1hLXlmK0FmO2I8QWYmJnpmPEFmPyg4PmImJihiPTgpLEFmPWI8emY/emY6Yik6emY9Yjt5Zj1hK0FmO3ZmfHwodmY9ITAsd2luZG93LnBvc3RNZXNzYWdlKENmLFwiKlwiKSl9O3NmPWZ1bmN0aW9uKGEsYil7dWY9YTtudWxsIT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCYmKHdmPXJmKCkrYi50aW1lb3V0KTt4Znx8KHhmPSEwLHJlcXVlc3RBbmltYXRpb25GcmFtZShEZikpO3JldHVybiAwfTt0Zj1mdW5jdGlvbigpe3VmPW51bGw7dmY9ITE7d2Y9LTF9fWVsc2Ugc2Y9d2luZG93LnJlcXVlc3RJZGxlQ2FsbGJhY2ssdGY9d2luZG93LmNhbmNlbElkbGVDYWxsYmFjaztlbHNlIHNmPWZ1bmN0aW9uKGEpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YSh7dGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3JldHVybiBJbmZpbml0eX19KX0pfSxcbnRmPWZ1bmN0aW9uKGEpe2NsZWFyVGltZW91dChhKX07dmFyIEVmPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxGZj17fSxHZj17fTtcbmZ1bmN0aW9uIEhmKGEpe2lmKEdmLmhhc093blByb3BlcnR5KGEpKXJldHVybiEwO2lmKEZmLmhhc093blByb3BlcnR5KGEpKXJldHVybiExO2lmKEVmLnRlc3QoYSkpcmV0dXJuIEdmW2FdPSEwO0ZmW2FdPSEwO3JldHVybiExfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPXdhKGIpO2lmKGQmJnZhKGIsYykpe3ZhciBlPWQubXV0YXRpb25NZXRob2Q7ZT9lKGEsYyk6bnVsbD09Y3x8ZC5oYXNCb29sZWFuVmFsdWUmJiFjfHxkLmhhc051bWVyaWNWYWx1ZSYmaXNOYU4oYyl8fGQuaGFzUG9zaXRpdmVOdW1lcmljVmFsdWUmJjE+Y3x8ZC5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlJiYhMT09PWM/SmYoYSxiKTpkLm11c3RVc2VQcm9wZXJ0eT9hW2QucHJvcGVydHlOYW1lXT1jOihiPWQuYXR0cmlidXRlTmFtZSwoZT1kLmF0dHJpYnV0ZU5hbWVzcGFjZSk/YS5zZXRBdHRyaWJ1dGVOUyhlLGIsXCJcIitjKTpkLmhhc0Jvb2xlYW5WYWx1ZXx8ZC5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlJiYhMD09PWM/YS5zZXRBdHRyaWJ1dGUoYixcIlwiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpfWVsc2UgS2YoYSxiLHZhKGIsYyk/YzpudWxsKX1cbmZ1bmN0aW9uIEtmKGEsYixjKXtIZihiKSYmKG51bGw9PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKX1mdW5jdGlvbiBKZihhLGIpe3ZhciBjPXdhKGIpO2M/KGI9Yy5tdXRhdGlvbk1ldGhvZCk/YihhLHZvaWQgMCk6Yy5tdXN0VXNlUHJvcGVydHk/YVtjLnByb3BlcnR5TmFtZV09Yy5oYXNCb29sZWFuVmFsdWU/ITE6XCJcIjphLnJlbW92ZUF0dHJpYnV0ZShjLmF0dHJpYnV0ZU5hbWUpOmEucmVtb3ZlQXR0cmlidXRlKGIpfVxuZnVuY3Rpb24gTGYoYSxiKXt2YXIgYz1iLnZhbHVlLGQ9Yi5jaGVja2VkO3JldHVybiBCKHt0eXBlOnZvaWQgMCxzdGVwOnZvaWQgMCxtaW46dm9pZCAwLG1heDp2b2lkIDB9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlLGNoZWNrZWQ6bnVsbCE9ZD9kOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIE1mKGEsYil7dmFyIGM9Yi5kZWZhdWx0VmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpudWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQsaW5pdGlhbFZhbHVlOm51bGwhPWIudmFsdWU/Yi52YWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fVxuZnVuY3Rpb24gTmYoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZJZihhLFwiY2hlY2tlZFwiLGIpfWZ1bmN0aW9uIE9mKGEsYil7TmYoYSxiKTt2YXIgYz1iLnZhbHVlO2lmKG51bGwhPWMpaWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlKWEudmFsdWU9XCIwXCI7ZWxzZSBpZihcIm51bWJlclwiPT09Yi50eXBlKXtpZihiPXBhcnNlRmxvYXQoYS52YWx1ZSl8fDAsYyE9Ynx8Yz09YiYmYS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBudWxsPT1iLnZhbHVlJiZudWxsIT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1cIlwiK2IuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitiLmRlZmF1bHRWYWx1ZSksbnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gUGYoYSxiKXtzd2l0Y2goYi50eXBlKXtjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7Y2FzZSBcImNvbG9yXCI6Y2FzZSBcImRhdGVcIjpjYXNlIFwiZGF0ZXRpbWVcIjpjYXNlIFwiZGF0ZXRpbWUtbG9jYWxcIjpjYXNlIFwibW9udGhcIjpjYXNlIFwidGltZVwiOmNhc2UgXCJ3ZWVrXCI6YS52YWx1ZT1cIlwiO2EudmFsdWU9YS5kZWZhdWx0VmFsdWU7YnJlYWs7ZGVmYXVsdDphLnZhbHVlPWEudmFsdWV9Yj1hLm5hbWU7XCJcIiE9PWImJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO1wiXCIhPT1iJiYoYS5uYW1lPWIpfWZ1bmN0aW9uIFFmKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGw9PWF8fFwic3RyaW5nXCIhPT10eXBlb2YgYSYmXCJudW1iZXJcIiE9PXR5cGVvZiBhfHwoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFJmKGEsYil7YT1CKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9UWYoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIFNmKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitjO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBUZihhLGIpe3ZhciBjPWIudmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6bnVsbCE9Yz9jOmIuZGVmYXVsdFZhbHVlLHdhc011bHRpcGxlOiEhYi5tdWx0aXBsZX19ZnVuY3Rpb24gVWYoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP0UoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIEIoe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gVmYoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz9FKFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6RShcIjkzXCIpLGI9YlswXSksYz1cIlwiK2IpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpcIlwiK2N9fVxuZnVuY3Rpb24gV2YoYSxiKXt2YXIgYz1iLnZhbHVlO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1iLmRlZmF1bHRWYWx1ZSl9ZnVuY3Rpb24gWGYoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIFlmPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIFpmKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gJGYoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP1pmKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIGFnPXZvaWQgMCxiZz1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1ZZi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXthZz1hZ3x8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTthZy5pbm5lckhUTUw9XCJcXHgzY3N2Z1xceDNlXCIrYitcIlxceDNjL3N2Z1xceDNlXCI7Zm9yKGI9YWcuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gY2coYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBkZz17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLFxuc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxlZz1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoZGcpLmZvckVhY2goZnVuY3Rpb24oYSl7ZWcuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtkZ1tiXT1kZ1thXX0pfSk7XG5mdW5jdGlvbiBmZyhhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIik7dmFyIGU9Yzt2YXIgZj1iW2NdO2U9bnVsbD09Znx8XCJib29sZWFuXCI9PT10eXBlb2YgZnx8XCJcIj09PWY/XCJcIjpkfHxcIm51bWJlclwiIT09dHlwZW9mIGZ8fDA9PT1mfHxkZy5oYXNPd25Qcm9wZXJ0eShlKSYmZGdbZV0/KFwiXCIrZikudHJpbSgpOmYrXCJweFwiO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgZ2c9Qih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIGhnKGEsYixjKXtiJiYoZ2dbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP0UoXCIxMzdcIixhLGMoKSk6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj9FKFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOkUoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP0UoXCI2MlwiLGMoKSk6dm9pZCAwKX1cbmZ1bmN0aW9uIGlnKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgamc9WWYuaHRtbCxrZz1DLnRoYXRSZXR1cm5zKFwiXCIpO1xuZnVuY3Rpb24gbGcoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SGQoYSk7Yj1TYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtjLmhhc093blByb3BlcnR5KGUpJiZjW2VdfHwoXCJ0b3BTY3JvbGxcIj09PWU/d2QoXCJ0b3BTY3JvbGxcIixcInNjcm9sbFwiLGEpOlwidG9wRm9jdXNcIj09PWV8fFwidG9wQmx1clwiPT09ZT8od2QoXCJ0b3BGb2N1c1wiLFwiZm9jdXNcIixhKSx3ZChcInRvcEJsdXJcIixcImJsdXJcIixhKSxjLnRvcEJsdXI9ITAsYy50b3BGb2N1cz0hMCk6XCJ0b3BDYW5jZWxcIj09PWU/KHljKFwiY2FuY2VsXCIsITApJiZ3ZChcInRvcENhbmNlbFwiLFwiY2FuY2VsXCIsYSksYy50b3BDYW5jZWw9ITApOlwidG9wQ2xvc2VcIj09PWU/KHljKFwiY2xvc2VcIiwhMCkmJndkKFwidG9wQ2xvc2VcIixcImNsb3NlXCIsYSksYy50b3BDbG9zZT0hMCk6RGQuaGFzT3duUHJvcGVydHkoZSkmJlUoZSxEZFtlXSxhKSxjW2VdPSEwKX19XG52YXIgbWc9e3RvcEFib3J0OlwiYWJvcnRcIix0b3BDYW5QbGF5OlwiY2FucGxheVwiLHRvcENhblBsYXlUaHJvdWdoOlwiY2FucGxheXRocm91Z2hcIix0b3BEdXJhdGlvbkNoYW5nZTpcImR1cmF0aW9uY2hhbmdlXCIsdG9wRW1wdGllZDpcImVtcHRpZWRcIix0b3BFbmNyeXB0ZWQ6XCJlbmNyeXB0ZWRcIix0b3BFbmRlZDpcImVuZGVkXCIsdG9wRXJyb3I6XCJlcnJvclwiLHRvcExvYWRlZERhdGE6XCJsb2FkZWRkYXRhXCIsdG9wTG9hZGVkTWV0YWRhdGE6XCJsb2FkZWRtZXRhZGF0YVwiLHRvcExvYWRTdGFydDpcImxvYWRzdGFydFwiLHRvcFBhdXNlOlwicGF1c2VcIix0b3BQbGF5OlwicGxheVwiLHRvcFBsYXlpbmc6XCJwbGF5aW5nXCIsdG9wUHJvZ3Jlc3M6XCJwcm9ncmVzc1wiLHRvcFJhdGVDaGFuZ2U6XCJyYXRlY2hhbmdlXCIsdG9wU2Vla2VkOlwic2Vla2VkXCIsdG9wU2Vla2luZzpcInNlZWtpbmdcIix0b3BTdGFsbGVkOlwic3RhbGxlZFwiLHRvcFN1c3BlbmQ6XCJzdXNwZW5kXCIsdG9wVGltZVVwZGF0ZTpcInRpbWV1cGRhdGVcIix0b3BWb2x1bWVDaGFuZ2U6XCJ2b2x1bWVjaGFuZ2VcIixcbnRvcFdhaXRpbmc6XCJ3YWl0aW5nXCJ9O2Z1bmN0aW9uIG5nKGEsYixjLGQpe2M9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7ZD09PWpnJiYoZD1aZihhKSk7ZD09PWpnP1wic2NyaXB0XCI9PT1hPyhhPWMuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIlxceDNjc2NyaXB0XFx4M2VcXHgzYy9zY3JpcHRcXHgzZVwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTphPVwic3RyaW5nXCI9PT10eXBlb2YgYi5pcz9jLmNyZWF0ZUVsZW1lbnQoYSx7aXM6Yi5pc30pOmMuY3JlYXRlRWxlbWVudChhKTphPWMuY3JlYXRlRWxlbWVudE5TKGQsYSk7cmV0dXJuIGF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm4oOT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGEpfVxuZnVuY3Rpb24gcGcoYSxiLGMsZCl7dmFyIGU9aWcoYixjKTtzd2l0Y2goYil7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpVKFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO3ZhciBmPWM7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGYgaW4gbWcpbWcuaGFzT3duUHJvcGVydHkoZikmJlUoZixtZ1tmXSxhKTtmPWM7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOlUoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOlUoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTtVKFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZm9ybVwiOlUoXCJ0b3BSZXNldFwiLFwicmVzZXRcIixhKTtVKFwidG9wU3VibWl0XCIsXCJzdWJtaXRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpVKFwidG9wVG9nZ2xlXCIsXCJ0b2dnbGVcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6TWYoYSxjKTtmPUxmKGEsYyk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtcbmxnKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1SZihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpUZihhLGMpO2Y9Qih7fSxjLHt2YWx1ZTp2b2lkIDB9KTtVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO2xnKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWZihhLGMpO2Y9VWYoYSxjKTtVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO2xnKGQsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0OmY9Y31oZyhiLGYsa2cpO3ZhciBnPWYsaDtmb3IoaCBpbiBnKWlmKGcuaGFzT3duUHJvcGVydHkoaCkpe3ZhciBrPWdbaF07XCJzdHlsZVwiPT09aD9mZyhhLGssa2cpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmYmcoYSxrKSk6XCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWJ8fFwiXCIhPT1rKSYmY2coYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmNnKGEsXG5cIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihSYS5oYXNPd25Qcm9wZXJ0eShoKT9udWxsIT1rJiZsZyhkLGgpOmU/S2YoYSxoLGspOm51bGwhPWsmJklmKGEsaCxrKSl9c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkJjKGEpO1BmKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6QmMoYSk7WGYoYSxjKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9Yy52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGMudmFsdWUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhYy5tdWx0aXBsZTtiPWMudmFsdWU7bnVsbCE9Yj9TZihhLCEhYy5tdWx0aXBsZSxiLCExKTpudWxsIT1jLmRlZmF1bHRWYWx1ZSYmU2YoYSwhIWMubXVsdGlwbGUsYy5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGEub25jbGljaz1cbkMpfX1cbmZ1bmN0aW9uIHNnKGEsYixjLGQsZSl7dmFyIGY9bnVsbDtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Yz1MZihhLGMpO2Q9TGYoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpjPVJmKGEsYyk7ZD1SZihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmM9Qih7fSxjLHt2YWx1ZTp2b2lkIDB9KTtkPUIoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjPVVmKGEsYyk7ZD1VZihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPUMpfWhnKGIsZCxrZyk7dmFyIGcsaDthPW51bGw7Zm9yKGcgaW4gYylpZighZC5oYXNPd25Qcm9wZXJ0eShnKSYmYy5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9Y1tnXSlpZihcInN0eWxlXCI9PT1nKWZvcihoIGluIGI9Y1tnXSxiKWIuaGFzT3duUHJvcGVydHkoaCkmJihhfHwoYT17fSksYVtoXT1cblwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1nJiZcImNoaWxkcmVuXCIhPT1nJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWcmJlwiYXV0b0ZvY3VzXCIhPT1nJiYoUmEuaGFzT3duUHJvcGVydHkoZyk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGcsbnVsbCkpO2ZvcihnIGluIGQpe3ZhciBrPWRbZ107Yj1udWxsIT1jP2NbZ106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoZykmJmshPT1iJiYobnVsbCE9a3x8bnVsbCE9YikpaWYoXCJzdHlsZVwiPT09ZylpZihiKXtmb3IoaCBpbiBiKSFiLmhhc093blByb3BlcnR5KGgpfHxrJiZrLmhhc093blByb3BlcnR5KGgpfHwoYXx8KGE9e30pLGFbaF09XCJcIik7Zm9yKGggaW4gaylrLmhhc093blByb3BlcnR5KGgpJiZiW2hdIT09a1toXSYmKGF8fChhPXt9KSxhW2hdPWtbaF0pfWVsc2UgYXx8KGZ8fChmPVtdKSxmLnB1c2goZyxhKSksYT1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1cbmc/KGs9az9rLl9faHRtbDp2b2lkIDAsYj1iP2IuX19odG1sOnZvaWQgMCxudWxsIT1rJiZiIT09ayYmKGY9Znx8W10pLnB1c2goZyxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1nP2I9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2goZyxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1nJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZyYmKFJhLmhhc093blByb3BlcnR5KGcpPyhudWxsIT1rJiZsZyhlLGcpLGZ8fGI9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGcsaykpfWEmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixhKTtyZXR1cm4gZn1cbmZ1bmN0aW9uIHRnKGEsYixjLGQsZSl7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJk5mKGEsZSk7aWcoYyxkKTtkPWlnKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/ZmcoYSxoLGtnKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP2JnKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9jZyhhLGgpOmQ/bnVsbCE9aD9LZihhLGcsaCk6YS5yZW1vdmVBdHRyaWJ1dGUoZyk6bnVsbCE9aD9JZihhLGcsaCk6SmYoYSxnKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6T2YoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpXZihhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlPXZvaWQgMCxiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP1NmKGEsXG4hIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP1NmKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLCEwKTpTZihhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19XG5mdW5jdGlvbiB1ZyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOlUoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKHZhciBmIGluIG1nKW1nLmhhc093blByb3BlcnR5KGYpJiZVKGYsbWdbZl0sYSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOlUoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO1UoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpVKFwidG9wUmVzZXRcIixcInJlc2V0XCIsYSk7VShcInRvcFN1Ym1pdFwiLFwic3VibWl0XCIsYSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpVKFwidG9wVG9nZ2xlXCIsXCJ0b2dnbGVcIixhKTticmVhaztjYXNlIFwiaW5wdXRcIjpNZihhLGMpO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpUZihhLGMpO1xuVShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmYoYSxjKSxVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpLGxnKGUsXCJvbkNoYW5nZVwiKX1oZyhiLGMsa2cpO2Q9bnVsbDtmb3IodmFyIGcgaW4gYyljLmhhc093blByb3BlcnR5KGcpJiYoZj1jW2ddLFwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBmP2EudGV4dENvbnRlbnQhPT1mJiYoZD1bXCJjaGlsZHJlblwiLGZdKTpcIm51bWJlclwiPT09dHlwZW9mIGYmJmEudGV4dENvbnRlbnQhPT1cIlwiK2YmJihkPVtcImNoaWxkcmVuXCIsXCJcIitmXSk6UmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWYmJmxnKGUsZykpO3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpCYyhhKTtQZihhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkJjKGEpO1hmKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLm9uQ2xpY2smJlxuKGEub25jbGljaz1DKX1yZXR1cm4gZH1mdW5jdGlvbiB2ZyhhLGIpe3JldHVybiBhLm5vZGVWYWx1ZSE9PWJ9XG52YXIgd2c9T2JqZWN0LmZyZWV6ZSh7Y3JlYXRlRWxlbWVudDpuZyxjcmVhdGVUZXh0Tm9kZTpvZyxzZXRJbml0aWFsUHJvcGVydGllczpwZyxkaWZmUHJvcGVydGllczpzZyx1cGRhdGVQcm9wZXJ0aWVzOnRnLGRpZmZIeWRyYXRlZFByb3BlcnRpZXM6dWcsZGlmZkh5ZHJhdGVkVGV4dDp2Zyx3YXJuRm9yVW5tYXRjaGVkVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQ6ZnVuY3Rpb24oKXt9LHJlc3RvcmVDb250cm9sbGVkU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpPZihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9XG5jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lXFx4M2RcIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGVcXHgzZFwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPXJiKGQpO2U/dm9pZCAwOkUoXCI5MFwiKTtDYyhkKTtPZihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6V2YoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJlNmKGEsISFjLm11bHRpcGxlLGIsITEpfX19KTtuYy5pbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50KHdnKTt2YXIgeGc9bnVsbCxNZz1udWxsO2Z1bmN0aW9uIE5nKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cbmZ1bmN0aW9uIE9nKGEpe2E9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbDtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZXx8IWEuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpfVxudmFyIFo9b2Yoe2dldFJvb3RIb3N0Q29udGV4dDpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVUeXBlO3N3aXRjaChiKXtjYXNlIDk6Y2FzZSAxMTphPShhPWEuZG9jdW1lbnRFbGVtZW50KT9hLm5hbWVzcGFjZVVSSTokZihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yj04PT09Yj9hLnBhcmVudE5vZGU6YSxhPWIubmFtZXNwYWNlVVJJfHxudWxsLGI9Yi50YWdOYW1lLGE9JGYoYSxiKX1yZXR1cm4gYX0sZ2V0Q2hpbGRIb3N0Q29udGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiAkZihhLGIpfSxnZXRQdWJsaWNJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYX0scHJlcGFyZUZvckNvbW1pdDpmdW5jdGlvbigpe3hnPXRkO3ZhciBhPWRhKCk7aWYoS2QoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGI9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e3ZhciBjPXdpbmRvdy5nZXRTZWxlY3Rpb24mJndpbmRvdy5nZXRTZWxlY3Rpb24oKTtcbmlmKGMmJjAhPT1jLnJhbmdlQ291bnQpe2I9Yy5hbmNob3JOb2RlO3ZhciBkPWMuYW5jaG9yT2Zmc2V0LGU9Yy5mb2N1c05vZGU7Yz1jLmZvY3VzT2Zmc2V0O3RyeXtiLm5vZGVUeXBlLGUubm9kZVR5cGV9Y2F0Y2goeil7Yj1udWxsO2JyZWFrIGF9dmFyIGY9MCxnPS0xLGg9LTEsaz0wLHE9MCx2PWEseT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHU7Oyl7diE9PWJ8fDAhPT1kJiYzIT09di5ub2RlVHlwZXx8KGc9ZitkKTt2IT09ZXx8MCE9PWMmJjMhPT12Lm5vZGVUeXBlfHwoaD1mK2MpOzM9PT12Lm5vZGVUeXBlJiYoZis9di5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHU9di5maXJzdENoaWxkKSlicmVhazt5PXY7dj11fWZvcig7Oyl7aWYodj09PWEpYnJlYWsgYjt5PT09YiYmKytrPT09ZCYmKGc9Zik7eT09PWUmJisrcT09PWMmJihoPWYpO2lmKG51bGwhPT0odT12Lm5leHRTaWJsaW5nKSlicmVhazt2PXk7eT12LnBhcmVudE5vZGV9dj11fWI9LTE9PT1nfHwtMT09PWg/bnVsbDpcbntzdGFydDpnLGVuZDpofX1lbHNlIGI9bnVsbH1iPWJ8fHtzdGFydDowLGVuZDowfX1lbHNlIGI9bnVsbDtNZz17Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpifTt1ZCghMSl9LHJlc2V0QWZ0ZXJDb21taXQ6ZnVuY3Rpb24oKXt2YXIgYT1NZyxiPWRhKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmZmEoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihLZChjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKHdpbmRvdy5nZXRTZWxlY3Rpb24pe2I9d2luZG93LmdldFNlbGVjdGlvbigpO3ZhciBlPWNbRWIoKV0ubGVuZ3RoO2E9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2E6TWF0aC5taW4oZC5lbmQsZSk7IWIuZXh0ZW5kJiZhPlxuZCYmKGU9ZCxkPWEsYT1lKTtlPUpkKGMsYSk7dmFyIGY9SmQoYyxkKTtpZihlJiZmJiYoMSE9PWIucmFuZ2VDb3VudHx8Yi5hbmNob3JOb2RlIT09ZS5ub2RlfHxiLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxiLmZvY3VzTm9kZSE9PWYubm9kZXx8Yi5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSl7dmFyIGc9ZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtnLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCk7Yi5yZW1vdmVBbGxSYW5nZXMoKTthPmQ/KGIuYWRkUmFuZ2UoZyksYi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KGcuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksYi5hZGRSYW5nZShnKSl9fWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO2lhKGMpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPVxuYS50b3B9TWc9bnVsbDt1ZCh4Zyk7eGc9bnVsbH0sY3JlYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCxlKXthPW5nKGEsYixjLGQpO2FbUV09ZTthW29iXT1iO3JldHVybiBhfSxhcHBlbmRJbml0aWFsQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLmFwcGVuZENoaWxkKGIpfSxmaW5hbGl6ZUluaXRpYWxDaGlsZHJlbjpmdW5jdGlvbihhLGIsYyxkKXtwZyhhLGIsYyxkKTthOntzd2l0Y2goYil7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjphPSEhYy5hdXRvRm9jdXM7YnJlYWsgYX1hPSExfXJldHVybiBhfSxwcmVwYXJlVXBkYXRlOmZ1bmN0aW9uKGEsYixjLGQsZSl7cmV0dXJuIHNnKGEsYixjLGQsZSl9LHNob3VsZFNldFRleHRDb250ZW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT1cbnR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJzdHJpbmdcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH0sc2hvdWxkRGVwcmlvcml0aXplU3VidHJlZTpmdW5jdGlvbihhLGIpe3JldHVybiEhYi5oaWRkZW59LGNyZWF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkKXthPW9nKGEsYik7YVtRXT1kO3JldHVybiBhfSxub3c6cmYsbXV0YXRpb246e2NvbW1pdE1vdW50OmZ1bmN0aW9uKGEpe2EuZm9jdXMoKX0sY29tbWl0VXBkYXRlOmZ1bmN0aW9uKGEsYixjLGQsZSl7YVtvYl09ZTt0ZyhhLGIsYyxkLGUpfSxyZXNldFRleHRDb250ZW50OmZ1bmN0aW9uKGEpe2EudGV4dENvbnRlbnQ9XCJcIn0sY29tbWl0VGV4dFVwZGF0ZTpmdW5jdGlvbihhLGIsYyl7YS5ub2RlVmFsdWU9Y30sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLmFwcGVuZENoaWxkKGIpfSxhcHBlbmRDaGlsZFRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsXG5iKXs4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYSk6YS5hcHBlbmRDaGlsZChiKX0saW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKGEsYixjKXthLmluc2VydEJlZm9yZShiLGMpfSxpbnNlcnRJbkNvbnRhaW5lckJlZm9yZTpmdW5jdGlvbihhLGIsYyl7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShiLGMpOmEuaW5zZXJ0QmVmb3JlKGIsYyl9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKGEsYil7YS5yZW1vdmVDaGlsZChiKX0scmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyOmZ1bmN0aW9uKGEsYil7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpOmEucmVtb3ZlQ2hpbGQoYil9fSxoeWRyYXRpb246e2Nhbkh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3JldHVybiAxIT09YS5ub2RlVHlwZXx8Yi50b0xvd2VyQ2FzZSgpIT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YX0sY2FuSHlkcmF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLFxuYil7cmV0dXJuXCJcIj09PWJ8fDMhPT1hLm5vZGVUeXBlP251bGw6YX0sZ2V0TmV4dEh5ZHJhdGFibGVTaWJsaW5nOmZ1bmN0aW9uKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9LGdldEZpcnN0SHlkcmF0YWJsZUNoaWxkOmZ1bmN0aW9uKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX0saHlkcmF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXthW1FdPWY7YVtvYl09YztyZXR1cm4gdWcoYSxiLGMsZSxkKX0saHlkcmF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7YVtRXT1jO3JldHVybiB2ZyhhLGIpfSxkaWROb3RNYXRjaEh5ZHJhdGVkQ29udGFpbmVyVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RNYXRjaEh5ZHJhdGVkVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fSxcbmRpZE5vdEh5ZHJhdGVDb250YWluZXJJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90SHlkcmF0ZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lckluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lclRleHRJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9fSxzY2hlZHVsZURlZmVycmVkQ2FsbGJhY2s6c2YsY2FuY2VsRGVmZXJyZWRDYWxsYmFjazp0Zix1c2VTeW5jU2NoZWR1bGluZzohMH0pO3JjPVouYmF0Y2hlZFVwZGF0ZXM7XG5mdW5jdGlvbiBQZyhhLGIsYyxkLGUpe05nKGMpP3ZvaWQgMDpFKFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKVoudXBkYXRlQ29udGFpbmVyKGIsZixhLGUpO2Vsc2V7ZD1kfHxPZyhjKTtpZighZClmb3IoZj12b2lkIDA7Zj1jLmxhc3RDaGlsZDspYy5yZW1vdmVDaGlsZChmKTt2YXIgZz1aLmNyZWF0ZUNvbnRhaW5lcihjLGQpO2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWc7Wi51bmJhdGNoZWRVcGRhdGVzKGZ1bmN0aW9uKCl7Wi51cGRhdGVDb250YWluZXIoYixnLGEsZSl9KX1yZXR1cm4gWi5nZXRQdWJsaWNSb290SW5zdGFuY2UoZil9ZnVuY3Rpb24gUWcoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtOZyhiKT92b2lkIDA6RShcIjIwMFwiKTtyZXR1cm4gcGYoYSxiLG51bGwsYyl9XG5mdW5jdGlvbiBSZyhhLGIpe3RoaXMuX3JlYWN0Um9vdENvbnRhaW5lcj1aLmNyZWF0ZUNvbnRhaW5lcihhLGIpfVJnLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXtaLnVwZGF0ZUNvbnRhaW5lcihhLHRoaXMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsLGIpfTtSZy5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXtaLnVwZGF0ZUNvbnRhaW5lcihudWxsLHRoaXMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsLGEpfTtcbnZhciBTZz17Y3JlYXRlUG9ydGFsOlFnLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKGIpcmV0dXJuIFouZmluZEhvc3RJbnN0YW5jZShiKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/RShcIjE4OFwiKTpFKFwiMjEzXCIsT2JqZWN0LmtleXMoYSkpfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUGcobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFBnKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/RShcIjM4XCIpOnZvaWQgMDtyZXR1cm4gUGcoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7TmcoYSk/dm9pZCAwOlxuRShcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFoudW5iYXRjaGVkVXBkYXRlcyhmdW5jdGlvbigpe1BnKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOlFnLHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOnRjLHVuc3RhYmxlX2RlZmVycmVkVXBkYXRlczpaLmRlZmVycmVkVXBkYXRlcyxmbHVzaFN5bmM6Wi5mbHVzaFN5bmMsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50UGx1Z2luSHViOm1iLEV2ZW50UGx1Z2luUmVnaXN0cnk6VmEsRXZlbnRQcm9wYWdhdG9yczpDYixSZWFjdENvbnRyb2xsZWRDb21wb25lbnQ6cWMsUmVhY3RET01Db21wb25lbnRUcmVlOnNiLFJlYWN0RE9NRXZlbnRMaXN0ZW5lcjp4ZH19O1xuWi5pbmplY3RJbnRvRGV2VG9vbHMoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnBiLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMi4wXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7dmFyIFRnPU9iamVjdC5mcmVlemUoe2RlZmF1bHQ6U2d9KSxVZz1UZyYmU2d8fFRnO21vZHVsZS5leHBvcnRzPVVnW1wiZGVmYXVsdFwiXT9VZ1tcImRlZmF1bHRcIl06VWc7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjIuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlPYmplY3RcIikscD1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXSxyPXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyx0PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY2FsbFwiKTo2MDEwNCx1PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucmV0dXJuXCIpOjYwMTA1LHY9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsdz1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnRcXHgzZFwiK2EsYz0wO2M8YjtjKyspZSs9XCJcXHgyNmFyZ3NbXVxceDNkXCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTtiPUVycm9yKGUrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtiLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7Yi5mcmFtZXNUb1BvcD0xO3Rocm93IGI7fVxudmFyIHo9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEEoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en1BLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0EucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT95KFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07QS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBCKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPW47dGhpcy51cGRhdGVyPWV8fHp9ZnVuY3Rpb24gQygpe31DLnByb3RvdHlwZT1BLnByb3RvdHlwZTt2YXIgRD1CLnByb3RvdHlwZT1uZXcgQztELmNvbnN0cnVjdG9yPUI7bShELEEucHJvdG90eXBlKTtELmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO2Z1bmN0aW9uIEUoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en12YXIgRj1FLnByb3RvdHlwZT1uZXcgQztGLmNvbnN0cnVjdG9yPUU7bShGLEEucHJvdG90eXBlKTtGLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudD0hMDtGLnJlbmRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3BzLmNoaWxkcmVufTt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsZSl7dmFyIGMsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilILmNhbGwoYixjKSYmIUkuaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxsPTA7bDxmO2wrKyloW2xdPWFyZ3VtZW50c1tsKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnIsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19ZnVuY3Rpb24gSyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cn1cbmZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCJcXHgzZFwiOlwiXFx4M2QwXCIsXCI6XCI6XCJcXHgzZDJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIEw9L1xcLysvZyxNPVtdO2Z1bmN0aW9uIE4oYSxiLGUsYyl7aWYoTS5sZW5ndGgpe3ZhciBkPU0ucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1mdW5jdGlvbiBPKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+TS5sZW5ndGgmJk0ucHVzaChhKX1cbmZ1bmN0aW9uIFAoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHI6Y2FzZSB0OmNhc2UgdTpjYXNlIHY6Zz0hMH19aWYoZylyZXR1cm4gZShjLGEsXCJcIj09PWI/XCIuXCIrUShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitRKGQsayk7Zys9UChkLGYsZSxjKX1lbHNlIGlmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGE/Zj1udWxsOihmPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1cbmYuY2FsbChhKSxrPTA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1EoZCxrKyspLGcrPVAoZCxmLGUsYyk7ZWxzZVwib2JqZWN0XCI9PT1kJiYoZT1cIlwiK2EseShcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWU/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZSxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gUShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gUihhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBTKGEsYixlKXt2YXIgYz1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1QoYSxjLGUscC50aGF0UmV0dXJuc0FyZ3VtZW50KTpudWxsIT1hJiYoSyhhKSYmKGI9ZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTCxcIiRcXHgyNi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6cix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFQoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTCxcIiRcXHgyNi9cIikrXCIvXCIpO2I9TihiLGcsYyxkKTtudWxsPT1hfHxQKGEsXCJcIixTLGIpO08oYil9XG52YXIgVT17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtUKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1OKG51bGwsbnVsbCxiLGUpO251bGw9PWF8fFAoYSxcIlwiLFIsYik7TyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/MDpQKGEsXCJcIixwLnRoYXRSZXR1cm5zTnVsbCxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtUKGEsYixudWxsLHAudGhhdFJldHVybnNBcmd1bWVudCk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7SyhhKT92b2lkIDA6eShcIjE0M1wiKTtyZXR1cm4gYX19LENvbXBvbmVudDpBLFB1cmVDb21wb25lbnQ6Qix1bnN0YWJsZV9Bc3luY0NvbXBvbmVudDpFLEZyYWdtZW50OncsY3JlYXRlRWxlbWVudDpKLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7dmFyIGM9bSh7fSxhLnByb3BzKSxcbmQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSC5jYWxsKGIsaCkmJiFJLmhhc093blByb3BlcnR5KGgpJiYoY1toXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWMuY2hpbGRyZW49ZTtlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIGw9MDtsPGg7bCsrKWZbbF09YXJndW1lbnRzW2wrMl07Yy5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpyLHR5cGU6YS50eXBlLGtleTpkLHJlZjpnLHByb3BzOmMsX293bmVyOmt9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxcbmlzVmFsaWRFbGVtZW50OkssdmVyc2lvbjpcIjE2LjIuMFwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpHLGFzc2lnbjptfX0sVj1PYmplY3QuZnJlZXplKHtkZWZhdWx0OlV9KSxXPVYmJlV8fFY7bW9kdWxlLmV4cG9ydHM9V1tcImRlZmF1bHRcIl0/V1tcImRlZmF1bHRcIl06VztcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50byArIFwiIFwiICsgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xyXG5cdHRocm93IG5ldyBFcnJvcihcImRlZmluZSBjYW5ub3QgYmUgdXNlZCBpbmRpcmVjdFwiKTtcclxufTtcclxuIiwiLyogZ2xvYmFscyBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXyAqL1xyXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19hbWRfb3B0aW9uc19fO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgQ2FyZEl0ZW1Db250YWluZXIgZnJvbSAnLi9pdGVtcy9DYXJkSXRlbUNvbnRhaW5lci5qcyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9jYXJkLmNzcyc7XG5pbXBvcnQgJy4vLi4vY2FyZHMvdGhlbWUvY2FyZC10aGVtZXMuY3NzJztcblxuY2xhc3MgQ2FyZCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBzaGFwZUNsYXNzZXMgPSBjbGFzc05hbWVzLmJpbmQoc3R5bGVzKSgnY2FyZC1zaGFwZScsIHtcbiAgICAgICAgICAgIGxhbmRzY2FwZTogJ2xhbmRzY2FwZScgPT09IHRoaXMucHJvcHMuY2FyZC5zaGFwZSxcbiAgICAgICAgfSwgdGhpcy5wcm9wcy5jYXJkLnRoZW1lKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzaGFwZUNsYXNzZXN9PlxuICAgICAgICAgICAgICAgIDxDYXJkSXRlbUNvbnRhaW5lciBjb250YWluZXI9e3RoaXMucHJvcHMuY2FyZC5jb250ZW50fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5cbkNhcmQuZGVmYXVsdFByb3BzID0ge1xuICAgIGNhcmQ6IHtjb250ZW50OiBbXX1cbn07XG5cbkNhcmQucHJvcFR5cGVzID0ge1xuICAgIGNhcmQ6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQ2FyZEl0ZW1Db250YWluZXJFZGl0b3IgZnJvbSAnLi8uLi9pdGVtcy9DYXJkSXRlbUNvbnRhaW5lckVkaXRvcic7XG5pbXBvcnQgQ2FyZFRoZW1lU2VsZWN0b3IgZnJvbSAnLi8uLi90aGVtZS9DYXJkVGhlbWVTZWxlY3Rvcic7XG5cbmNsYXNzIENhcmRFZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5oYW5kbGVDYXJkQ2hhbmdlID0gdGhpcy5oYW5kbGVDYXJkQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudXBkYXRlQ2FyZENvbnRlbnQgPSB0aGlzLnVwZGF0ZUNhcmRDb250ZW50LmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBjYXJkID0gdGhpcy5wcm9wcy5jYXJkO1xuICAgICAgICBjb25zdCBjYXJkSXRlbXMgPSBjYXJkLmNvbnRlbnQgfHwgW107XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxmb3JtIGNsYXNzTmFtZT1cImNhcmQtZWRpdG9yXCI+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y2FyZC5uYW1lfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDYXJkQ2hhbmdlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPENhcmRUaGVtZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgIGNhcmQ9e2NhcmR9XG4gICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlPXt0aGlzLmhhbmRsZUNhcmRDaGFuZ2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8Q2FyZEl0ZW1Db250YWluZXJFZGl0b3JcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyPXtjYXJkSXRlbXN9XG4gICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlPXt0aGlzLnVwZGF0ZUNhcmRDb250ZW50fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgaGFuZGxlQ2FyZENoYW5nZSh7dGFyZ2V0fSkge1xuICAgICAgICBsZXQgY2FyZCA9IHRoaXMucHJvcHMuY2FyZDtcbiAgICAgICAgY2FyZFt0YXJnZXQubmFtZV0gPSB0YXJnZXQudmFsdWU7XG5cbiAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZShjYXJkKTtcbiAgICB9XG5cbiAgICB1cGRhdGVDYXJkQ29udGVudChjb250ZW50KSB7XG4gICAgICAgIGNvbnN0IGNhcmQgPSB0aGlzLnByb3BzLmNhcmQ7XG4gICAgICAgIGNhcmQuY29udGVudCA9IGNvbnRlbnQ7XG5cbiAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZShjYXJkKTtcbiAgICB9XG59XG5cbkNhcmRFZGl0b3IucHJvcFR5cGVzID0ge1xuICAgIGNhcmQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZEVkaXRvcjtcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IENhcmRFZGl0b3IgZnJvbSAnLi9DYXJkRWRpdG9yJztcbmltcG9ydCBDYXJkIGZyb20gJy4vLi4vQ2FyZCc7XG5cbmNsYXNzIEVkaXRhYmxlQ2FyZCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY2FyZDogcHJvcHMuY2FyZCxcbiAgICAgICAgICAgIGVkaXRNb2RlOiBwcm9wcy5lZGl0TW9kZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9uVXBkYXRlQ2FyZCA9IHRoaXMub25VcGRhdGVDYXJkLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudG9nZ2xlRWRpdE1vZGUgPSB0aGlzLnRvZ2dsZUVkaXRNb2RlLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgb25VcGRhdGVDYXJkKGNhcmQpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y2FyZDogY2FyZH0pO1xuICAgIH1cblxuICAgIHRvZ2dsZUVkaXRNb2RlKCkge1xuICAgICAgICBjb25zdCB1cGRhdGVkRWRpdE1vZGUgPSB0aGlzLmlzRWRpdGFibGUoKSA/ICdyZWFkb25seSc6ICdlZGl0JyA7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2VkaXRNb2RlOiB1cGRhdGVkRWRpdE1vZGV9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGNhcmQgPSB0aGlzLnN0YXRlLmNhcmQ7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtY29udGFpbmVyLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtY29udGFpbmVyLWl0ZW0tbmFtZVwiPntjYXJkLm5hbWV9PC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtY29udGFpbmVyLWl0ZW0tdG9vbGJhclwiPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLnRvZ2dsZUVkaXRNb2RlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmlzRWRpdGFibGUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ0xlY3R1cmUgc2V1bGUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnw4lkaXRlcid9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLmFkZENhcmQoY2FyZCl9PkR1cGxpcXVlcjwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9J2J1dHRvbicgb25DbGljaz17KCkgPT4gdGhpcy5wcm9wcy5yZW1vdmVDYXJkKGNhcmQpfT5TdXBwcmltZXI8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxDYXJkIGNhcmQ9e2NhcmR9Lz5cblxuICAgICAgICAgICAgICAgIHt0aGlzLmlzRWRpdGFibGUoKSAmJlxuICAgICAgICAgICAgICAgIDxDYXJkRWRpdG9yIGNhcmQ9e2NhcmR9IG9uVXBkYXRlPXt0aGlzLm9uVXBkYXRlQ2FyZH0vPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIGlzRWRpdGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmVkaXRNb2RlID09PSAnZWRpdCc7XG4gICAgfVxufVxuXG5FZGl0YWJsZUNhcmQucHJvcFR5cGVzID0ge1xuICAgIGNhcmQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBlZGl0TW9kZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhZGRDYXJkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHJlbW92ZUNhcmQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRhYmxlQ2FyZDtcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IHtDYXJkSXRlbVR5cGVzfSBmcm9tICcuL0NhcmRJdGVtVHlwZXMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vY2FyZC1pdGVtLWNvbnRhaW5lci5jc3MnO1xuXG5jbGFzcyBDYXJkSXRlbUNvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gcHJvcHMuY29udGFpbmVyIHx8IFtdO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgY2FyZEl0ZW1zID0gdGhpcy5jb250YWluZXIubWFwKChpdGVtLCBpbmRleCkgPT5cbiAgICAgICAgICAgIDxDYXJkSXRlbSBjbGFzc05hbWU9e3N0eWxlc1snY2FyZC1pdGVtJ119IGtleT17aW5kZXh9IGl0ZW09e2l0ZW19Lz5cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY2FyZH0+XG4gICAgICAgICAgICAgICAge2NhcmRJdGVtc31cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuQ2FyZEl0ZW1Db250YWluZXIucHJvcFR5cGVzID0ge1xuICAgIGNvbnRhaW5lcjogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IENhcmRJdGVtID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3QgaXRlbSA9IHByb3BzLml0ZW07XG4gICAgY29uc3QgSXRlbUhhbmRsZXIgPSBDYXJkSXRlbVR5cGVzW2l0ZW0udHlwZV0udmlldyB8fCBEZWZhdWx0Q2FyZEl0ZW07XG4gICAgcmV0dXJuIDxJdGVtSGFuZGxlciB7Li4ucHJvcHN9IC8+O1xufTtcblxuY29uc3QgRGVmYXVsdENhcmRJdGVtID0gKCkgPT4ge1xuICAgIHJldHVybiA8ZGl2PkVtcHR5PC9kaXY+O1xufTtcblxuQ2FyZEl0ZW0ucHJvcFR5cGVzID0ge1xuICAgIGl0ZW06IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZEl0ZW1Db250YWluZXI7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBDYXJkSXRlbUVkaXRvciBmcm9tICcuL0NhcmRJdGVtRWRpdG9yJztcblxuY2xhc3MgQ2FyZEl0ZW1Db250YWluZXJFZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLmNyZWF0ZUl0ZW0gPSB0aGlzLmNyZWF0ZUl0ZW0uYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5yZW1vdmVJdGVtID0gdGhpcy5yZW1vdmVJdGVtLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudXBkYXRlSXRlbSA9IHRoaXMudXBkYXRlSXRlbS5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIGNyZWF0ZUl0ZW0oKSB7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMucHJvcHMuY29udGFpbmVyO1xuXG4gICAgICAgIGNvbnRhaW5lci5wdXNoKHtcbiAgICAgICAgICAgIHR5cGU6ICd0aXRsZScsXG4gICAgICAgICAgICBjb250ZW50OiAnJ1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKGNvbnRhaW5lcik7XG4gICAgfVxuXG4gICAgcmVtb3ZlSXRlbShpdGVtKSB7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMucHJvcHMuY29udGFpbmVyO1xuICAgICAgICBjb25zdCBpdGVtSW5kZXggPSBjb250YWluZXIuaW5kZXhPZihpdGVtKTtcbiAgICAgICAgY29udGFpbmVyLnNwbGljZShpdGVtSW5kZXgsIDEpO1xuXG4gICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUoY29udGFpbmVyKTtcbiAgICB9XG5cbiAgICB1cGRhdGVJdGVtKCkge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnByb3BzLmNvbnRhaW5lcjtcbiAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZShjb250YWluZXIpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5wcm9wcy5jb250YWluZXI7XG5cbiAgICAgICAgY29uc3QgY2FyZEl0ZW1JbnB1dHMgPSBjb250YWluZXIubWFwKChpdGVtLCBpbmRleCkgPT5cbiAgICAgICAgICAgIDxDYXJkSXRlbUVkaXRvciBrZXk9e2luZGV4fSBpdGVtPXtpdGVtfSBvblVwZGF0ZT17dGhpcy51cGRhdGVJdGVtfSBvblJlbW92ZT17dGhpcy5yZW1vdmVJdGVtfS8+XG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1pdGVtLWNvbnRhaW5lci1lZGl0b3JcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLmNyZWF0ZUl0ZW19Pis8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8ZmllbGRzZXQ+XG4gICAgICAgICAgICAgICAgICAgIHtjYXJkSXRlbUlucHV0c31cbiAgICAgICAgICAgICAgICA8L2ZpZWxkc2V0PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5DYXJkSXRlbUNvbnRhaW5lckVkaXRvci5wcm9wVHlwZXMgPSB7XG4gICAgY29udGFpbmVyOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZEl0ZW1Db250YWluZXJFZGl0b3I7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7Q2FyZEl0ZW1UeXBlc30gZnJvbSAnLi9DYXJkSXRlbVR5cGVzJztcbmltcG9ydCBDYXJkSXRlbVR5cGVTZWxlY3RvciBmcm9tICcuL0NhcmRJdGVtVHlwZVNlbGVjdG9yJztcblxuY2xhc3MgQ2FyZEl0ZW1FZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLnByb3BzLml0ZW07XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaXRlbS1lZGl0b3JcIj5cbiAgICAgICAgICAgICAgICA8Q2FyZEl0ZW1UeXBlU2VsZWN0b3IgaXRlbT17aXRlbX0gb25VcGRhdGU9e3RoaXMucHJvcHMub25VcGRhdGV9Lz5cbiAgICAgICAgICAgICAgICA8Q2FyZEl0ZW1JbnB1dCBpdGVtPXtpdGVtfSBvblVwZGF0ZT17dGhpcy5wcm9wcy5vblVwZGF0ZX0vPlxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9eygpID0+IHRoaXMucHJvcHMub25SZW1vdmV9Pi08L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuQ2FyZEl0ZW1FZGl0b3IucHJvcFR5cGVzID0ge1xuICAgIGl0ZW06IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBvblJlbW92ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgQ2FyZEl0ZW1JbnB1dCA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGl0ZW0gPSBwcm9wcy5pdGVtO1xuXG4gICAgY29uc3QgSW5wdXRJdGVtSGFuZGxlciA9IENhcmRJdGVtVHlwZXNbaXRlbS50eXBlXS5pbnB1dCB8fCBEZWZhdWx0Q2FyZEl0ZW07XG4gICAgcmV0dXJuIDxJbnB1dEl0ZW1IYW5kbGVyIGl0ZW09e2l0ZW19IG9uVXBkYXRlPXtwcm9wcy5vblVwZGF0ZX0vPjtcbn07XG5cbmNvbnN0IERlZmF1bHRDYXJkSXRlbSA9ICgpID0+IHtcbiAgICByZXR1cm4gPGRpdj5FbXB0eTwvZGl2Pjtcbn07XG5cbkNhcmRJdGVtSW5wdXQucHJvcFR5cGVzID0ge1xuICAgIGl0ZW06IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWQsXG4gICAgb25VcGRhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRJdGVtRWRpdG9yO1xuIiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQge0NhcmRJdGVtVHlwZXN9IGZyb20gJy4vQ2FyZEl0ZW1UeXBlcyc7XG5cbmNsYXNzIENhcmRJdGVtVHlwZVNlbGVjdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBpdGVtOiBwcm9wcy5pdGVtXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaGFuZGxlVHlwZUNoYW5nZSA9IHRoaXMuaGFuZGxlVHlwZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm9uVXBkYXRlID0gcHJvcHMub25VcGRhdGU7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5zdGF0ZS5pdGVtO1xuXG4gICAgICAgIGNvbnN0IHR5cGVzT3B0aW9ucyA9IENhcmRJdGVtVHlwZXMudmFsdWVzKChrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKDxvcHRpb24ga2V5PXtrZXl9IHZhbHVlPXtrZXl9Pnt2YWx1ZS5sYWJlbH08L29wdGlvbj4pO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHNlbGVjdCB2YWx1ZT17aXRlbS50eXBlfSBvbkNoYW5nZT17dGhpcy5oYW5kbGVUeXBlQ2hhbmdlfT5cbiAgICAgICAgICAgICAgICB7dHlwZXNPcHRpb25zfVxuICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgaGFuZGxlVHlwZUNoYW5nZShldmVudCkge1xuICAgICAgICBsZXQgaXRlbSA9IHRoaXMuc3RhdGUuaXRlbTtcbiAgICAgICAgaXRlbS50eXBlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXG4gICAgICAgIHRoaXMudXBkYXRlSXRlbShpdGVtKTtcbiAgICB9XG5cbiAgICB1cGRhdGVJdGVtKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBpdGVtOiBpdGVtXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm9uVXBkYXRlKGl0ZW0pO1xuICAgIH1cblxufVxuXG5DYXJkSXRlbVR5cGVTZWxlY3Rvci5wcm9wVHlwZXMgPSB7XG4gICAgaXRlbTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZEl0ZW1UeXBlU2VsZWN0b3I7XG4iLCJpbXBvcnQgQ2FyZFRpdGxlIGZyb20gJy4vdGl0bGUvQ2FyZFRpdGxlJztcbmltcG9ydCBDYXJkVGl0bGVJbnB1dCBmcm9tICcuL3RpdGxlL0NhcmRUaXRsZUlucHV0JztcbmltcG9ydCBDYXJkRmllbGQgZnJvbSAnLi9maWVsZC9DYXJkRmllbGQnO1xuaW1wb3J0IENhcmRGaWVsZElucHV0IGZyb20gJy4vZmllbGQvQ2FyZEZpZWxkSW5wdXQnO1xuaW1wb3J0IENhcmRUZXh0IGZyb20gJy4vdGV4dC9DYXJkVGV4dCc7XG5pbXBvcnQgQ2FyZFRleHRJbnB1dCBmcm9tICcuL3RleHQvQ2FyZFRleHRJbnB1dCc7XG5cbmNvbnN0IF9DYXJkSXRlbVR5cGVzID0ge1xuXG4gICAgdGl0bGU6IHtcbiAgICAgICAgbGFiZWw6ICdUaXRyZScsXG4gICAgICAgIGlucHV0OiBDYXJkVGl0bGVJbnB1dCxcbiAgICAgICAgdmlldzogQ2FyZFRpdGxlXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICAgIGxhYmVsOiAnVGV4dGUgbG9uZycsXG4gICAgICAgIGlucHV0OiBDYXJkVGV4dElucHV0LFxuICAgICAgICB2aWV3OiBDYXJkVGV4dFxuICAgIH0sXG4gICAgZmllbGQ6IHtcbiAgICAgICAgbGFiZWw6ICdDbMOpL1ZhbGV1cicsXG4gICAgICAgIGlucHV0OiBDYXJkRmllbGRJbnB1dCxcbiAgICAgICAgdmlldzogQ2FyZEZpZWxkXG4gICAgfVxufTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KF9DYXJkSXRlbVR5cGVzLCAndmFsdWVzJywge1xuICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICB2YWx1ZTogKG1hcEVhY2gpID0+IE9iamVjdC5lbnRyaWVzKF9DYXJkSXRlbVR5cGVzKS5tYXAoKFtuYW1lLCB2YWx1ZV0pID0+IHtcbiAgICAgICAgcmV0dXJuIG1hcEVhY2gobmFtZSwgdmFsdWUpO1xuICAgIH0pXG59KTtcblxuZXhwb3J0IGNvbnN0IENhcmRJdGVtVHlwZXMgPSBPYmplY3QuZnJlZXplKF9DYXJkSXRlbVR5cGVzKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9jYXJkLWl0ZW0tY29udGFpbmVyLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC1pdGVtLWNvbnRhaW5lci5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9jYXJkLWl0ZW0tY29udGFpbmVyLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2NhcmQtZmllbGQuY3NzJztcblxuY2xhc3MgQ2FyZEZpZWxkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuaXRlbSA9IHByb3BzLml0ZW07XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5pdGVtO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlc1snY2FyZC1maWVsZC1jb250YWluZXInXX0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlc1snY2FyZC1maWVsZC1oZWFkZXInXX0+e2l0ZW0uaGVhZGVyfTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXNbJ2NhcmQtZmllbGQtc2VwYXJhdG9yJ119Lz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzWydjYXJkLWZpZWxkLXZhbHVlJ119PntpdGVtLmNvbnRlbnR9PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkNhcmRGaWVsZC5wcm9wVHlwZXMgPSB7XG4gICAgaXRlbTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgaGVhZGVyOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgICAgIGNvbnRlbnQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRGaWVsZDtcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgQ2FyZEZpZWxkSW5wdXQgZXh0ZW5kcyBDb21wb25lbnR7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgaXRlbTogcHJvcHMuaXRlbVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmhhbmRsZUhlYWRlckNoYW5nZSA9IHRoaXMuaGFuZGxlSGVhZGVyQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuaGFuZGxlVmFsdWVDaGFuZ2UgPSB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgaXRlbSA9IHRoaXMuc3RhdGUuaXRlbTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1pbnB1dC1maWVsZFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHZhbHVlPXtpdGVtLmhlYWRlcn0gb25DaGFuZ2U9eyB0aGlzLmhhbmRsZUhlYWRlckNoYW5nZSB9IC8+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9e2l0ZW0uY29udGVudH0gb25DaGFuZ2U9eyB0aGlzLmhhbmRsZVZhbHVlQ2hhbmdlIH0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxuICAgIGhhbmRsZUhlYWRlckNoYW5nZShldmVudCkge1xuICAgICAgICBsZXQgaXRlbSA9IHRoaXMuc3RhdGUuaXRlbTtcbiAgICAgICAgaXRlbS5oZWFkZXIgPSBldmVudC50YXJnZXQudmFsdWU7XG5cbiAgICAgICAgdGhpcy51cGRhdGVJdGVtKGl0ZW0pO1xuICAgIH1cblxuICAgIGhhbmRsZVZhbHVlQ2hhbmdlKGV2ZW50KSB7XG4gICAgICAgIGxldCBpdGVtID0gdGhpcy5zdGF0ZS5pdGVtO1xuICAgICAgICBpdGVtLmNvbnRlbnQgPSBldmVudC50YXJnZXQudmFsdWU7XG5cbiAgICAgICAgdGhpcy51cGRhdGVJdGVtKGl0ZW0pO1xuICAgIH1cblxuICAgIHVwZGF0ZUl0ZW0oaXRlbSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaXRlbTogaXRlbVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZShpdGVtKTtcbiAgICB9XG59XG5cblxuQ2FyZEZpZWxkSW5wdXQucHJvcFR5cGVzID0ge1xuICAgIGl0ZW06IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIGhlYWRlcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgICAgICBjb250ZW50OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZEZpZWxkSW5wdXQ7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC1maWVsZC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQtZmllbGQuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC1maWVsZC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9jYXJkLXRleHQuY3NzJztcblxuY2xhc3MgQ2FyZFRleHQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5pdGVtID0gcHJvcHMuaXRlbTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLml0ZW07XG4gICAgICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9e3N0eWxlc1snY2FyZC10ZXh0J119PntpdGVtLmNvbnRlbnR9PC9kaXY+KTtcbiAgICB9XG59XG5cbkNhcmRUZXh0LnByb3BUeXBlcyA9IHtcbiAgICBpdGVtOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICBjb250ZW50OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkVGV4dDtcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgQ2FyZFRleHRJbnB1dCBleHRlbmRzIENvbXBvbmVudHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBpdGVtOiBwcm9wcy5pdGVtXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaGFuZGxlVGV4dENoYW5nZSA9IHRoaXMuaGFuZGxlVGV4dENoYW5nZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm9uVXBkYXRlID0gcHJvcHMub25VcGRhdGU7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5zdGF0ZS5pdGVtO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWlucHV0LXRleHRcIj5cbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgdmFsdWU9e2l0ZW0uY29udGVudH0gb25DaGFuZ2U9eyB0aGlzLmhhbmRsZVRleHRDaGFuZ2UgfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgaGFuZGxlVGV4dENoYW5nZShldmVudCkge1xuICAgICAgICBsZXQgaXRlbSA9IHRoaXMuc3RhdGUuaXRlbTtcbiAgICAgICAgaXRlbS5jb250ZW50ID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuXG4gICAgICAgIHRoaXMudXBkYXRlSXRlbShpdGVtKTtcbiAgICB9XG5cbiAgICB1cGRhdGVJdGVtKGl0ZW0pe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGl0ZW06IGl0ZW1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub25VcGRhdGUoaXRlbSk7XG4gICAgfVxufVxuXG5DYXJkVGV4dElucHV0LnByb3BUeXBlcyA9IHtcbiAgICBpdGVtOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICBjb250ZW50OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkLFxuICAgIG9uVXBkYXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkVGV4dElucHV0O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQtdGV4dC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQtdGV4dC5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9jYXJkLXRleHQuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vY2FyZC10aXRsZS5jc3MnO1xuXG5jbGFzcyBDYXJkVGl0bGUgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLml0ZW0gPSBwcm9wcy5pdGVtO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuaXRlbTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlc1snY2FyZC10aXRsZSddfT5cbiAgICAgICAgICAgICAgICB7aXRlbS5jb250ZW50fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5DYXJkVGl0bGUucHJvcFR5cGVzID0ge1xuICAgIGl0ZW06IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIGNvbnRlbnQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRUaXRsZTtcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgQ2FyZFRpdGxlSW5wdXQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGl0ZW06IHByb3BzLml0ZW1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVUaXRsZUNoYW5nZSA9IHRoaXMuaGFuZGxlVGl0bGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5vblVwZGF0ZSA9IHByb3BzLm9uVXBkYXRlO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuc3RhdGUuaXRlbTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1pbnB1dC10aXRsZVwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHZhbHVlPXtpdGVtLmNvbnRlbnR9IG9uQ2hhbmdlPXt0aGlzLmhhbmRsZVRpdGxlQ2hhbmdlfS8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBoYW5kbGVUaXRsZUNoYW5nZShldmVudCkge1xuICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5zdGF0ZS5pdGVtO1xuICAgICAgICBpdGVtLmNvbnRlbnQgPSBldmVudC50YXJnZXQudmFsdWU7XG5cbiAgICAgICAgdGhpcy51cGRhdGVJdGVtKGl0ZW0pO1xuICAgIH1cblxuICAgIHVwZGF0ZUl0ZW0oaXRlbSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGl0ZW06IGl0ZW1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub25VcGRhdGUoaXRlbSk7XG4gICAgfVxufVxuXG5DYXJkVGl0bGVJbnB1dC5wcm9wVHlwZXMgPSB7XG4gICAgaXRlbTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgY29udGVudDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZFRpdGxlSW5wdXQ7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC10aXRsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQtdGl0bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZC10aXRsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNsYXNzIENhcmRJbXBvcnRlciBleHRlbmRzIENvbXBvbmVudHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlID0gdGhpcy5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5maWxlSW1wb3J0ZXIgPSB0aGlzLmNyZWF0ZUZpbGVJbXBvcnRlcihwcm9wcy5vbkltcG9ydCk7XG4gICAgfVxuXG4gICAgY3JlYXRlRmlsZUltcG9ydGVyKG9uSW1wb3J0KSB7XG4gICAgICAgIGxldCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBjYXJkcyA9IEpTT04ucGFyc2UoZXZlbnQudGFyZ2V0LnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgb25JbXBvcnQoY2FyZHMpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgaW1wb3J0IGZpbGUnKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHJlYWRlcjtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiBvbkNoYW5nZT17KHt0YXJnZXQ6IHtmaWxlc319KSA9PiB0aGlzLmhhbmRsZUNoYW5nZShmaWxlcyl9Lz5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBoYW5kbGVDaGFuZ2Uoc2VsZWN0b3JGaWxlcykge1xuICAgICAgICBBcnJheS5mcm9tKHNlbGVjdG9yRmlsZXMpLmZvckVhY2goZmlsZSA9PiB0aGlzLmltcG9ydEZpbGUoZmlsZSkpO1xuICAgIH1cblxuICAgIGltcG9ydEZpbGUoZmlsZSkge1xuICAgICAgICB0aGlzLmZpbGVJbXBvcnRlci5yZWFkQXNUZXh0KGZpbGUsICdVVEYtOCcpO1xuICAgIH1cbn1cblxuQ2FyZEltcG9ydGVyLnByb3BUeXBlcyA9IHtcbiAgICBvbkltcG9ydDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZEltcG9ydGVyO1xuIiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IENhcmRJbXBvcnRlciBmcm9tICcuL0NhcmRJbXBvcnRlci5qcyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9jYXJkTGlzdENvbnRhaW5lci5jc3MnO1xuaW1wb3J0IEVkaXRhYmxlQ2FyZCBmcm9tICcuLy4uL2NyZWF0aW9uL0VkaXRhYmxlQ2FyZCc7XG5cbmNsYXNzIENhcmRMaXN0Q29udGFpbmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjYXJkczogcHJvcHMuY2FyZHMsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuY3JlYXRlQ2FyZCA9IHRoaXMuY3JlYXRlQ2FyZC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnJlbW92ZUNhcmQgPSB0aGlzLnJlbW92ZUNhcmQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5hZGRDYXJkID0gdGhpcy5hZGRDYXJkLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuYWRkQ2FyZHMgPSB0aGlzLmFkZENhcmRzLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMub25VcGRhdGVDb250YWluZXIgPSBwcm9wcy5vblVwZGF0ZUNvbnRhaW5lcjtcbiAgICB9XG5cbiAgICB1cGRhdGVDb250YWluZXIoY2FyZHMpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y2FyZHN9KTtcbiAgICAgICAgdGhpcy5vblVwZGF0ZUNvbnRhaW5lcihjYXJkcyk7XG4gICAgfVxuXG4gICAgY3JlYXRlQ2FyZCgpIHtcbiAgICAgICAgY29uc3QgYU5ld0NhcmQgPSB7XG4gICAgICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgICAgIHRoZW1lOiAnJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6IFtdXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYWRkQ2FyZChhTmV3Q2FyZCk7XG4gICAgfVxuXG4gICAgYWRkQ2FyZChjYXJkKSB7XG4gICAgICAgIHRoaXMuYWRkQ2FyZHMoW2NhcmRdKTtcbiAgICB9XG5cbiAgICBhZGRDYXJkcyhjYXJkcykge1xuICAgICAgICB0aGlzLnVwZGF0ZUNvbnRhaW5lcihbLi4udGhpcy5zdGF0ZS5jYXJkcywgLi4uY2FyZHNdKTtcbiAgICB9XG5cbiAgICByZW1vdmVDYXJkKGNhcmQpIHtcbiAgICAgICAgbGV0IGNhcmRzID0gdGhpcy5zdGF0ZS5jYXJkcztcbiAgICAgICAgbGV0IGNhcmRJbmRleCA9IGNhcmRzLmluZGV4T2YoY2FyZCk7XG4gICAgICAgIGNhcmRzLnNwbGljZShjYXJkSW5kZXgsIDEpO1xuICAgICAgICB0aGlzLnVwZGF0ZUNvbnRhaW5lcihjYXJkcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBjYXJkcyA9IHRoaXMuc3RhdGUuY2FyZHM7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gY2FyZHMubWFwKChjYXJkLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgPEVkaXRhYmxlQ2FyZFxuICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgY2FyZD17Y2FyZH1cbiAgICAgICAgICAgICAgICBhZGRDYXJkPXt0aGlzLmFkZENhcmR9XG4gICAgICAgICAgICAgICAgcmVtb3ZlQ2FyZD17dGhpcy5yZW1vdmVDYXJkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzWydjYXJkLWNvbnRhaW5lciddfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzWydjYXJkLWNvbnRhaW5lci10b29sYmFyJ119PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLmNyZWF0ZUNhcmR9Pis8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPENhcmRJbXBvcnRlciBvbkltcG9ydD17dGhpcy5hZGRDYXJkc30vPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXNbJ2NhcmQtY29udGFpbmVyLWl0ZW1zJ119PlxuICAgICAgICAgICAgICAgICAgICB7aXRlbXN9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj4pO1xuICAgIH1cbn1cblxuQ2FyZExpc3RDb250YWluZXIucHJvcFR5cGVzID0ge1xuICAgIGNhcmRzOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZUNvbnRhaW5lcjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZExpc3RDb250YWluZXI7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY2FyZExpc3RDb250YWluZXIuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9jYXJkTGlzdENvbnRhaW5lci5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9jYXJkTGlzdENvbnRhaW5lci5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBDYXJkVGhlbWVzVHlwZXMgZnJvbSAnLi9DYXJkVGhlbWVzVHlwZXMuanMnO1xuXG5jbGFzcyBDYXJkVGhlbWVTZWxlY3RvciBleHRlbmRzIENvbXBvbmVudCB7XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8c2VsZWN0IG5hbWU9J3RoZW1lJyB2YWx1ZT17dGhpcy5wcm9wcy5jYXJkLnRoZW1lfSBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblVwZGF0ZX0+XG4gICAgICAgICAgICAgICAge09iamVjdC52YWx1ZXMoQ2FyZFRoZW1lc1R5cGVzKS5tYXAoKG8sIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDxvcHRpb24ga2V5PXtrZXl9IHZhbHVlPXtvLm5hbWV9PntvLmxhYmVsfTwvb3B0aW9uPik7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuQ2FyZFRoZW1lU2VsZWN0b3IucHJvcFR5cGVzID0ge1xuICAgIGNhcmQ6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBvblVwZGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZFRoZW1lU2VsZWN0b3I7XG4iLCJjb25zdCBDYXJkVGhlbWVzVHlwZXMgPSB7XG5cbiAgICBkZWZhdWx0OiB7XG4gICAgICAgIG5hbWU6ICcnLFxuICAgICAgICBsYWJlbDogJy0nXG4gICAgfSxcbiAgICBhY3Rpb246IHtcbiAgICAgICAgbmFtZTogJ2FjdGlvbicsXG4gICAgICAgIGxhYmVsOiAnQWN0aW9uJ1xuICAgIH0sXG4gICAgYWJpbGl0eToge1xuICAgICAgICBuYW1lOiAnYWJpbGl0eScsXG4gICAgICAgIGxhYmVsOiAnQXB0aXR1ZGUnXG4gICAgfSxcblxuICAgIHdoaXRlOiB7XG4gICAgICAgIG5hbWU6ICd3aGl0ZScsXG4gICAgICAgIGxhYmVsOiAnQmxhbmMnXG4gICAgfSxcbiAgICBncmVlbjoge1xuICAgICAgICBuYW1lOiAnZ3JlZW4nLFxuICAgICAgICBsYWJlbDogJ1ZlcnQnXG4gICAgfSxcbiAgICBibHVlOiB7XG4gICAgICAgIG5hbWU6ICdibHVlJyxcbiAgICAgICAgbGFiZWw6ICdCbHVlJ1xuICAgIH0sXG4gICAgcmVkOiB7XG4gICAgICAgIG5hbWU6ICdyZWQnLFxuICAgICAgICBsYWJlbDogJ1JvdWdlJ1xuICAgIH0sXG4gICAgY3lhbjoge1xuICAgICAgICBuYW1lOiAnY3lhbicsXG4gICAgICAgIGxhYmVsOiAnQ3lhbidcbiAgICB9LFxuICAgIG1hZ2VudGE6IHtcbiAgICAgICAgbmFtZTogJ21hZ2VudGEnLFxuICAgICAgICBsYWJlbDogJ01hZ2VudGEnXG4gICAgfSxcbiAgICB5ZWxsb3c6IHtcbiAgICAgICAgbmFtZTogJ3llbGxvdycsXG4gICAgICAgIGxhYmVsOiAnSmF1bmUnXG4gICAgfSxcbiAgICBncmVlbkxpZ2h0OiB7XG4gICAgICAgIG5hbWU6ICdncmVlbi1saWdodCcsXG4gICAgICAgIGxhYmVsOiAnVmVydCBjbGFpcidcbiAgICB9LFxuICAgIGJsdWVMaWdodDoge1xuICAgICAgICBuYW1lOiAnYmx1ZS1saWdodCcsXG4gICAgICAgIGxhYmVsOiAnQmxldSBjbGFpcidcbiAgICB9LFxuICAgIHJlZExpZ2h0OiB7XG4gICAgICAgIG5hbWU6ICdyZWQtbGlnaHQnLFxuICAgICAgICBsYWJlbDogJ1JvdWdlIGNsYWlyJ1xuICAgIH0sXG4gICAgeWVsbG93TGlnaHQ6IHtcbiAgICAgICAgbmFtZTogJ3llbGxvdy1saWdodCcsXG4gICAgICAgIGxhYmVsOiAnSmF1bmUgY2xhaXInXG4gICAgfSxcbiAgICByZWRHcmF5OiB7XG4gICAgICAgIG5hbWU6ICdyZWQtZ3JheScsXG4gICAgICAgIGxhYmVsOiAnUm91Z2UgZ3JpcydcbiAgICB9LFxuICAgIGdyZWVuTGl6YXJkOiB7XG4gICAgICAgIG5hbWU6ICdncmVlbi1saXphcmQnLFxuICAgICAgICBsYWJlbDogJ1ZlcnQgTMOpemFyZCdcbiAgICB9XG5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRUaGVtZXNUeXBlcztcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9jYXJkLXRoZW1lcy5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQtdGhlbWVzLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NhcmQtdGhlbWVzLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IENhcmRMaXN0Q29udGFpbmVyIGZyb20gJy4vLi4vY2FyZHMvbGlzdC9DYXJkTGlzdCc7XG5pbXBvcnQgQ29kZXhUb29sYmFyIGZyb20gJy4vQ29kZXhUb29sYmFyJztcblxuY2xhc3MgQ29kZXggZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNvZGV4OiB7XG4gICAgICAgICAgICAgICAgbmFtZTogcHJvcHMubmFtZSxcbiAgICAgICAgICAgICAgICBjYXJkczogcHJvcHMuY2FyZHMgfHwgW11cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy51cGRhdGVDb2RleCA9IHRoaXMudXBkYXRlQ29kZXguYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy51cGRhdGVDYXJkcyA9IHRoaXMudXBkYXRlQ2FyZHMuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICB1cGRhdGVDb2RleChjb2RleCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtjb2RleH0pO1xuICAgIH1cblxuICAgIHVwZGF0ZUNhcmRzKGNhcmRzKSB7XG4gICAgICAgIGxldCBjb2RleCA9IHRoaXMuc3RhdGUuY29kZXg7XG4gICAgICAgIGNvZGV4LmNhcmRzID0gY2FyZHM7XG4gICAgICAgIHRoaXMudXBkYXRlQ29kZXgoY29kZXgpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgY29kZXggPSB0aGlzLnN0YXRlLmNvZGV4O1xuICAgICAgICBjb25zdCBjYXJkcyA9IGNvZGV4LmNhcmRzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2NvZGV4Jz5cbiAgICAgICAgICAgICAgICA8aDE+e2NvZGV4Lm5hbWV9PC9oMT5cbiAgICAgICAgICAgICAgICA8Q29kZXhUb29sYmFyIG9uTG9hZENvZGV4PXsoKSA9PiBjb2RleH0vPlxuICAgICAgICAgICAgICAgIDxDYXJkTGlzdENvbnRhaW5lciBjYXJkcz17Y2FyZHN9IG9uVXBkYXRlQ29udGFpbmVyPXt0aGlzLnVwZGF0ZUNhcmRzfS8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkNvZGV4LnByb3BUeXBlcyA9IHtcbiAgICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgY2FyZHM6IFByb3BUeXBlcy5hcnJheVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29kZXg7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBGaWxlU2F2ZXIgZnJvbSAnZmlsZS1zYXZlcic7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jbGFzcyBDb2RleEV4cG9ydGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuZXhwb3J0Q2FyZHMgPSB0aGlzLmV4cG9ydENhcmRzLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17dGhpcy5leHBvcnRDYXJkc30+U2F1dmVyPC9idXR0b24+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZXhwb3J0Q2FyZHMoKSB7XG4gICAgICAgIGNvbnN0IGNvZGV4ID0gdGhpcy5sb2FkQ29kZXgoKTtcbiAgICAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFt0aGlzLnRvRXhwb3J0Q29udGVudChjb2RleCldLCB7dHlwZTogJ3RleHQvanNvbjtjaGFyc2V0PXV0Zi04J30pO1xuICAgICAgICBGaWxlU2F2ZXIuc2F2ZUFzKGJsb2IsIHRoaXMudG9FeHBvcnROYW1lKCkpO1xuICAgIH1cblxuICAgIGxvYWRDb2RleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMub25Mb2FkQ29kZXgoKTtcbiAgICB9XG5cbiAgICB0b0V4cG9ydENvbnRlbnQoY29kZXgpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGNvZGV4LmNhcmRzKTtcbiAgICB9XG5cbiAgICB0b0V4cG9ydE5hbWUoY29kZXgpIHtcbiAgICAgICAgcmV0dXJuIGNvZGV4Lm5hbWUgKyAnLmpzb24nO1xuICAgIH1cbn1cblxuQ29kZXhFeHBvcnRlci5wcm9wVHlwZXMgPSB7XG4gICAgb25Mb2FkQ29kZXg6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvZGV4RXhwb3J0ZXI7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBDb2RleEV4cG9ydGVyIGZyb20gJy4vQ29kZXhFeHBvcnRlci5qcyc7XG5pbXBvcnQgRGVja0J1dHRvbiBmcm9tICcuLi9kZWNrL0RlY2tCdXR0b24uanMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vY29kZXguY3NzJztcblxuY2xhc3MgQ29kZXhUb29sYmFyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMub25Mb2FkQ29kZXggPSBwcm9wcy5vbkxvYWRDb2RleDtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzWydjb2RleC10b29sYmFyJ119PlxuICAgICAgICAgICAgICAgIDxDb2RleEV4cG9ydGVyIG9uTG9hZENvZGV4PXt0aGlzLm9uTG9hZENvZGV4fS8+XG4gICAgICAgICAgICAgICAgPERlY2tCdXR0b24gbGFiZWw9XCJJbXByaW1lciBDb2RleFwiIG9uTG9hZERlY2s9e3RoaXMub25Mb2FkQ29kZXh9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuQ29kZXhUb29sYmFyLnByb3BUeXBlcyA9IHtcbiAgICBvbkxvYWRDb2RleDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29kZXhUb29sYmFyO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2NvZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY29kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vY29kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL3NjcmVlbi5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL3NjcmVlbi5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9zY3JlZW4uY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jYXJkcy9DYXJkLmpzJztcbmltcG9ydCAnLi9kZWNrLmNzcyc7XG5cbmNsYXNzIERlY2sgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBjYXJkcyA9IHRoaXMucHJvcHMuY2FyZHMubWFwKChpdGVtLCBpbmRleCkgPT5cbiAgICAgICAgICAgIDxDYXJkIGtleT17aW5kZXh9IGNhcmQ9e2l0ZW19Lz5cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGVja1wiPlxuICAgICAgICAgICAgICAgIHtjYXJkc31cbiAgICAgICAgICAgIDwvZGl2Pik7XG4gICAgfVxufVxuXG5EZWNrLnByb3BUeXBlcyA9IHtcbiAgICBjYXJkczogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERlY2s7XG4iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBEZWNrIGZyb20gJy4vRGVjay5qcyc7XG5pbXBvcnQgUG9wdXBCdXR0b24gZnJvbSAnLi4vcG9wdXAvUG9wdXBCdXR0b24nO1xuXG5jbGFzcyBEZWNrQnV0dG9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMubG9hZERlY2sgPSB0aGlzLmxvYWREZWNrLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgbG9hZERlY2soKXtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMub25Mb2FkRGVjaygpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgZGVjayA9IHRoaXMubG9hZERlY2soKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxQb3B1cEJ1dHRvbiBsYWJlbD17dGhpcy5wcm9wcy5sYWJlbH0gbmFtZT17ZGVjay5uYW1lfT5cbiAgICAgICAgICAgICAgICA8RGVjayBjYXJkcz17ZGVjay5jYXJkc30vPlxuICAgICAgICAgICAgPC9Qb3B1cEJ1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkRlY2tCdXR0b24ucHJvcFR5cGVzID0ge1xuICAgIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgb25Mb2FkRGVjazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgRGVja0J1dHRvbjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9kZWNrLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vZGVjay5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9kZWNrLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IENvZGV4IGZyb20gJy4vY29kZXgvQ29kZXguanMnO1xuXG5pbXBvcnQgJy4vY3NzL3NjcmVlbi5jc3MnO1xuXG5sb2FkQ29kZXgoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NoZWx2ZXMtcm9vdCcpLFxuICAgICdTcGjDqXJpZXInLFxuICAgICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGUtZGFsZS9za2lsbHMtc3BoZXJlL3NwaGVyZXMuYWxsL21haW4vYWxsLnNwaGVyZXMnKTtcblxuZnVuY3Rpb24gbG9hZENvZGV4KGRvbSwgbmFtZSwgdXJsKSB7XG4gICAgZmV0Y2godXJsKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICBkaXNwbGF5Q29kZXgoZG9tLCBuYW1lLCBkYXRhKTtcbiAgICAgICAgfSk7XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlDb2RleChkb20sIG5hbWUsIGRhdGEpIHtcbiAgICBSZWFjdERPTS5yZW5kZXIoXG4gICAgICAgIDxDb2RleFxuICAgICAgICAgICAgbmFtZT17bmFtZX1cbiAgICAgICAgICAgIGNhcmRzPXtkYXRhfVxuICAgICAgICAvPixcbiAgICAgICAgZG9tXG4gICAgKTtcbn1cbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jbGFzcyBQb3B1cEJ1dHRvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLm9wZW5Qb3B1cCA9IHRoaXMub3BlblBvcHVwLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLm9wZW5Qb3B1cH0+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMubGFiZWx9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBvcGVuUG9wdXAoKSB7XG4gICAgICAgIGNvbnN0IHBvcHVwID0gd2luZG93Lm9wZW4oJycsICcnLCAnd2lkdGg9ODAwLGhlaWdodD04MDAsbGVmdD0yMDAsdG9wPTIwMCcpO1xuICAgICAgICB0aGlzLmNvcHlTdHlsZXMoZG9jdW1lbnQsIHBvcHVwLmRvY3VtZW50KTtcblxuICAgICAgICBjb25zdCBwb3B1cERvYyA9IHBvcHVwLmRvY3VtZW50O1xuICAgICAgICBjb25zdCBwb3B1cFN0eWxlU2hlZXQgPSBwb3B1cERvYy5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICBBcnJheS5mcm9tKFtcbiAgICAgICAgICAgICdib2R5IHttYXJnaW46IDA7YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7fScsXG4gICAgICAgICAgICAnYm9keSAqIHt2aXNpYmlsaXR5OiBoaWRkZW47fScsXG4gICAgICAgICAgICAnI3BvcHVwLXJvb3QgKiB7dmlzaWJpbGl0eTogdmlzaWJsZTt9JyxcbiAgICAgICAgICAgICdAcGFnZSB7bWFyZ2luOiA4bW07fSdcbiAgICAgICAgXSlcbiAgICAgICAgICAgIC5tYXAoKGNzc1J1bGUpID0+IHBvcHVwRG9jLmNyZWF0ZVRleHROb2RlKGNzc1J1bGUpKVxuICAgICAgICAgICAgLmZvckVhY2goKGNzc1J1bGUpID0+IHBvcHVwU3R5bGVTaGVldC5hcHBlbmRDaGlsZChjc3NSdWxlKSk7XG5cbiAgICAgICAgcG9wdXBEb2MuaGVhZC5hcHBlbmRDaGlsZChwb3B1cFN0eWxlU2hlZXQpO1xuXG5cbiAgICAgICAgY29uc3QgcG9wdXBSb290ID0gcG9wdXBEb2MuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHBvcHVwUm9vdC5pZCA9ICdwb3B1cC1yb290JztcbiAgICAgICAgcG9wdXBEb2MuYm9keS5hcHBlbmRDaGlsZChwb3B1cFJvb3QpO1xuXG4gICAgICAgIFJlYWN0RE9NLnJlbmRlcih0aGlzLnByb3BzLmNoaWxkcmVuLCBwb3B1cFJvb3QpO1xuICAgIH1cblxuICAgIGNvcHlTdHlsZXMoc291cmNlRG9jLCB0YXJnZXREb2MpIHtcbiAgICAgICAgQXJyYXkuZnJvbShzb3VyY2VEb2Muc3R5bGVTaGVldHMpXG4gICAgICAgICAgICAubWFwKHN0eWxlU2hlZXQgPT4gdGhpcy5jb3B5U3R5bGUoc3R5bGVTaGVldCwgdGFyZ2V0RG9jKSlcbiAgICAgICAgICAgIC5mb3JFYWNoKChzdHlsZVNoZWV0KSA9PiB0YXJnZXREb2MuaGVhZC5hcHBlbmRDaGlsZChzdHlsZVNoZWV0KSk7XG4gICAgfVxuXG4gICAgY29weVN0eWxlKHN0eWxlU2hlZXQsIHRhcmdldERvYykge1xuICAgICAgICBpZiAoc3R5bGVTaGVldC5jc3NSdWxlcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29weVN0eWxlRWxlbWVudCh0YXJnZXREb2MsIHN0eWxlU2hlZXQpO1xuICAgICAgICB9IGVsc2UgaWYgKHN0eWxlU2hlZXQuaHJlZikge1xuICAgICAgICAgICAgcmV0dXJuIFBvcHVwQnV0dG9uLmNvcHlTdHlsZUxpbmsodGFyZ2V0RG9jLCBzdHlsZVNoZWV0KTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgY29weVN0eWxlRWxlbWVudCh0YXJnZXREb2MsIHN0eWxlU2hlZXQpIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0U3R5bGVTaGVldCA9IHRhcmdldERvYy5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICBBcnJheS5mcm9tKHN0eWxlU2hlZXQuY3NzUnVsZXMpXG4gICAgICAgICAgICAubWFwKChjc3NSdWxlKSA9PiB0YXJnZXREb2MuY3JlYXRlVGV4dE5vZGUoY3NzUnVsZS5jc3NUZXh0KSlcbiAgICAgICAgICAgIC5mb3JFYWNoKChjc3NSdWxlKSA9PiB0YXJnZXRTdHlsZVNoZWV0LmFwcGVuZENoaWxkKGNzc1J1bGUpKTtcblxuICAgICAgICByZXR1cm4gdGFyZ2V0U3R5bGVTaGVldDtcbiAgICB9XG5cbiAgICBzdGF0aWMgY29weVN0eWxlTGluayh0YXJnZXREb2MsIHN0eWxlU2hlZXQpIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0U3R5bGVMaW5rID0gdGFyZ2V0RG9jLmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcbiAgICAgICAgdGFyZ2V0U3R5bGVMaW5rLnJlbCA9ICdzdHlsZXNoZWV0JztcbiAgICAgICAgdGFyZ2V0U3R5bGVMaW5rLmhyZWYgPSBzdHlsZVNoZWV0LmhyZWY7XG4gICAgICAgIHJldHVybiB0YXJnZXRTdHlsZUxpbms7XG4gICAgfVxufVxuXG5cblBvcHVwQnV0dG9uLnByb3BUeXBlcyA9IHtcbiAgICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuZWxlbWVudFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBCdXR0b247XG4iXSwic291cmNlUm9vdCI6IiJ9